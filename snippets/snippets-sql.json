{
	"Create SQL PROGRAMING": {
		"prefix": "csp",
		"body": [
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"/*",
			"\t[サブ機能  ] U117.U117カスタマイズ",
			"\t[機能ＩＤ  ] U117ZA01",
			"\t[機能名称  ] ③領域マスタIF取込",
			"\t[リビジョン] 1",
			"\t[関 数 名  ] p_Example",
			"\t[作 成 日  ] 2024/07/31",
			"\t[作 成 者  ] UNICCS/d-vu",
			"\t[更新履歴  ]",
			"*/",
			"",
			"CREATE OR REPLACE FUNCTION PXC_U117ZA01_001.p_Example (",
			"\ti_ImportNo\tIN\tVARCHAR",
			") RETURNS VOID AS $$",
			"/*",
			"$START",
			"$FUNCTION\\1",
			"\t店舗別分類マスタ取込を行います。",
			"$PAR\\1",
			"\t取込ファイル番号",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/",
			"DECLARE",
			"\tls_SqlErrMsg\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE := '';",
			"\tls_SqlState\t\tVARCHAR(5);",
			"",
			"BEGIN",
			"",
			"EXCEPTION",
			"\tWHEN OTHERS THEN",
			"\t\tSELECT  SQLSTATE\tINTO ls_SqlState;",
			"\t\tSELECT  SQLERRM\t\tINTO ls_SqlErrMsg;",
			"\t\tPERFORM PXS_STANDARD.p_NoticeError(",
			"\t\t\t'PXC_Example_001.p_Example.SYSTEMERROR',",
			"\t\t\tls_SqlState,",
			"\t\t\tls_SqlErrMsg",
			"\t\t);",
			"END;",
			"$$ LANGUAGE 'plpgsql';",
			"",
			"RESET CLIENT_ENCODING;"
		],
		"description": "Create SQL PROGRAMING"
	},
	"Get User Info": {
		"prefix": "lrec_UserInfo",
		"body": [
			"\tlrec_UserInfo\t\t\tRECORD;",
			"\tlrec_UserInfo\t:= PXS_USER.p_GetUserInfo();"
		],
		"description": "lrec_UserInfo"
	},
	"Truncate Table": {
		"prefix": "truncate",
		"body": [
			"",
			"TRUNCATE TABLE $1;",
			""
		],
		"description": "Truncate Table"
	},
	"Drop Table": {
		"prefix": "drop_table",
		"body": [
			"",
			"DROP TABLE IF EXISTS $1;",
			""
		],
		"description": "Drop Table"
	},
	"Query CSV LAYOUT IMPORT": {
		"prefix": "select_csvlayoutimport",
		"body": [
			"",
			"SELECT * FROM UMF_CSVFILEDEF WHERE CSVFILE_CD ='$1';",
			"",
			"",
			"SELECT * FROM UMF_CSVFILELAYOUTDEF WHERE CSVFILE_CD ='$2' AND COLUMNNAME ='COLUMN1_EXAMPLE';",
			"",
			"",
			"SELECT * FROM UMF_CSVFILEERRORCODEDEF WHERE CSVFILE_CD ='$3' AND ERROR_CD ='00001';",
			""
		],
		"description": "Drop Table"
	},
	"Query System Config": {
		"prefix": "select_systemconfig",
		"body": [
			"",
			"SELECT * FROM UMF_SYSTEMMODECONFIG WHERE CODE = '$1'",
			"",
			"SELECT * FROM UMF_SYSTEMCONFIG WHERE CODE = '$1'",
			""
		],
		"description": "Query System Config"
	},
	"Query Regex": {
		"prefix": "select_regex",
		"body": [
			"",
			"SELECT '-12312' ~ '^([-+])?[0-9]+$'",
			""
		],
		"description": "Query Regex"
	},
	"Query SP in tool": {
		"prefix": "select_SeeSP",
		"body": [
			"",
			"select  nspname                         as packagename,",
			"      proname                         as spname,",
			"      oidvectortypes(proargtypes)     as arguments_type,",
			"      pg_get_functiondef(f.oid)||';'  as content,",
			"      'drop function ' || nspname || '.' || proname || '(' || oidvectortypes(proargtypes) || ');' as dropsql",
			"from    pg_catalog.pg_proc f",
			"      inner join pg_catalog.pg_namespace n",
			"      on  (f.pronamespace = n.oid)",
			"where   UPPER(n.nspname) = 'PXC_C04_001'",
			"order by nspname, proname, arguments_type;",
			""
		],
		"description": "Query Regex"
	},
	"Query CSV LAYOUT EXPORT": {
		"prefix": "select_csvlayoutexport",
		"body": [
			"",
			"SELECT * FROM UMF_CSVFILEDEF WHERE CSVFILE_CD ='$1';",
			"",
			"SELECT * FROM UMF_CSVFILELAYOUTDEF WHERE CSVFILE_CD ='$1' AND COLUMNNAME ='SKU_CD';",
			""
		],
		"description": "Drop Table"
	},
	"Query CodeCategory": {
		"prefix": "select_codecategory",
		"body": [
			"",
			"SELECT * FROM UMF_CODECATEGORYDEF WHERE CODECATEGORY ='$1';",
			""
		],
		"description": "Drop Table"
	},
	"Query CodeDef": {
		"prefix": "select_codedef",
		"body": [
			"",
			"SELECT * FROM UMF_CODEDEF WHERE CODECATEGORY ='$1' AND CODE ='0';",
			""
		],
		"description": "Drop Table"
	},
	"Create Menu": {
		"prefix": "create_menu",
		"body": [
			"",
			"SELECT * FROM UMF_MENUDEF WHERE FUNC_CD = '$1';",
			"",
			"CREATE TEMPORARY TABLE TMP_MENU AS SELECT * FROM UMF_MENUDEF WHERE FUNC_CD = '$1' AND MENUPATTERN_CD = 'VTDEV1';",
			"",
			"",
			"SELECT MAX(MENUKEY) FROM UMF_MENUDEF;-- L蘯､Y GIﾃ? TR盻? MAX C盻ｦA MENUKEY",
			"-- Lﾆｰu ﾃｽ: Tﾃｪn menu khﾃｴng ﾄ柁ｰ盻｣c cﾃｳ space (k盻? c蘯｣ 1 byte l蘯ｫn 2 bytes)",
			"",
			"",
			"UPDATE TMP_MENU SET MENUKEY ='MAX MENUKEY + 1', NAME = 'XA02.TEST', FUNC_CD = 'XA02', SCREEN_CD = 'XA02';",
			"",
			"INSERT INTO UMF_MENUDEF SELECT * FROM TMP_MENU;",
			""
		],
		"description": "Create Menu"
	},
	"Create Schema": {
		"prefix": "create_schema",
		"body": [
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"DROP SCHEMA PXC_EA25_001 CASCADE;",
			"CREATE SCHEMA IF NOT EXISTS PXC_EA25_001 AUTHORIZATION NTUSER;",
			"COMMENT ON SCHEMA PXC_EA25_001",
			"IS '",
			"\t[サブ機能  ] EA.仕入",
			"\t[機能ＩＤ  ] EA25",
			"\t[機能名称  ] 仕入伝票取込",
			"\t[説明      ] 仕入伝票取込",
			"\t[リビジョン] 1",
			"\t[作 成 日  ] 2022/08/30",
			"\t[作 成 者  ] UNICCS/d-vu",
			"\t[関数一覧  ] 1.f_GetCompany_Cd",
			"\t             2.f_GetMasterData",
			"\t             3.f_GetTaxKngk",
			"\t             4.f_GetUserDenpKind",
			"\t             5.f_GetUserDenpType",
			"\t             6.p_CSVImportCheck",
			"\t             7.p_CSVEntry",
			"\t[更新履歴  ] ",
			"';",
			"",
			"RESET CLIENT_ENCODING;"
		],
		"description": "Create Schema"
	},
	"Create TYPE in sp": {
		"prefix": "create_type_in_sp",
		"body": [
			"-- マスタデータ格納用複合型",
			"DROP TYPE IF EXISTS PXC_EA25_001.MASTER_DATA_RECORD CASCADE;",
			"CREATE TYPE PXC_EA25_001.MASTER_DATA_RECORD AS (",
			"\tITEMATTRIBUTETYPE\t\tVARCHAR,\t\t\t\t-- 商品属性区分",
			"\tATTRIBUTECLASS1_CD\t\tVARCHAR,\t\t\t\t-- 属性分類１コード",
			"\tATTRIBUTECLASS2_CD\t\tVARCHAR,\t\t\t\t-- 属性分類２コード",
			"\tATTRIBUTECLASS3_CD\t\tVARCHAR,\t\t\t\t-- 属性分類３コード",
			"\tATTRIBUTECLASS4_CD\t\tVARCHAR,\t\t\t\t-- 属性分類４コード",
			"\tATTRIBUTECLASS5_CD\t\tVARCHAR,\t\t\t\t-- 属性分類５コード",
			"\tPARENTCLASS1_CD\t\t\tVARCHAR,\t\t\t\t-- 代表分類１コード",
			"\tPARENTCLASS2_CD\t\t\tVARCHAR,\t\t\t\t-- 代表分類２コード",
			"\tPARENTCLASS3_CD\t\t\tVARCHAR,\t\t\t\t-- 代表分類３コード",
			"\tPARENTCLASS4_CD\t\t\tVARCHAR,\t\t\t\t-- 代表分類４コード",
			"\tPARENTCLASS5_CD\t\t\tVARCHAR,\t\t\t\t-- 代表分類５コード",
			"\tPOSGNTNK\t\t\t\tNUMERIC,\t\t\t\t-- ＰＯＳ原価",
			"\tBITNK\t\t\t\t\tNUMERIC,\t\t\t\t-- 売単価",
			"\tPOSGNTNK_HIS\t\t\tNUMERIC,\t\t\t\t-- ＰＯＳ原価",
			"\tWHOLESALEGNTNK1\t\t\tNUMERIC,\t\t\t\t-- 庫卸原価金額",
			"\tNET1GNTNK1\t\t\t\tNUMERIC,\t\t\t\t-- 庫NET1原価金額",
			"\tNET2GNTNK1\t\t\t\tNUMERIC,\t\t\t\t-- 庫NET2原価金額",
			"\tORDERGNTNK1\t\t\t\tNUMERIC,\t\t\t\t-- 発注単価",
			"\tGNTNK\t\t\t\t\tNUMERIC\t\t\t\t\t-- 原単価",
			");"
		],
		"description": "Create TYPE in sp"
	},
	"Cach chay batch next10": {
		"prefix": "cach_chay_batch_next10",
		"body": [
			"aws ecs execute-command --cluster BatchCluster --task db06548e57794281b127cb6d68d07e79 --container ExportTask --interactive --command \"/bin/sh\""
		],
		"description": "Cach chay batch next10"
	},
	"Restart batch next10": {
		"prefix": "restart_batch_next10",
		"body": [
			"aws ecs update-service --force-new-deployment --service Batch-9005-new --cluster Batch-Cluster"
		],
		"description": "Restart batch next10"
	},
	"Error type aries vietsub": {
		"prefix": "error_type_aries_choice_report_vietsub",
		"body": [
			"仕様書未記載(Specifications not listed)   ========================>Thông số kỹ thuật không được liệt kê",
			"仕様書不明瞭(Unclear specification)    ========================>thông số kỹ thuật không rõ ràng",
			"指摘がおかしい(wrong point)   ========================>điểm sai",
			"仕様追加(Added specifications)    ========================>Đã thêm thông số kỹ thuật",
			"仕様変更(Specification change)    ========================>thay đổi thông số kỹ thuật",
			"仕様不備(Incomplete specifications)    ========================>thông số kỹ thuật không đầy đủ",
			"仕様解釈間違い(Misinterpretation of specifications)   ========================>Hiểu sai các thông số kỹ thuật",
			"開発ﾙｰﾙ理解不足(Lack of understanding of development rules)   ========================>Thiếu hiểu biết về các quy luật phát triển (dành cho người mới k hiểu quy luật).",
			"ﾃｽﾄｹｰｽ考慮漏れ(Omission of test case consideration)    ========================>Bỏ qua việc xem xét trường hợp thử nghiệm => nghĩa là check bị sót, test thiếu.",
			"ﾕｰｻﾞｰ目線不足(Lack of user perspective)    ========================>Thiếu quan điểm người dùng",
			"ﾃｽﾄ済／ｴﾋﾞﾃﾞﾝｽ未記載(Tested / Evidence not stated)   ========================>Đã kiểm tra / Bằng chứng không được nêu",
			"既存不具合(Existing bug)   ========================>lỗi hiện có",
			"",
			"",
			"仕様変更　=> Sửa thiết kế (chỗ đó có trong thiết kế rồi, nhưng họ bảo sửa, ví dụ cái 1, 2)",
			"仕様追加   => Thiết kế thêm yêu cầu (trước đó chưa có, giờ mới thêm, ví dụ thêm lỗi 0023)",
			"仕様書未記載  仕様書未記載  => Thiết kế ko ghi (Họ yêu cầu sửa, mà cái đó chưa có trong thiết kế, cũng chưa sửa thiết kế luôn)",
			"仕様書未記載  => Thiết kế ko ghi (Họ yêu cầu sửa, mà cái đó chưa có trong thiết kế, cũng chưa sửa thiết kế luôn)"
		],
		"description": "Error type aries vietsub"
	},
	"Account Infomation Server Samba VN": {
		"prefix": "account_infomation_password_server_samba_VN",
		"body": [
			"URL: \\192.168.1.211\\share",
			"d-vu",
			"DIgOhQ6l"
		],
		"description": "Account Infomation Server Samba VN"
	},
	"Account Infomation Server Samba JP": {
		"prefix": "account_infomation_password_server_samba_JP",
		"body": [
			"URL: \\172.28.2.45\\share",
			"d-vu",
			"M2KzbbGi"
		],
		"description": "Account Infomation Server Samba JP"
	},
	"Account Infomation Server SVN VN": {
		"prefix": "account_infomation_password_server_SVN_VN",
		"body": [
			"URL: http://192.168.1.211/svn/PROJECT/Next10.0/10.0/01.Source/",
			"d-vu",
			"DIgOhQ6l"
		],
		"description": "Account Infomation Server SVN VN"
	},
	"Deploy All Server": {
		"prefix": "deploy_all_server",
		"body": [
			"# change direction",
			"cd /home/ntuser/taurus/uniccs_work/release/function/d-vu",
			"",
			"# copy source from code function , delete config only dbms, delete schema, error defined.",
			"",
			"# run all server",
			"sh ~/taurus/bin/shell/release/svnFunctionRelease.sh d-vu 0 EA42"
		],
		"description": "Deploy All Server"
	},
	"Rule Align Column": {
		"prefix": "rule_align_column",
		"body": [
			"",
			"Codes = 'center aligned', names = 'left aligned', numbers = 'right aligned', date = 'center', codedef = 'left aligned'",
			""
		],
		"description": "ule Align Column"
	},
	"Rule check format": {
		"prefix": "rule_check_format",
		"body": [
			"",
			"STRING",
			"\nNUMBERSTRING\n\n: 1234                    000a",
			"\nSINGLEBYTESTRING\n: ab12ｱ                    あ",
			"\nMULTIBYTESTRING\n\n: １あア漢字ａ            1aｱ",
			"\nOPERATOR\n\n\n: ab12ｱ                    あ",
			"\n''\n\n\n\n\n: １あア漢字ａ1aｱ        ''",
			"",
			"NUMBER",
			"\nTELFAX            : 134-1                    12-a",
			"\nUNSIGNEDNUMBER    : 123                    -5, a１",
			"\nSIGNEDNUMBER    : -123                    ９",
			"\n''=SIGNEDNUMBER",
			"",
			"DATE, DATETIME:",
			"\nCHeck theo format : YYYYMMDD, a12",
			""
		],
		"description": "ule Align Column"
	},
	"Comment Params Sp": {
		"prefix": "get_comment_params",
		"body": [
			"/*",
			"$START",
			"$FUNCTION\\01",
			"\t開発スケジュール登録CSV取込データのチェックを行ないます。",
			"$PAR\\1",
			"\tユーザコード",
			"$PAR\\2",
			"\tサーバーコード",
			"$PAR\\3",
			"\tＣＳＶ取込バッチキー",
			"$PAR\\4",
			"\tＣＳＶファイルコード",
			"$PAR\\5",
			"\tチェックタイプ（1:更新前チェック、2:更新後チェック）",
			"$PAR\\6",
			"\tＣＳＶ取込タイプ（1:追加/更新、2:総入替、3:削除）",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/"
		],
		"description": "Comment Params Sp"
	},
	"Comment Params Header Sp": {
		"prefix": "get_comment_header",
		"body": [
			"",
			"/*",
			"\t[サブ機能  ] LH.カレンダーユーティリティ",
			"\t[機能ＩＤ  ] LH06",
			"\t[機能名称  ] カレンダーお知らせマスタ",
			"\t[リビジョン] 1",
			"\t[関数名    ] p_FormSearch",
			"\t[作 成 日  ] 2023/12/29",
			"\t[作 成 者  ] UNICCS/d-vu",
			"\t[更新履歴  ] ",
			"*/"
		],
		"description": "Comment Params Header Sp"
	},
	"Get Url Batch": {
		"prefix": "batchUrl",
		"body": [
			"",
			"-- reset batch",
			"cd /home/ntuser/taurus/bin/shell/framework/batch",
			"",
			"-- 窶ｻKi盻ノ tra batch cﾃｳ ﾄ疎ng ch蘯｡y hay khﾃｴng",
			"ps -ef | grep batch",
			"",
			"-- shutdown",
			"sh batchsv.sh -s",
			"",
			"-- start",
			"sh batchsv.sh &",
			"",
			"",
			"",
			"-- ===================================run batch directory==================================",
			"/bin/sh /home/nt200/taurus/bin/shell/framework/batch/tshbatchexec.sh true XX01:1:UpdateData STORE_CD=00001",
			"-- /bin/sh ${HOME}/taurus/bin/shell/framework/batch/tshbatchexec.sh true EA42:1:FileImport DIRECTORYNAME=${EXEC_PATH},FILENAME=${FILENAME_WEB},AFTERPROCESS_FUNC_CD=EA42,AFTERPROCESS_REVISIONNO=1,AFTERPROCESS_PROC_CD=ImportDeliveryData,OKFILE_FLAG=0,BYTESPLIT=979,IMPORTNO=${IFIMPORTNO}",
			"",
			"-- ===================================run batch from file shell============================",
			"",
			"-- change directory to container file shell",
			"cd /home/ntuser/taurus/bin/shell/user/ea",
			"",
			"-- run file shell",
			"sh tshea42001_import_shukka.sh",
			""
		],
		"description": "Get Url Batch"
	},
	"Command run batch shell script": {
		"prefix": "command_run_batch_shell_script_task",
		"body": [
			"",
			"\t/bin/sh /home/nt200/taurus/bin/shell/framework/batch/tshbatchexec.sh true XX01:1:UpdateData STORE_CD=00001",
			""
		],
		"description": "Command run batch shell script"
	},
	"Write Batch Log": {
		"prefix": "batchlog",
		"body": [
			"",
			"\tPERFORM PXS_BATCH.p_WriteBatchLog('Trace', 'DATA COUNT :' || ln_DataCount);",
			""
		],
		"description": "Write Batch Log"
	},
	"Call sp in tool have use PXS_BATCH.p_WriteBatchLog": {
		"prefix": "batch_Sp_Call_In_Tool",
		"body": [
			"",
			"-- PXS_BATCH.P_WRITEBATCHLOG Lﾃ HﾃM Dﾃ儂G ﾄ雪ｻ? GHI LOG KHI CH蘯?Y BATCH",
			"",
			"PXS_BATCH.P_WRITEBATCHLOG('TRACE', TO_CHAR(CLOCK_TIMESTAMP(), 'YYYY/MM/DD HH24:MI:SS') || '[' || LS_PROC_CD || '] ' || LN_DATACOUNT || '莉ｶ蜃ｦ逅?縲?');",
			"",
			"-- Dﾃ? TRﾃ劾 TOOL ( Vﾃ? D盻､ NHﾆｯ SQL EXPLORER ) Mﾃ君H ﾄ静? G盻栗 HﾃM PXS_USER.P_SETUSERINFO ﾄ雪ｻ? KH盻曵 T蘯?O SESSION USER INFO THﾃ? V蘯ｪN B盻? L盻蜂, Vﾃ? TRONG HﾃM NﾃY Cﾃ? Dﾃ儂G BATCH INFO",
			"-- Nﾃ劾 Mﾃ君H PH蘯｢I G盻栗 THﾃ凱 HﾃM PXS_BATCH.P_SETBATCHINFO ﾄ雪ｻ? KH盻曵 T蘯?O THﾃ年G TIN CHO BATCH",
			"",
			"SELECT PXS_USER.P_SETUSERINFO(",
			"        'U117',",
			"        'JA-JP',",
			"        'SYSTEM',",
			"        'TAKUYA',",
			"        '00001', ",
			"        '001',",
			"        '001',",
			"        'ENTRY',",
			"        '000001',",
			"        'TEST',",
			"        'TEST',",
			"        1,",
			"        0,",
			"        0",
			"    );",
			"",
			"SELECT PXS_BATCH.P_SETBATCHINFO('U117', NEXTVAL('SEQ_BATCHQUEUEKEY'), 'HEOS');",
			""
		],
		"description": "Call sp in tool have use PXS_BATCH.p_WriteBatchLog"
	},
	"Set Session User Info": {
		"prefix": "set_exists_session_userinfo",
		"body": [
			"",
			"SELECT PXS_USER.P_SETUSERINFO(",
			"        'U117',",
			"        'JA-JP',",
			"        'SYSTEM',",
			"        'TAKUYA',",
			"        '00001', ",
			"        '001',",
			"        '001',",
			"        'ENTRY',",
			"        '000001',",
			"        'TEST',",
			"        'TEST',",
			"        1,",
			"        0,",
			"        0",
			"    );",
			"",
			""
		],
		"description": "Set Session User Info"
	},
	"Convert DateTime To Character": {
		"prefix": "convert_date_time_to_character",
		"body": [
			"TO_CHAR(lrec_CheckDataNow.UPDDATETIME, 'YYYY/MM/DD HH24:MI:SS')"
		],
		"description": "Convert DateTime To Character"
	},
	"Convert Date To Character": {
		"prefix": "convert_date_to_character",
		"body": [
			"TO_CHAR(lrec_CheckDataNow.DATE 'YYYY/MM/DD')"
		],
		"description": "Convert Date To Character"
	},
	"Convert String To Date": {
		"prefix": "convert_string_to_date",
		"body": [
			"fx_ConvertStringToDate(i_Reflectdate, 'YYYY/MM/DD');"
		],
		"description": "Convert String To Date"
	},
	"EXCEPTION SQL PROGRAMING": {
		"prefix": "exception",
		"body": [
			"EXCEPTION\n\tWHEN RAISE_EXCEPTION THEN\n\t\tSELECT\tSQLERRM\tINTO ls_SqlErrMsg;\n\t\tPERFORM PXS_STANDARD.p_NoticeErrorExpansion(\n\t\t\t'ERROR',\n\t\t\t'',\n\t\t\tls_SqlErrMsg\n\t\t);\n\tWHEN OTHERS THEN\n\t\tSELECT\tSQLSTATE\tINTO ls_SqlState;\n\t\tSELECT\tSQLERRM\t\tINTO ls_SqlErrMsg;\n\t\tPERFORM PXS_STANDARD.p_NoticeError(\n\t\t\t'PXC_EXAMPLE_001.p_Example.SYSTEMERROR',\n\t\t\tls_SqlState,\n\t\t\tls_SqlErrMsg\n\t\t);"
		],
		"description": "EXCEPTION SQL PROGRAMING"
	},
	"Exception Message": {
		"prefix": "exception_message",
		"body": [
			"\t\t\tls_ExceptionMessage := PXS_STANDARD.f_GetResourceVal(\n\t\t\t\t'PXC_EXAMPLE_001.p_EXAMPLE.NAME_RESOURCE',\n\t\t\t\ti_Params1,\n\t\t\t\ti_Params2\n\t\t\t);\n\t\t\tRAISE '%', ls_ExceptionMessage USING ERRCODE = 'raise_exception';"
		],
		"description": "Exception Message"
	},
	"See port in window": {
		"prefix": "see_port_on_window",
		"body": [
			"netstat -a -n -o"
		],
		"description": "See port in window"
	},
	"process port in window": {
		"prefix": "see_port_process_ip_process_on_window",
		"body": [
			"netstat -a –n: check port dang dung",
			"netstat -ano | find “PortNumber” | find \"LISTENING\":tim ip dang su dung",
			"netstat -ano | findStr \"445\": find process id de lang nghe tren 1 cong.",
			"netstat -ab: check port dang dung",
			"ipconfig: xem dia chi ip",
			"ipconfig/flushdns: dung xoa cache",
			"taskkill /PID <process_id> /F: kill processid dang chay port.",
			"vd:taskkill /PID 19112 /F"
		],
		"description": "process port in window"
	},
	"Get Resource Value": {
		"prefix": "get_resource_value",
		"body": [
			"PXS_STANDARD.f_GetResourceVal('PXC_EXAMPLE_001.p_Example.NAME_RESOURCE', i_Params1, i_Params2);"
		],
		"description": "Get Resource Value"
	},
	"Create Cursor": {
		"prefix": "fetch",
		"body": [
			"\tlrec_Example\t\t\tTABLE_EXAMPLE%ROWTYPE;",
			"\tlcur_Example CURSOR FOR\n\t\tSELECT\t*\n\t\tFROM\tTABLE_EXAMPLE\n\t\tWHERE\\CONDITION_1\t= CONDITION_OTHER\n\t\tAND\t\\CONDITION_2\t\t\t= CONDITION_OTHER\n\t\tFOR UPDATE;",
			"\t\tOPEN lcur_Example;\n\t\tFETCH lcur_Example INTO lrec_Example;\n\t\t\t-- TO DO\n\t\t\t\n\t\tCLOSE lcur_Example;"
		],
		"description": "Create Cursor"
	},
	"Select data from json": {
		"prefix": "select_data_from_json",
		"body": [
			"\t\t\t\t\tSELECT\tVALUE ->> 'csvfile_cd'\t\t\tAS CSVFILE_CD,",
			"\t\t\t\t\t\t\tVALUE ->> 'createdatetimefrom'\tAS CREATEDATETIMEFROM,",
			"\t\t\t\t\t\t\tVALUE ->> 'createdatetimeto'\t\tAS CREATEDATETIMETO,",
			"\t\t\t\t\t\t\tVALUE ->> 'operator_cd'\t\t\tAS OPERATOR_CD,",
			"\t\t\t\t\t\t\tVALUE ->> 'status'\t\t\t\tAS STATUS,",
			"\t\t\t\t\t\t\tVALUE ->> 'filesname'\t\t\t\tAS FILESNAME,",
			"\t\t\t\t\t\t\tVALUE ->> 'filesize'\t\t\t\tAS FILESIZE,",
			"\t\t\t\t\t\t\tVALUE ->> 'downloaddatetime'\t\tAS DOWNLOADDATETIME,",
			"\t\t\t\t\t\t\tVALUE ->> 'filename'\t\t\t\tAS FILENAME,",
			"\t\t\t\t\t\t\tVALUE ->> 'directoryname'\t\t\tAS DIRECTORYNAME,",
			"\t\t\t\t\t\t\tVALUE ->> 'server_cd'\t\t\t\tAS SERVER_CD,",
			"\t\t\t\t\t\t\tVALUE ->> 'seqno'\t\t\t\t\tAS SEQNO,",
			"\t\t\t\t\t\t\tVALUE ->> 'company_cd'\t\t\tAS COMPANY_CD",
			"\t\t\t\t\tFROM\tJSONB_ARRAY_ELEMENTS(CURRENT_SETTING('UNICCS.TMP_AB95_FILEDOWNLOADDATA', TRUE)::JSONB)"
		],
		"description": "Select data from json"
	},
	"Account wifi info": {
		"prefix": "Account_wifi_info",
		"body": [
			"TK:.......jTW",
			"PASSWORD: *JT)BrESU:e73;jmym/?Ns@:#&o[O'5Jn.HouQ_p=j\"TgKs*eV5iqGt':_[4Dm:",
			"",
			"TK: UNICCS VN",
			"PASSWORD: P@$WOrd@99"
		],
		"description": "Account wifi info"
	},
	"Server batch next 10": {
		"prefix": "server_batch_next10",
		"body": [
			"172.28.8.152",
			"アクセスキー：nt-u117-dev-sework.pem",
			"http://192.168.1.211/svn/PROJECT/Next10.0/10.0/01.Source/CoreSystem/uniccs-aws/uniccs-cloudformation/common/ec2/nt-u117-dev-sework.pem"
		],
		"description": "Server batch next 10"
	},
	"Url folder test review learn next tarus": {
		"prefix": "url_path_review_learn_test_system_next_tarus",
		"body": [
			"D:\\reactjs\\test"
		],
		"description": "Url folder test review learn next tarus"
	},
	"Url folder tool reactjs type": {
		"prefix": "url_path_tool_reactjs_type",
		"body": [
			"D:\\reactjs\\projects\\personals\\phjmdinh_v3\\simple-react-snippets"
		],
		"description": "Url folder tool reactjs type"
	},
	"Url folder epclipse": {
		"prefix": "url_path_soft_epclipse",
		"body": [
			"D:\\reactjs\\test\\eclipse\\eclipse"
		],
		"description": "Url folder epclipse"
	},
	"Url folder project phjmdinh": {
		"prefix": "url_path_project_phjmdinh",
		"body": [
			"D:\\reactjs\\projects\\personals\\phjmdinh_v3"
		],
		"description": "Url folder project phjmdinh"
	},
	"Url folder testcase next10": {
		"prefix": "url_path_testcase_next10",
		"body": [
			"D:\\next tarus 10.0_v2\\10.0\\02.Testcase"
		],
		"description": "Url folder testcase next10"
	},
	"Url folder source function next10": {
		"prefix": "url_path_source_function_next10",
		"body": [
			"D:\\next tarus 10.0_v2\\10.0\\01.Source\\StandardFunction\\uniccs-function\\src\\function"
		],
		"description": "Url folder source function next10"
	},
	"Url folder source framework coresystem next10": {
		"prefix": "url_path_source_framework_coresystem",
		"body": [
			"D:\\next tarus 10.0_v2\\10.0\\01.Source\\CoreSystem"
		],
		"description": "Url folder source framework coresystem next10"
	},
	"Url folder source codecategory next10": {
		"prefix": "url_path_source_codecategory_next10",
		"body": [
			"D:\\next tarus 10.0_v2\\10.0\\04.DefineManagement\\01.コード種別定義"
		],
		"description": "Url folder source codecategory next10"
	},
	"Url folder source codecategory next10 U117": {
		"prefix": "url_path_source_codecategory_next10_U117",
		"body": [
			"D:\\next tarus 10.0_v2\\10.0\\01.Source\\Tool\\U117_本番環境の定義\\01.コード種別定義"
		],
		"description": "Url folder source codecategory next10 U117"
	},
	"Url folder source function sundrug": {
		"prefix": "url_path_source_function_sundrug",
		"body": [
			"D:\\sundrug\\1.Source\\Framework\\StandardFunction\\function"
		],
		"description": "Url folder source function sundrug"
	},
	"Url folder source function testcase sundrug": {
		"prefix": "url_path_source_testcase_sundrug",
		"body": [
			"D:\\sundrug\\2.Testcase"
		],
		"description": "Url folder source function testcase sundrug"
	},
	"Url folder source framework coresystem sundrug": {
		"prefix": "url_path_source_framework_coresystem",
		"body": [
			"D:\\sundrug\\1.Source\\Framework\\CoreSystem"
		],
		"description": "Url folder source framework coresystem sundrug"
	},
	"Url folder source function u138": {
		"prefix": "url_path_source_function_u138",
		"body": [
			"D:\\U138.Welcia\\01.Source"
		],
		"description": "Url folder source function u138"
	},
	"Url folder source function testcase u138": {
		"prefix": "url_path_source_testcase_u138",
		"body": [
			"D:\\U138.Welcia\\02.Testcase"
		],
		"description": "Url folder source function testcase u138"
	},
	"Url folder source framework coresystem u138": {
		"prefix": "url_path_source_framework_coresystem",
		"body": [
			"D:\\U138.Welcia\\01.Source\\CoreSystem"
		],
		"description": "Url folder source framework coresystem u138"
	},
	"current settings": {
		"prefix": "current_settings",
		"body": [
			"CURRENT_SETTING('UNICCS.TMP_AB95_FILEDOWNLOADDATA', TRUE)"
		],
		"description": "current settings"
	},
	"set config": {
		"prefix": "set_config",
		"body": [
			"SELECT SET_CONFIG(''UNICCS.TMP_AB95_FILEDOWNLOADDATA'', JSON_AGG(TMP)::JSONB::VARCHAR, FALSE) FROM ('|| ls_QueryString ||')"
		],
		"description": "set config"
	},
	"execute query": {
		"prefix": "execute_query",
		"body": [
			"EXECUTE 'SELECT SET_CONFIG(''UNICCS.TMP_AB95_FILEDOWNLOADDATA'', JSON_AGG(TMP)::JSONB::VARCHAR, FALSE) FROM ('|| ls_QueryString ||') TMP';"
		],
		"description": "execute query"
	},
	"dblink execute": {
		"prefix": "dblink_exec",
		"body": [
			"PERFORM dblink_exec(ls_ConnectionName, ls_SQLPHUOCLOGry);"
		],
		"description": "dblink execute"
	},
	"Create table vulog next10": {
		"prefix": "vulog_create_table_next10",
		"body": [
			"-- ========================================================",
			"-- Create Logging Table - Start",
			"-- ======================================================== ",
			"",
			"DROP TABLE IF EXISTS VULOG;",
			"",
			"CREATE TABLE VULOG",
			"(",
			"\tID\t\t\tSERIAL NOT NULL,",
			"\tMESSAGELOG\t\tTEXT,",
			"\tCREATEDDATE\tTIMESTAMP DEFAULT CURRENT_TIMESTAMP,",
			"\tCLOCK\t\tVARCHAR(100) DEFAULT TO_CHAR(clock_timestamp(), 'YYYY/MM/DD HH24:MI:SS.US'::text),",
			"\tCONSTRAINT  VUMSG_PKEY PRIMARY KEY (ID)",
			")",
			"WITH (",
			"\tOIDS=FALSE",
			");",
			"",
			"ALTER TABLE VULOG OWNER TO NTUSER;"
		],
		"description": "Create table vulog next10"
	},
	"Create function insert vulog next10": {
		"prefix": "vulog_create_function_insert_next10",
		"body": [
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"-- DROP SCHEMA VN CASCADE;",
			"-- CREATE SCHEMA VN AUTHORIZATION uvuser;",
			"",
			"CREATE OR REPLACE FUNCTION VULOG(i_message character varying)",
			"RETURNS void AS",
			"$BODY$",
			"/*",
			"\tInsert data to table",
			"*/",
			"DECLARE",
			"\t-- 変数定義",
			"\tls_SqlState\t\t\tVARCHAR(5);",
			"\tls_SqlErrMsg\t\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE := '';",
			"\tls_ConnectionName\tTEXT;",
			"\tls_ConnStr\t\t\tTEXT;",
			"\tls_SQLPHUOCLOGry\tTEXT;",
			"\tls_Password\tTEXT;",
			"",
			"\t-- レコードとカーソル定義",
			"\tlrec_StatActivity\tRECORD;",
			"BEGIN",
			"\tls_ConnectionName := 'ConnectionVNLog';",
			"\tls_Password := 'ntuser';",
			"",
			"\tSELECT\t*",
			"\tINTO\tlrec_StatActivity",
			"\tFROM\tPG_STAT_ACTIVITY",
			"\tWHERE\tpid = (SELECT pg_backend_pid());",
			"",
			"\tls_ConnStr = 'host=nt-poc-parent-db1.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com dbname=parent user=ntuser password=ntuser';",
			"\t-- ls_ConnStr = 'dbname=' || lrec_StatActivity.DATNAME || ' user=' || lrec_StatActivity.USENAME || ' password=' || ls_Password;",
			"",
			"\tIF ((\tSELECT\tCOUNT(*)",
			"\t\t\tFROM\t(\tSELECT\tUNNEST(DBLINK_GET_CONNECTIONS()) AS CONNAME) A",
			"\t\t\tWHERE\tA.CONNAME = ls_ConnectionName) <> 0) THEN",
			"\t\tPERFORM DBLINK_DISCONNECT(ls_ConnectionName);",
			"\tEND IF;",
			"",
			"\tls_SQLPHUOCLOGry := 'INSERT INTO VULOG (MESSAGELOG) values($$' || i_Message || '$$);';",
			"",
			"\tPERFORM dblink_connect(ls_ConnectionName, ls_ConnStr);",
			"\tPERFORM dblink_exec(ls_ConnectionName, 'BEGIN;');",
			"\tPERFORM dblink_exec(ls_ConnectionName, ls_SQLPHUOCLOGry);",
			"\tPERFORM dblink_exec(ls_ConnectionName, 'COMMIT;');",
			"\tPERFORM dblink_disconnect(ls_ConnectionName);",
			"",
			"END;",
			"$BODY$",
			"LANGUAGE plpgsql VOLATILE",
			"COST 100;",
			"",
			"ALTER FUNCTION VULOG(character varying) OWNER TO NTUSER;",
			"",
			"RESET CLIENT_ENCODING;"
		],
		"description": "Create function insert vulog next10"
	},
	"Create pxs builder sql": {
		"prefix": "pxs_create_perform_builder",
		"body": [
			"",
			"\treturnCursor\tREFCURSOR;",
			"",
			"PERFORM PXS_PLSBUILDER.Initialize();",
			"",
			"",
			"PERFORM PXS_PLSBUILDER.Append('\tSELECT\t*');",
			"",
			"",
			"",
			"\tOPEN returnCursor FOR EXECUTE PXS_PLSBUILDER.Get();",
			"",
			"\tPERFORM PXS_PLSBUILDER.Drop();",
			"",
			"\tRETURN returnCursor;",
			""
		],
		"description": "Create pxs builder sql"
	},
	"pxs plsbuilder initialize": {
		"prefix": "pxs_perform_initialize",
		"body": [
			"PERFORM PXS_PLSBUILDER.Initialize();"
		],
		"description": "pxs plsbuilder initialize"
	},
	"pxs plsbuilder get": {
		"prefix": "pxs_perform_get",
		"body": [
			"OPEN returnCursor FOR EXECUTE PXS_PLSBUILDER.Get();"
		],
		"description": "pxs plsbuilder get"
	},
	"pxs plsbuilder drop": {
		"prefix": "pxs_perform_drop",
		"body": [
			"PERFORM PXS_PLSBUILDER.Drop();"
		],
		"description": "pxs plsbuilder drop"
	},
	"Create pxs builder append sql": {
		"prefix": "pxs_perform_builder_append",
		"body": [
			"PERFORM PXS_PLSBUILDER.Append('\tSELECT\t*');"
		],
		"description": "Create pxs builder append sql"
	},
	"Create pxs builder append sql have param": {
		"prefix": "perform_builder_append_have_param",
		"body": [
			"\tPERFORM PXS_PLSBUILDER.Append('\t\t\tAND\t\tSTORE_CD\t= ''' || i_Store_Cd || '''');"
		],
		"description": "Create pxs builder append sql have param"
	},
	"Add params sp": {
		"prefix": "i_",
		"body": [
			"i_$1\t\tIN\tVARCHAR,"
		],
		"description": "Add params sp"
	},
	"declare string sp": {
		"prefix": "ls_",
		"body": [
			"ls_$1\t\tVARCHAR;"
		],
		"description": "declare string sp"
	},
	"declare record sp": {
		"prefix": "lrec_",
		"body": [
			"lrec_$1\t\tRECORD;"
		],
		"description": "declare record sp"
	},
	"declare boolean sp": {
		"prefix": "lb_",
		"body": [
			"lb_$1\t\tBOOLEAN := FALSE;"
		],
		"description": "declare boolean sp"
	},
	"declare string config sp": {
		"prefix": "ls_config",
		"body": [
			"ls_Config_$1\t\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;"
		],
		"description": "declare string config sp"
	},
	"declare number exists count sp": {
		"prefix": "ln_Exists",
		"body": [
			"\tln_Exists\t\t\t\t\t\tNUMERIC := 0;"
		],
		"description": "declare number exists count sp"
	},
	"declare number lineno sp": {
		"prefix": "ln_Lineno",
		"body": [
			"\tln_LineNo\t\t\t\t\t\tNUMERIC := 1;"
		],
		"description": "declare number lineno sp"
	},
	"declare number error count sp": {
		"prefix": "ln_ErrorCount",
		"body": [
			"\tln_ErrorCount\t\t\t\t\tNUMERIC := 0;"
		],
		"description": "declare number error count sp"
	},
	"declare number insert count sp": {
		"prefix": "ln_InsertCount",
		"body": [
			"\tln_InsCount\t\t\t\t\t\tNUMERIC := 0;"
		],
		"description": "declare number insert count sp"
	},
	"declare number update count sp": {
		"prefix": "ln_UdpCount",
		"body": [
			"\tln_UpdCount\t\t\t\t\t\tNUMERIC := 0;"
		],
		"description": "declare number update count sp"
	},
	"declare boolean regist flag sp": {
		"prefix": "lb_RegistFlag",
		"body": [
			"lb_RegistFlag\t\t\t\t\tBOOLEAN := FALSE;"
		],
		"description": "declare boolean regist flag sp"
	},
	"declare number sp": {
		"prefix": "ln_",
		"body": [
			"ln_$1\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;"
		],
		"description": "declare number sp"
	},
	"declare date sp": {
		"prefix": "ld_",
		"body": [
			"ld_$1\t\t\t\t\t\tDATE;"
		],
		"description": "declare number sp"
	},
	"declare date time sp": {
		"prefix": "ldt_",
		"body": [
			"ldt_$1\t\t\t\t\t\\TIMESTAMP;"
		],
		"description": "declare date time sp"
	},
	"declare refcursor sp": {
		"prefix": "lcur_",
		"body": [
			"\tlcur_$1\t\t\t\t\tREFCURSOR;"
		],
		"description": "declare refcursor sp"
	},
	"declare type sp": {
		"prefix": "o_",
		"body": [
			"o_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;"
		],
		"description": "declare type sp"
	},
	"declare contant sp": {
		"prefix": "constant",
		"body": [
			"C_ARRAY_DELIMITER\t\t\t\t\t\tCONSTANT VARCHAR\t\t\t\t\t\t\t\t:= ',';"
		],
		"description": "declare contant sp"
	},
	"declare string code sp": {
		"prefix": "ls_code",
		"body": [
			"ls_$1_Cd\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.STORE_CD%TYPE\t\t\t:= '';"
		],
		"description": "declare string code sp"
	},
	"declare array sp": {
		"prefix": "la_",
		"body": [
			"\tla_$1\t\t\t\tVARCHAR[];"
		],
		"description": "declare array sp"
	},
	"declare function sp": {
		"prefix": "lf_",
		"body": [
			"\tlf_FuncAuthSetting\tTYPE_FUNCAUTHSETTING;"
		],
		"description": "declare array sp"
	},
	"For Loop From Cursor": {
		"prefix": "For...Loop",
		"body": [
			"\tlrec_Example\t\t\tRECORD;",
			"\tlcur_Example CURSOR FOR\n\t\tSELECT\tCOLUMN_EXAMPLE\n\t\tFROM\tTABLE_NAME\n\t\tWHERE\tCONDITION_1\t\t= CONDITION_OTHER;\n",
			"\tFOR lrec_Example IN lcur_Example LOOP\n\t\t-- TO DO LIST\n\tEND LOOP;"
		],
		"description": "LOOP DATA"
	},
	"For Loop Direction": {
		"prefix": "For",
		"body": [
			"\tlrec_Example\t\t\t\t\t\t\tRECORD;",
			"\tFOR lrec_ReservePartner IN (\n\t\tSELECT\t*\n\t\tFROM\tTABLE_NAME\n\t\tWHERE\tCONDITION_1\t= CONDITION_1\n\t\tAND\t\tCONDITION_2\t= CONDITION_2\n\t\tORDER BY COLUM_NAME\n\t) LOOP",
			"\tEND LOOP;"
		],
		"description": "LOOP DATA"
	},
	"Create Reference Cursor": {
		"prefix": "refcursor",
		"body": [
			"\treturnCursor\tREFCURSOR;",
			"\tOPEN returnCursor FOR\n\t\tSELECT\tCOLUMN1_EXAMPLE\n\t\tFROM\tUMF_CLASS4 CLASS\n\t\tWHERE\tCONDITION_1\t= CONDITION_OTHER\n\t\tAND\t\tCONDITION_1\t= CONDITION_OTHER;\n\n\tRETURN returnCursor;"
		],
		"description": "Create Reference Cursor"
	},
	"IF": {
		"prefix": "if",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF"
	},
	"IF... ELSE": {
		"prefix": "if...else",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tELSE\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF... ELSE"
	},
	"IF... ELSEIF...ELSE": {
		"prefix": "if...elseif...else",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tELSIF\n",
			"\tELSE\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF... ELSEIF...ELSE"
	},
	"Switch...Case...multi": {
		"prefix": "case...when...multi",
		"body": [
			"",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN\n\t\t\t\t\tls_DenpKind\t:= '10';\n\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;\n",
			"\t\t\t\tWHEN ('2') THEN\n\t\t\t\t\tls_DenpKind\t:= '12';\n\t\t\t\t\tls_DenpType\t:= lrec_ReturnHeader.DENPTYPE;\n",
			"\t\t\t\tELSE\n\t\t\t\t\tls_DenpKind\t:= '10';\n\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;\n",
			"\t\t\tEND;\n"
		],
		"description": "Switch...Case...multi"
	},
	"Switch...Case...single": {
		"prefix": "case...when...single",
		"body": [
			"CASE WHEN COLUMNDATA.EXAMPLE = '0' THEN COLUMNDATA.EXAMPLE ELSE COLUMNDATA.EXAMPLE2 END"
		],
		"description": "Switch...Case...single"
	},
	"Delete Query Format": {
		"prefix": "delete",
		"body": [
			"DELETE\tFROM TABLE_NAME PPN",
			"WHERE\tEXISTS (\tSELECT\t1\n\t\t\t\t\tFROM\tTMP_TABLE_NAME COLUMNDATA\n\t\t\t\t\tWHERE\tCOLUMNDATA.COLUMN1\t\t\t= PPN.COLUMN_1\n\t\t\t\t\tAND\t\tCOLUMNDATA.VALIDFLAG\t\t= '0'\n\t\t);"
		],
		"description": "Delete Query Format"
	},
	"Update Query Format": {
		"prefix": "update",
		"body": [
			"\n",
			"\t\t\t\t\tUPDATE\tTABLE_NAME PTN",
			"\t\t\t\t\tSET\t\tCOLUMN1\t\t\t\t\t= DATA.COLUMN1,",
			"\t\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\t\tFROM\tTMP_TABLE_NAME COLUMNDATA",
			"\t\t\t\t\tWHERE\tPTN.PARTNER_CD\t= COLUMNDATA.COLUMN1;",
			"\n"
		],
		"description": "Update Query Format"
	},
	"Server Infomation": {
		"prefix": "server_infomation",
		"body": [
			"-- SERVER INFOMATION ",
			"",
			"-- aurora web",
			"http://webappalb-1208067862.ap-northeast-1.elb.amazonaws.com:8080/portal/PortalServlet",
			"http://webappalb-1208067862.ap-northeast-1.elb.amazonaws.com:8080/GenerateToolWebApp/",
			"",
			"-- auroraDb-parent",
			"jdbc:postgresql://nt-poc-parent-db1.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"-- auroraDb-area",
			"jdbc:postgresql://nt-poc-area-db1.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com:5432/area",
			"",
			"ntuser/ntuser",
			"",
			"-- auroraDb-area2",
			"jdbc:postgresql://nt-poc-area-db2.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com:5432/area",
			"",
			"ntuser/ntuser",
			"",
			"-- ARIES WEB",
			"http://172.28.1.174/portal/PortalServlet",
			"http://172.28.1.174/GenerateToolWebApp/",
			"",
			"-- ARIESDB PARENT",
			"jdbc:postgresql://172.28.1.175:5432/parent",
			"",
			"devms/devms",
			"",
			"",
			"-- SUNDRUG WEB",
			"http://172.28.7.21:8080/GenerateToolWebApp/",
			"http://172.28.7.21:8080/portal/PortalServlet",
			"",
			"-- SUNDRUG DB PARENT",
			"jdbc:postgresql://172.28.2.164:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"",
			"-- SUNDRUG DB AEOS",
			"jdbc:postgresql://172.28.2.161:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"-- SUNDRUG DB AEOS2",
			"jdbc:postgresql://172.28.2.162:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"-- SUNDRUG DB TRAN",
			"jdbc:postgresql://172.28.2.165:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"-- SUNDRUG DB REPLICATION",
			"jdbc:postgresql://172.28.2.166:5432/parent",
			"",
			"ntuser/ntuser",
			"",
			"-- test nt10.0",
			"http://webapptestalb-2114479135.ap-northeast-1.elb.amazonaws.com:8080/GenerateToolWebApp/",
			"http://webapptestalb-2114479135.ap-northeast-1.elb.amazonaws.com:8080/portal/PortalServlet",
			"",
			"Server web, batch gi?ng m?i tr??ng hi?n t?i, ch? kh?c v? tr? deploy",
			"",
			"uniccs-core, uniccs-web, Javascript",
			"/home/ntuser/webapps/taurus_tomcat10",
			"",
			"uniccs-core, uniccs-batch",
			"/lib_jdk21"
		],
		"description": "Server Infomation"
	},
	"Insert Query Format": {
		"prefix": "insert",
		"body": [
			"\n",
			"\t\t\t\t\tINSERT INTO TABLE_NAME (",
			"\t\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\t\tRSVCHAR2,",
			"\t\t\t\t\t\t\tRSVCHAR3,",
			"\t\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t\t)",
			"\t\t\t\t\tSELECT\tCOLUMN1,",
			"\t\t\t\t\t\t\tCOLUMN2,",
			"\t\t\t\t\t\t\tCOLUMN3,",
			"\t\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\t\tFROM\tTMP_EXAMPLE_COLUMNDATA COLUMNDATA",
			"\t\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\t\tFROM\tTABLE_NAME PTN",
			"\t\t\t\t\t\t\t\tWHERE\tPTN.EXAMPLE_CD\t= COLUMNDATA.COLUMN1",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Insert Query Format"
	},
	"Get System Config Format": {
		"prefix": "get_system_config",
		"body": [
			"\n",
			"\tla_ConfigList\t\t\t\tTEXT[];",
			"\tln_SysItemClass1Length\t\tINTEGER;",
			"\tln_SysItemClass2Length\t\tINTEGER;",
			"\tln_SysItemClass3Length\t\tINTEGER;",
			"",
			"\t-- 繧ｷ繧ｹ繝?繝?繧ｳ繝ｳ繝輔ぅ繧ｰ蜿門ｾ?",
			"\t-- 繝励Ο繧ｷ繝ｼ繧ｸ繝｣蜀?縺ｧ菴ｿ逕ｨ縺吶ｋ繧ｷ繧ｹ繝?繝?繧ｳ繝ｳ繝輔ぅ繧ｰ荳隕ｧ",
			"\tla_ConfigList := ARRAY ['ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH'];",
			"",
			"\t-- 螳夂ｾｩ縺励◆繧ｷ繧ｹ繝?繝?繧ｳ繝ｳ繝輔ぅ繧ｰ縺ｮ蛟､繧偵ョ繝ｼ繧ｿ繝吶?ｼ繧ｹ繧医ｊ蜿門ｾ?",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig (NULL, la_ConfigList);",
			"",
			"\t-- 隨ｬ?ｼ大??鬘槭さ繝ｼ繝峨?ｮ譯∵焚",
			"\tln_SysItemClass1Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INTEGER);",
			"",
			"\t-- 隨ｬ?ｼ貞??鬘槭さ繝ｼ繝峨?ｮ譯∵焚",
			"\tln_SysItemClass2Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INTEGER);",
			"",
			"\t-- 隨ｬ?ｼ灘??鬘槭さ繝ｼ繝峨?ｮ譯∵焚",
			"\tln_SysItemClass3Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INTEGER);",
			"\n"
		],
		"description": "Get System Config Format"
	},
	"Create temporary table by defined column": {
		"prefix": "create_temp_table1",
		"body": [
			"\n",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_TABLE_NAME (",
			"\t\tUSER_CD\t\t\t\t\tVARCHAR(05),",
			"\t\tSERVER_CD\t\t\t\tVARCHAR(10) NOT NULL,",
			"\t\tIMPORTBATCHKEY\t\t\tNUMERIC(10, 0) NOT NULL,",
			"\t\tCSVLINENO\t\t\t\tNUMERIC(10, 0) NOT NULL,",
			"\t\tCOLUMN1\t\t\t\t\tVARCHAR(10) NOT NULL,",
			"\t\tCOLUMN4\t\t\t\t\tVARCHAR(01) NOT NULL,",
			"\t\tCOLUMN5\t\t\t\t\tVARCHAR(10) NOT NULL",
			"\t);",
			"",
			"\tTRUNCATE TABLE TMP_TABLE_NAME;",
			"",
			"\tINSERT INTO TMP_TABLE_NAME",
			"\t\tSELECT\tUSER_CD,",
			"\t\t\t\tMAKER_CD,",
			"\t\t\t\tVALIDFLAG,",
			"\t\t\t\tNAME,",
			"\t\t\t\tANAME,",
			"\t\t\t\tMAKERTYPE,",
			"\t\t\t\tPARENTMAKER_CD",
			"\t\tFROM\tUMF_TABLE_NAME;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_TABLE_NAME ON TMP_TABLE_NAME (MAKER_CD, USER_CD);",
			"\n"
		],
		"description": "Create temporary table by defined column"
	},
	"Create temporary table from table other": {
		"prefix": "create_temp_table2",
		"body": [
			"\n",
			"\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ域僑蠑ｵ)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tCOMPANY_CD,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tFLOOR_CD,",
			"\t\t\t\tREDECORATION_CD,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\tCLASSTYPE,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tPAYSCHDATE,",
			"\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\tTRADETYPE,",
			"\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\tTOTALQTY,",
			"\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\tORDERDATE,",
			"\t\t\t\tDELIVERYDATE,",
			"\t\t\t\tORDERMETHOD,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tDELIVERYNO,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPHEADER ON TMP_EA25_DENPHEADER (SYSDENPNO);",
			"\n"
		],
		"description": "Create temporary table by defined column"
	},
	"Get Inspect Date": {
		"prefix": "get_inspect_date",
		"body": [
			"\n",
			"\tld_InspectDateCheck\t\t\t\t\t\tDATE;",
			"",
			"\t\t\tld_InspectDateCheck\t:= PXS_UTILITY.f_GetDenpAccountDate (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, --STOREFLOOR_CD",
			"\t\t\t\t\t\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\tls_DenpKind,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3, --PARTNER_CD",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\t\t\tls_Config_00201,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4, --CLASS_CD",
			"\t\t\t\t\t\t\t\t\tls_Config_00009,",
			"\t\t\t\t\t\t\t\t\tls_Config_00204",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Inspect Date"
	},
	"Search table name by regex": {
		"prefix": "search_table_name_by_regex",
		"body": [
			"select * from information_schema.tables where table_name like '%6th%'"
		],
		"description": "Search table name by regex"
	},
	"See sp PXS_UTILITY": {
		"prefix": "select_seeSP_utility",
		"body": [
			"",
			"select  nspname                         as packagename,",
			"      proname                         as spname,",
			"      oidvectortypes(proargtypes)     as arguments_type,",
			"      pg_get_functiondef(f.oid)||';'  as content,",
			"      'drop function ' || nspname || '.' || proname || '(' || oidvectortypes(proargtypes) || ');' as dropsql",
			"from    pg_catalog.pg_proc f",
			"      inner join pg_catalog.pg_namespace n",
			"      on  (f.pronamespace = n.oid)",
			"where   UPPER(n.nspname) = 'PXS_UTILITY'",
			"order by nspname, proname, arguments_type;",
			""
		],
		"description": "See sp PXS_UTILITY"
	},
	"Search table name by regex in linux": {
		"prefix": "search_table_name_by_regex_linux",
		"body": [
			"\\dt *link6th*"
		],
		"description": "Search table name by regex in linux"
	},
	"Check Error Import Pattern": {
		"prefix": "check_error_import_pattern",
		"body": [
			"\n",
			"\t\t-- 逋ｺ豕ｨ螳溽ｸｾ迚ｩ豬√そ繝ｳ繧ｿ繝ｼ荳肴紛蜷医メ繧ｧ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '50108') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧狗黄豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"\n"
		],
		"description": "Check Error Import Pattern"
	},
	"Check Exists Import UMFSGROUP": {
		"prefix": "check_exists_import_UMFSGROUP",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSGROUP (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN2,COLUMN4'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFSGROUP"
	},
	"Check Exists Import UmfItemClass": {
		"prefix": "check_exists_import_UmfItemClass",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUmfItemClass (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN10'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UmfItemClass"
	},
	"Check Exists Import UMFStoreGroupPattern": {
		"prefix": "check_exists_import_UMFStoreGroupPattern",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSGroupPattern (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN25,",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN25'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFStoreGroupPattern"
	},
	"Check Exists Import UMFSystemMode": {
		"prefix": "check_exists_import_UMFSystemMode",
		"body": [
			"\n",
			"\t\t\t-- 繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\t\tSELECT\tio_lineno,",
			"\t\t\t\t\tio_errorcount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSystemMode (",
			"\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFSystemMode"
	},
	"Check Exists Import UMFPARTNER": {
		"prefix": "check_exists_import_UMFPARTNER",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPARTNER (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\ti_Server_cd,",
			"\t\t\t\t\t\ti_ImportBatchKey,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFPARTNER"
	},
	"Check Exists Import UMFClass": {
		"prefix": "check_exists_import_UMFClass",
		"body": [
			"\n",
			"\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN3 = C_CODETYPE_DEPT) THEN",
			"\t\t\t\t\tls_CodeType := '1';",
			"",
			"\t\t\t\tELSIF (lrec_CSVUploadColumnData.COLUMN3 = C_CODETYPE_GROUP) THEN",
			"\t\t\t\t\tls_CodeType := '2';",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_CodeType := '3';",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFClass (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tls_Code,",
			"\t\t\t\t\t\t\tls_CodeType,",
			"\t\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN4'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFClass"
	},
	"Check Exists Import UMFClass4": {
		"prefix": "check_exists_import_UMFClass4",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFClass4 (",
			"\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_Class3_Cd,",
			"\t\t\t\t\t\tls_Class4_Cd,",
			"\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN5,COLUMN6'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFClass4"
	},
	"Check Exists Import UMFCLASS5": {
		"prefix": "check_exists_import_UMFCLASS5",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFCLASS5 (",
			"\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_Class3_Cd,",
			"\t\t\t\t\t\tls_Class4_Cd,",
			"\t\t\t\t\t\tls_Class5_Cd,",
			"\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN5,COLUMN6,COLUMN7'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFCLASS5"
	},
	"Check Exists Import UMFAlcohol": {
		"prefix": "check_exists_import_UMFAlcohol",
		"body": [
			"\n",
			"\t\t\t\t\t-- 驟帝｡槭?槭せ繧ｿ縺ｮ蟄伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFAlcohol (",
			"\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN7,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t);--10024,10025",
			"\n"
		],
		"description": "Check Exists Import UMFAlcohol"
	},
	"Check Exists Import UMFGENERALTREECODEDEF": {
		"prefix": "check_exists_import_UMFGENERALTREECODEDEF",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFGENERALTREECODEDEF(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN87,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_ErrorCount);",
			"\n"
		],
		"description": "Check Exists Import UMFGENERALTREECODEDEF"
	},
	"Check Exists Import UMFSKUSEASON": {
		"prefix": "check_exists_import_UMFSKUSEASON",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSKUSEASON(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN92,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_ErrorCount);",
			"\n"
		],
		"description": "Check Exists Import UMFSKUSEASON"
	},
	"Check Exists Import UMFSKUATTRIBUTE": {
		"prefix": "check_exists_import_UMFSKUATTRIBUTE",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSKUATTRIBUTE(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN85,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_ErrorCount);",
			"\n"
		],
		"description": "Check Exists Import UMFSKUATTRIBUTE"
	},
	"Check Exists Import Umfrackdisplayuse": {
		"prefix": "check_exists_import_Umfrackdisplayuse",
		"body": [
			"\n",
			"\t\t\t\t-- 譽壼牡繧ｳ繝ｼ繝峨?ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUmfrackdisplayuse (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN7,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t);--10071,10072",
			"\n"
		],
		"description": "Check Exists Import Umfrackdisplayuse"
	},
	"Check Exists Import UMFRackdisplaygroup": {
		"prefix": "check_exists_import_UMFRackdisplaygroup",
		"body": [
			"\n",
			"\t\t\tSELECT\t*",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFRackdisplaygroup(",
			"\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFRackdisplaygroup"
	},
	"Check Exists Import UMFTAX": {
		"prefix": "check_exists_import_UMFTAX",
		"body": [
			"\n",
			"\t\t\t\t\t\t-- 遞守紫繝槭せ繧ｿ縺ｮ蟄伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\t\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFTAX(",
			"\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN7,",
			"\t\t\t\t\t\t\t\t\tCURRENT_DATE,",
			"\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t\t);--10061,10062",
			"\n"
		],
		"description": "Check Exists Import UMFTAX"
	},
	"Check Exists Import SystemModeUMFStore": {
		"prefix": "check_exists_import_SystemModeUMFStore",
		"body": [
			"\n",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistSystemModeUMFStore(",
			"\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\tls_SystemMode_Cd,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t\t'COLUMN2'",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import SystemModeUMFStore"
	},
	"Check Exists Import UMFDistribution": {
		"prefix": "check_exists_import_UMFDistribution",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFDistribution (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN6,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN6',",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.EXCELTAGINDEX,",
			"\t\t\t\t\t\t\t\t\t\t'1'",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFDistribution"
	},
	"Check Exists Import UMFBank": {
		"prefix": "check_exists_import_UMFBank",
		"body": [
			"\n",
			"\t\t\t\t-- 驫陦後?槭せ繧ｿ縺ｮ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\t\t\tSELECT\tio_lineno,",
			"\t\t\t\t\t\tio_errorcount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFBank (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN89,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN89'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFBank"
	},
	"Check Exists Import UMFBankBranch": {
		"prefix": "check_exists_import_UMFBankBranch",
		"body": [
			"\n",
			"\t\t\t\t-- 謾ｯ蠎励?槭せ繧ｿ縺ｮ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\t\t\tSELECT\tio_lineno,",
			"\t\t\t\t\t\tio_errorcount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFBankBranch (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN89,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN90,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN89,COLUMN90'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFBankBranch"
	},
	"Check Exists Import UMFPayPartner": {
		"prefix": "check_exists_import_UMFPayPartner",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPayPartner (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFPayPartner"
	},
	"Check Exists Import UMFPayPartnerSight": {
		"prefix": "check_exists_import_UMFPayPartnerSight",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPayPartnerSight (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN1,COLUMN2'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFPayPartnerSight"
	},
	"Check Exists Import UMFAllocatePattern": {
		"prefix": "check_exists_import_UMFAllocatePattern",
		"body": [
			"\n",
			"\t\t-- 謖牙??繝代ち繝ｼ繝ｳ繧ｳ繝ｼ繝牙ｭ伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\tSELECT\tio_LineNo,",
			"\t\t\t\tio_ErrorCount",
			"\t\tINTO\tln_LineNo,",
			"\t\t\t\tln_ErrorCount",
			"\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFAllocatePattern (",
			"\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\tls_CSVFile_Cd,",
			"\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN1 AS VARCHAR),",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFAllocatePattern"
	},
	"Check Exists Import UMFLogisticsCenter": {
		"prefix": "check_exists_import_UMFLogisticsCenter",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFLogisticsCenter (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN2'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFLogisticsCenter"
	},
	"Check Not equals updatedatetime": {
		"prefix": "check_not_equals_updatedatetime",
		"body": [
			"\n",
			"IF (TO_CHAR(lrec_CheckData.UPDDATETIME, 'YYYY/MM/DD HH24:MI:SS') <> i_UpdDateTime) THEN",
			"",
			"END IF;",
			"\n"
		],
		"description": "Check Not equals updatedatetime"
	},
	"Alter table update column": {
		"prefix": "alter_table_update_column",
		"body": [
			"\n",
			"ALTER TABLE UMF_PAYPARTNERLOG ALTER COLUMN RSVCHAR4 SET DATA TYPE character varying(14)",
			"\n"
		],
		"description": "Alter table update column"
	},
	"Alter table add column": {
		"prefix": "alter_table_add_column",
		"body": [
			"\n",
			"ALTER TABLE table_name ADD column_name datatype;",
			"\n"
		],
		"description": "Alter table add column"
	},
	"Alter table delete column": {
		"prefix": "alter_table_delete_column",
		"body": [
			"\n",
			"ALTER TABLE table_name ",
			"DROP COLUMN column_name;"
		],
		"description": "Alter table add column"
	},
	"Alter table enable triggers column": {
		"prefix": "alter_table_enable_trigger",
		"body": [
			"\n",
			"ALTER TABLE [tﾃｪn b蘯｣ng] ENABLE TRIGGER [tﾃｪn trigger]",
			"\n"
		],
		"description": "Alter table enable triggers column"
	},
	"INNER JOIN": {
		"prefix": "innerjoin",
		"body": [
			"INNER JOIN TBL_TEMP1 T1",
			"\tON\tT1.COLUMN_A\t\t= MN.COLUMN_A",
			"\tAND\tT1.COLUMN_B\t\t= MN.COLUMN_B"
		],
		"description": "INNER JOIN"
	},
	"LEFT JOIN": {
		"prefix": "leftjoin",
		"body": [
			"LEFT OUTER JOIN TBL_TEMP1 T1",
			"\tON\tT1.COLUMN_A\t\t= MN.COLUMN_A",
			"\tAND\tT1.COLUMN_B\t\t= MN.COLUMN_B"
		],
		"description": "LEFT JOIN"
	},
	"Get Number Update/Insert": {
		"prefix": "get_num_update/insert",
		"body": [
			"GET DIAGNOSTICS ln_RowCount := ROW_COUNT;"
		],
		"description": "Get Number Update/Insert"
	},
	"Get Substring": {
		"prefix": "getSubString",
		"body": [
			"fx_substrstring(i_targetstring character varying, i_startindex integer, i_endindex integer)"
		],
		"description": "Get Substring"
	},
	"Get clock timestamp": {
		"prefix": "clock_timestamp",
		"body": [
			"CLOCK_TIMESTAMP()"
		],
		"description": "Get clock timestamp"
	},
	"Get current date": {
		"prefix": "current_date",
		"body": [
			"CURRENT_DATE "
		],
		"description": "Get current date"
	},
	"Get current timsetamp": {
		"prefix": "current_time_stamp",
		"body": [
			"CURRENT_TIMESTAMP  "
		],
		"description": "Get current timsetamp"
	},
	"Get Next Squence": {
		"prefix": "seq_next",
		"body": [
			"NEXTVAL('SEQ_SYSDENPNO')  "
		],
		"description": "Get Next Squence"
	},
	"Set Squence": {
		"prefix": "seq_set",
		"body": [
			"SETVAL('SEQ_SYSDENPNO', 99)"
		],
		"description": "Set Squence"
	},
	"left": {
		"prefix": "left(",
		"body": [
			"LEFT(PTP.POSTNO, 3)"
		],
		"description": "left"
	},
	"right": {
		"prefix": "right(",
		"body": [
			"RIGHT(PPN.POSTNO, 4)"
		],
		"description": "left"
	},
	"menu option": {
		"prefix": "menu_option",
		"body": [
			"SELECT MENUOPTION FROM UMF_MENUDEF WHERE FUNC_CD = '$1'"
		],
		"description": "menu option"
	},
	"Array Append": {
		"prefix": "array_append",
		"body": [
			"ARRAY_APPEND(ARRAY[2,3], 1);   -- [2,3,1]"
		],
		"description": "Array append"
	},
	"Array Prepend": {
		"prefix": "array_prepend",
		"body": [
			"ARRAY_PREPEND(1, ARRAY[2,3]); -- [1,2,3]"
		],
		"description": "Array Prepend"
	},
	"Array Length": {
		"prefix": "array_length",
		"body": [
			"ARRAY_LENGTH(ARRAY[1,2,3], 1); -- return 3 integer"
		],
		"description": "Array Length"
	},
	"Translate": {
		"prefix": "translate(",
		"body": [
			"TRANSLATE('12345', '134', 'ax') -- a2x5"
		],
		"description": "Translate"
	},
	"Replace": {
		"prefix": "replace(",
		"body": [
			"REPLACE('abc', 'b', 'x') -- axc"
		],
		"description": "Replace"
	},
	"Alter table disable triggers column": {
		"prefix": "alter_table_disable_trigger",
		"body": [
			"\n",
			"ALTER TABLE [tﾃｪn b蘯｣ng] DISABLE TRIGGER [tﾃｪn trigger]",
			"\n"
		],
		"description": "Alter table disable triggers column"
	},
	"Query table store validation": {
		"prefix": "select_validation",
		"body": [
			"\n",
			"SELECT * FROM UMF_SCREENVALIDDEF WHERE VALIDNAME = 窶儷MFFileCreateDefValidation窶?;",
			"SELECT * FROM UMF_PROCDEF WHERE PROC_CD = 窶儷MFFileCreateDef窶? AND FUNC_CD = 窶儡TANDARD_VALIDATION窶?;",
			"\n"
		],
		"description": "Query table store validation"
	},
	"Query table store lookup": {
		"prefix": "select_lookup",
		"body": [
			"\n",
			"SELECT * FROM UMF_SCREENDEF WHERE FUNC_CD = 窶儡TANDARD_LOOKUP窶? AND SCREEN_CD = 窶儷MFFileCreateDef窶?;",
			"\n"
		],
		"description": "Query table store lookup"
	},
	"Check Exists Import UMFStorefloor": {
		"prefix": "check_exists_import_UMFStorefloor",
		"body": [
			"\n",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFStorefloor(",
			"\t\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN1, COLUMN2'",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFStorefloor"
	},
	"Check Exists Import UMFUNIT": {
		"prefix": "check_exists_import_UMFUNIT",
		"body": [
			"\n",
			"\t\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFUNIT (",
			"\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN56,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t\t'COLUMN56'",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFUNIT"
	},
	"Check Exists Import UMFMAKER": {
		"prefix": "check_exists_import_UMFMAKER",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFMAKER(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN10,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_ErrorCount);",
			"\n"
		],
		"description": "Check Exists Import UMFMAKER"
	},
	"Check Exists Import UMFPartnerLogisticsCenter": {
		"prefix": "check_exists_import_UMFPartnerLogisticsCenter",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPartnerLogisticsCenter(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN40,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tln_ErrorCount);",
			"\n"
		],
		"description": "Check Exists Import UMFPartnerLogisticsCenter"
	},
	"Check Exists Import UMFDenpKind": {
		"prefix": "check_exists_import_UMFDenpKind",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_lineno,",
			"\t\t\t\t\tio_errorcount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFDenpKind (",
			"\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFDenpKind"
	},
	"Check Exists Import UMFOperator": {
		"prefix": "check_exists_import_UMFOperator",
		"body": [
			"\n",
			"\t\t\t-- 諡?蠖楢?繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUploadCommonCheck.f_CheckExistUMFOperator (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFOperator"
	},
	"Check Exists Import UMFItem": {
		"prefix": "check_exists_import_UMFItem",
		"body": [
			"\n",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFItem (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN8'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFItem"
	},
	"Check Exists Import UMFITEMSTORE": {
		"prefix": "check_exists_import_UMFITEMSTORE",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFITEMSTORE (",
			"\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\ti_Server_cd,",
			"\t\t\t\t\t\ti_ImportBatchKey,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_Store_Cd,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN2,COLUMN8'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFITEMSTORE"
	},
	"Check Exists Import UMFOpeSystemMode": {
		"prefix": "check_exists_import_UMFOpeSystemMode",
		"body": [
			"\n",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUploadCommonCheck.f_CheckExistUMFOpeSystemMode (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN1,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFOpeSystemMode"
	},
	"Check Exists Import UMFCOMPANY": {
		"prefix": "check_exists_import_UMFCOMPANY",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFCOMPANY (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFCOMPANY"
	},
	"Check Exists Import UMFFuncAuth": {
		"prefix": "check_exists_import_UMFFuncAuth",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFFuncAuth (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN16,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN16'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFFuncAuth"
	},
	"Check Exists Import UMFSpecialAuth": {
		"prefix": "check_exists_import_UMFSpecialAuth",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSpecialAuth (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN18,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN18'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFSpecialAuth"
	},
	"Check Exists Import UMFDepartment": {
		"prefix": "check_exists_import_UMFDepartment",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFDepartment (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_CSVUploadColumnData.COLUMN12, ls_Company_Cd),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN24,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN24'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFDepartment"
	},
	"Check Exists Import UMFStore": {
		"prefix": "check_exists_import_UMFStore",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN26,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN26'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFStore"
	},
	"Check Exists Import UMFStore": {
		"prefix": "check_exists_import_UMFStore",
		"body": [
			"\n",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN26,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN26'",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Check Exists Import UMFStore"
	},
	"Accept CSV Update Error Data": {
		"prefix": "accept_csv_update_error_date",
		"body": [
			"\n",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧狗黄豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Accept CSV Update Error Data"
	},
	"Get Master Item": {
		"prefix": "get_master_item",
		"body": [
			"\n",
			"\tls_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"",
			"",
			"\t\tls_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\tlrec_MasterItem\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, --STOREFLOOR_CD",
			"\t\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\tls_CLASS1_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS2_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS3_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS4_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS5_CD",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Master Item"
	},
	"Get Purchase GnkBik": {
		"prefix": "get_purchase_gnkbik",
		"body": [
			"\n",
			"\to_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;",
			"",
			"\t\to_PurchaseGnkBik := PXS_UTILITY.f_GetPurchaseGnkBik (",
			"\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC), -- QTY",
			"\t\t\t\tln_TmpPartnerGntnk,",
			"\t\t\t\tls_DenpKind,",
			"\t\t\t\tls_DenpType,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN3, -- PARTNER_CD",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- STOREFLOOR_CD",
			"\t\t\t\tls_Sku_Cd,",
			"\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), -- DENPINSPECTDATE",
			"\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN17 = '1' THEN TRUE ELSE FALSE END, -- WHOLESALEGNTNK",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\tfx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9), -- LINENO",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\tCAST(NULLIF(lrec_CSVUploadColumnData.COLUMN18, '') AS NUMERIC) -- 'PARTNERGNKFORCEFLAG",
			"\t\t);",
			"\n"
		],
		"description": "Get Purchase GnkBik"
	},
	"Get Attribute Class By Item Store": {
		"prefix": "get_attribute_class_by_item_store",
		"body": [
			"\n",
			"\tls_ItemAttributeType\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ITEMATTRIBUTETYPE%TYPE;",
			"\tls_ParentClass1_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS1_CD%TYPE;",
			"\tls_AttributeClass1_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS1_CD%TYPE;",
			"\tls_ParentClass2_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS2_CD%TYPE;",
			"\tls_AttributeClass2_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS2_CD%TYPE;",
			"\tls_ParentClass3_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS3_CD%TYPE;",
			"\tls_AttributeClass3_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS3_CD%TYPE;",
			"\tls_ParentClass4_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS4_CD%TYPE;",
			"\tls_AttributeClass4_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS4_CD%TYPE;",
			"\tls_ParentClass5_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS5_CD%TYPE;",
			"\tls_AttributeClass5_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS5_CD%TYPE;",
			"",
			"\t\t\t\tSELECT\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD",
			"\t\t\t\tINTO\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_ParentClass1_Cd,",
			"\t\t\t\t\t\tls_AttributeClass1_Cd,",
			"\t\t\t\t\t\tls_ParentClass2_Cd,",
			"\t\t\t\t\t\tls_AttributeClass2_Cd,",
			"\t\t\t\t\t\tls_ParentClass3_Cd,",
			"\t\t\t\t\t\tls_AttributeClass3_Cd,",
			"\t\t\t\t\t\tls_ParentClass4_Cd,",
			"\t\t\t\t\t\tls_AttributeClass4_Cd,",
			"\t\t\t\t\t\tls_ParentClass5_Cd,",
			"\t\t\t\t\t\tls_AttributeClass5_Cd",
			"\t\t\t\tFROM\tPXS_UTILITY.f_GetAttributeClassByItemStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- STOREFLOOR_CD",
			"\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\tld_InspectDateCheck",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Attribute Class By Item Store"
	},
	"To Date Format": {
		"prefix": "to_date",
		"body": [
			"\n",
			"TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\n"
		],
		"description": "To Date Format"
	},
	"Get Tax Rate": {
		"prefix": "get_tax_rate",
		"body": [
			"\n",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\n"
		],
		"description": "Get Tax Rate"
	},
	"Select Query Normal": {
		"prefix": "select_normal",
		"body": [
			"\n",
			"SELECT * FROM $1 WHERE CONDITION_1 = CONDITION_OTHER",
			"\n"
		],
		"description": "Select Query Normal"
	},
	"Limit Offset Query": {
		"prefix": "limit_offset_pxsbuilder",
		"body": [
			"\n",
			"\t\tPERFORM PXS_PLSBUILDER.Append('\t\tOFFSET ' || i_LimitOffSet || ' LIMIT ' || i_LimitCount);",
			"\n"
		],
		"description": "Limit Offset Query"
	},
	"Select Query Format": {
		"prefix": "select_query_standard_format",
		"body": [
			"\n",
			"\t\tSELECT  PXS_USER.p_GetOperatorName(NULL, CLASS2.ADDOPERATOR_CD)\tAS ADDOPERATOR_CD,",
			"\t\t\t\tPXS_USER.p_GetOperatorName(NULL, CLASS2.UPDOPERATOR_CD)\tAS UPDOPERATOR_CD,",
			"\t\t\t\tTO_CHAR(CLASS2.ADDDATETIME, 'YYYY/MM/DD HH24:MI:SS')\tAS ADDDATETIME,",
			"\t\t\t\tTO_CHAR(CLASS2.UPDDATETIME, 'YYYY/MM/DD HH24:MI:SS')\tAS UPDDATETIME,",
			"\t\t\t\tCLASS2.ADDPROC_CD,",
			"\t\t\t\tCLASS2.UPDPROC_CD",
			"\t\tFROM\tUMF_CLASS CLASS2",
			"\t\t\t\tLEFT OUTER JOIN UMF_RESERVECLASS RESRVCLASS2",
			"\t\t\t\t\tON  RESRVCLASS2.ITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\t\t\tAND RESRVCLASS2.CLASS_CD\t\t\t= CLASS2.CLASS_CD",
			"\t\t\t\t\tAND RESRVCLASS2.CLASSTYPE\t\t\t= CLASS2.CLASSTYPE",
			"\t\t\t\t\tAND RESRVCLASS2.REFLECTDATE\t\t\t> CAST(CURRENT_TIMESTAMP AS DATE)",
			"\t\tWHERE\tCLASS2.ITEMATTRIBUTETYPE\t\t\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\tAND\t\tCLASS2.CLASSTYPE\t\t\t\t\t= '2';",
			"\n"
		],
		"description": "Select Query Format"
	},
	"Get Operator Name": {
		"prefix": "gon",
		"body": [
			"\n",
			"PXS_USER.p_GetOperatorName(NULL, OPERATOR_CD)",
			"\n"
		],
		"description": "Get Operator Name"
	},
	"Array Format": {
		"prefix": "array",
		"body": [
			"\n",
			"ARRAY ['ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH']",
			"\n"
		],
		"description": "Array Format"
	},
	"Get Account Pay Date": {
		"prefix": "get_account_pay_date",
		"body": [
			"\n",
			"\t\t\t\t\t\tSELECT\tPAYDATE,",
			"\t\t\t\t\t\t\t\tDELIMITDATE",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.PAYSCHDATE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.APCLOSINGDATE",
			"\t\t\t\t\t\tFROM\tPXS_UTILITY.f_GetAccountPayDate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t'0'",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Account Pay Date"
	},
	"Check Exist Session Array Company": {
		"prefix": "exists_array_company",
		"body": [
			"\n",
			"\tlb_existsCompany\tBOOLEAN;",
			"",
			"\tlb_existsCompany\t:= PXS_UTILITY.f_ExistsArrayCompany();",
			"\n"
		],
		"description": "Check Exist Session Array Company"
	},
	"Check Session Exists Array Store": {
		"prefix": "exists_array_store",
		"body": [
			"\n",
			"\tlb_existsStore\t\tBOOLEAN;",
			"",
			"\t\tlb_existsStore\t\t:= PXS_UTILITY.f_ExistsArrayStore();",
			"\n"
		],
		"description": "Check Session Exists Array Store"
	},
	"postgresql dump 1 data from this server to server other": {
		"prefix": "pg_dump_1",
		"body": [
			"pg_dump --column-inserts --table=UTR_PURCHASEDENPHEADER parent > UTR_PURCHASEDENPHEADER.sql"
		],
		"description": "postgresql dump data from this server to server other"
	},
	"postgresql dump 2 data from this server to server other": {
		"prefix": "pg_dump_2",
		"body": [
			"pg_dump --no-tablespaces -Fp -v --table ntuser.umf_company -f umf_company.sql -d postgresql://ntuser:ntuser@nt-poc-parent-db1.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com:5432/parent "
		],
		"description": "postgresql dump data from this server to server other"
	},
	"postgresql restore data from this server to server other": {
		"prefix": "pg_restore_1",
		"body": [
			"psql postgresql://ntuser:ntuser@nt-poc-parent-db1.cluster-cz55bk9crgju.ap-northeast-1.rds.amazonaws.com:5432/parent -f umf_company.sql"
		],
		"description": "postgresql restore data from this server to server other"
	},
	"Check Session Exists Array Update Operator": {
		"prefix": "exists_array_store",
		"body": [
			"\n",
			"\tlb_ExistsArrayUpdOperator\t\tBOOLEAN\t\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\t\tlb_ExistsArrayUpdOperator\t\t:= PXS_UTILITY.f_ExistsArrayUpdOperator();",
			"\n"
		],
		"description": "Check Session Exists Array Update Operator"
	},
	"Check Session Exists Array Floor": {
		"prefix": "exists_array_floor",
		"body": [
			"\n",
			"\tlb_existsFloor\t\tBOOLEAN;",
			"",
			"\tlb_existsFloor\t\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Exists Array Floor"
	},
	"Check Session Exists Array Class2": {
		"prefix": "exists_array_class2",
		"body": [
			"\n",
			"\tlb_ExistsArrayClass2\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass2();",
			"\n"
		],
		"description": "Check Session Exists Array Class2"
	},
	"Check Session Exists Array Class3": {
		"prefix": "exists_array_class3",
		"body": [
			"\n",
			"lb_ExistsArrayClass3\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass3();",
			"\n"
		],
		"description": "Check Session Exists Array Class3"
	},
	"Check Session Exists Array Class4": {
		"prefix": "exists_array_class4",
		"body": [
			"\n",
			"lb_ExistsArrayClass4\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass4();",
			"\n"
		],
		"description": "Check Session Exists Array Class4"
	},
	"Check Session Exists Array Class5": {
		"prefix": "exists_array_class5",
		"body": [
			"\n",
			"lb_ExistsArrayClass5\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass5();",
			"\n"
		],
		"description": "Check Session Exists Array Class5"
	},
	"Check Session Exists Array Sku": {
		"prefix": "exists_array_sku",
		"body": [
			"\n",
			"lb_ExistsArraySku\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArraySku();",
			"\n"
		],
		"description": "Check Session Exists Array Sku"
	},
	"Check Session Exists Array StoreFloor": {
		"prefix": "exists_array_store_floor",
		"body": [
			"\n",
			"lb_ExistsArrayStoreFloor\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Exists Array StoreFloor"
	},
	"Check Session Exists Array Logistics": {
		"prefix": "exists_array_logistics",
		"body": [
			"\n",
			"lb_ExistsArrayClass3\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Exists Array Logistics"
	},
	"Check Session Exists Array Partner": {
		"prefix": "exists_array_partner",
		"body": [
			"\n",
			"\tlb_ExistsPartner\tBOOLEAN := FALSE;",
			"",
			"\tlb_ExistsPartner\t:= PXS_UTILITY.f_ExistsArrayPartner();",
			"\n"
		],
		"description": "Check Session Exists Array Partner"
	},
	"Check Session Exists Array PayPartner": {
		"prefix": "exists_array_pay_partner",
		"body": [
			"\n",
			"\tlb_ExistsArrayPayPartner\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsArrayPayPartner();",
			"\n"
		],
		"description": "Check Session Exists Array PayPartner"
	},
	"Check Session Exists Array Ingredient": {
		"prefix": "exists_array_ingredient",
		"body": [
			"\n",
			"\tlb_ExistsIngredient\t\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsIngredient();",
			"\n"
		],
		"description": "Check Session Exists Array PayPartner"
	},
	"Check Session Exists Array SuibaiType": {
		"prefix": "exists_array_sui_bai_type",
		"body": [
			"\n",
			"\tlb_ExistsSuibaiType\t\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsArraySuibaiType();",
			"\n"
		],
		"description": "Check Session Exists Array SuibaiType"
	},
	"Check Session Exists Array Operator": {
		"prefix": "exists_array_operator",
		"body": [
			"\n",
			"\tlb_existsOperator\t\t\t\tBOOLEAN := PXS_UTILITY.f_ExistsArrayOperator();",
			"\n"
		],
		"description": "Check Session Exists Array Operator"
	},
	"Check Session Exists Array Plan No": {
		"prefix": "exists_array_plan_no",
		"body": [
			"\n",
			"\tlb_ExistsArrayPlanNo\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayPlanNo();",
			"\n"
		],
		"description": "Check Session Exists Array Plan No"
	},
	"Check Session Exists Array Plan Code": {
		"prefix": "exists_array_plan_cd",
		"body": [
			"\n",
			"\tlb_ExistsPlan\t\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayPlanCode();",
			"\n"
		],
		"description": "Check Session Exists Array Plan Code"
	},
	"Check Session Exists Array Error Code": {
		"prefix": "exists_array_error_code",
		"body": [
			"\n",
			"\tlb_ExistsArrayErrorCode\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayErrorCode();",
			"\n"
		],
		"description": "Check Session Exists Array Error Code"
	},
	"Check Session Exists Array Attribute Pattern": {
		"prefix": "exists_array_attribute_pattern",
		"body": [
			"\n",
			"\tlb_ExistsPattern\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsPattern\t\t\t= PXS_UTILITY.f_ExistsArrayAttributePattern();",
			"\n"
		],
		"description": "Check Session Exists Array Attribute Pattern"
	},
	"Check Session Exists Array Attribute Group": {
		"prefix": "exists_array_attibute_group",
		"body": [
			"\n",
			"\tlb_ExistsGroup\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsGroup\t\t\t\t= PXS_UTILITY.f_ExistsArrayAttributeGroup();",
			"\n"
		],
		"description": "Check Session Exists Array Attribute Group"
	},
	"Check Session Exists Array OffsetCategory": {
		"prefix": "exists_array_offset_category",
		"body": [
			"\n",
			"\tlb_ExistsArrayOffsetCategory\tBOOLEAN;",
			"",
			"\tlb_ExistsArrayOffsetCategory\t:= PXS_UTILITY.f_ExistsArrayOffsetCategory();",
			"\n"
		],
		"description": "Check Session Exists Array OffsetCategory"
	},
	"Check Session Exists Array Contract Company": {
		"prefix": "exists_array_contract_company",
		"body": [
			"\n",
			"\tlb_ExistsArrayContractCompany\tBOOLEAN;",
			"",
			"\tlb_ExistsArrayContractCompany\t:= PXS_UTILITY.f_ExistsArrayContractCompany();",
			"\n"
		],
		"description": "Check Session Exists Contract Company"
	},
	"Check Session Exists Array StoreGroup": {
		"prefix": "exists_array_store_group",
		"body": [
			"\n",
			"\tlb_ExistsArraystoreGroup\tBOOLEAN;",
			"",
			"\t-- 隍?謨ｰ驕ｸ謚樊凾縺ｮ繧ｰ繝ｫ繝ｼ繝励さ繝ｼ繝峨ｒ蜿門ｾ?",
			"\tlb_ExistsArraystoreGroup\t:= PXS_UTILITY.f_ExistsArrayStoreGroup();",
			"\n"
		],
		"description": "Check Session Exists Array StoreGroup"
	},
	"Check Session Exists Array RackDisplayUse": {
		"prefix": "exists_array_rack_display_use",
		"body": [
			"\n",
			"\tlb_ExistsRackDisplayUse\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsRackDisplayUse\t\t\t\t= PXS_UTILITY.f_ExistsRackDisplayUse();",
			"\n"
		],
		"description": "Check Session Exists Array RackDisplayUse"
	},
	"Check Session Exists Array RackDisplayGroup": {
		"prefix": "exists_array_rack_display_group",
		"body": [
			"\n",
			"\tlb_ExistsRackDisplayGroup\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsRackDisplayGroup\t\t\t\t= PXS_UTILITY.f_ExistsRackDisplayGroup();",
			"\n"
		],
		"description": "Check Session Exists Array RackDisplayGroup"
	},
	"Check Session Exists Array CombiGroupCode": {
		"prefix": "exists_array_combi_group_code",
		"body": [
			"\n",
			"\tlb_ExistsArrayCombiGroup\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayCombiGroupCode();",
			"\n"
		],
		"description": "Check Session Exists Array CombiGroupCode"
	},
	"Check Session Exists Array Order Operator": {
		"prefix": "exists_array_order_operator",
		"body": [
			"\n",
			"\tlb_ExistsArrayOrderOperator\tBOOLEAN\t:= PXS_UTILITY.PXS_UTILITY.f_ExistsArrayOrderOperator();",
			"\n"
		],
		"description": "Check Session Exists Array Order Operator"
	},
	"Check Session Exists Array Maker": {
		"prefix": "exists_array_maker",
		"body": [
			"\n",
			"\tlb_ExistsMaker\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsMaker\t\t\t:= PXS_UTILITY.f_ExistsArrayMaker();",
			"\n"
		],
		"description": "Check Session Exists Array Maker"
	},
	"Check Session Exists Array Auth Store": {
		"prefix": "exists_array_store_group",
		"body": [
			"\n",
			"\tlb_ExistsAuthStore\t\t\tBOOLEAN;",
			"",
			"\t-- 蠎苓?玲ｨｩ髯舌ｒ蜿門ｾ?",
			"\tlb_ExistsAuthStore\t:= PXS_AUTH.p_Initilize_Store(NULL, NULL, FALSE);",
			"\n"
		],
		"description": "Check Session Exists Array Auth Store"
	},
	"Check Session Exists Array In Company": {
		"prefix": "exists_array_in_company",
		"body": [
			"\n",
			"\tlb_ExistsArrayInCompany\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayInCompany\t\t:= PXS_UTILITY.f_ExistsArrayInCompany();",
			"\n"
		],
		"description": "Check Session Exists Array In Company"
	},
	"Check Session Exists Array Out Company": {
		"prefix": "exists_array_out_company",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutCompany\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutCompany\t:= PXS_UTILITY.f_ExistsArrayOutCompany();",
			"\n"
		],
		"description": "Check Session Exists Array Out Company"
	},
	"Check Session Exists Array In Store": {
		"prefix": "exists_array_in_store",
		"body": [
			"\n",
			"\tlb_ExistsArrayInStore\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= false;",
			"",
			"\tlb_ExistsArrayInStore\t\t:= PXS_UTILITY.f_ExistsArrayInStore();",
			"\n"
		],
		"description": "Check Session Exists Array In Store"
	},
	"Check Session Exists Array Out Store": {
		"prefix": "exists_array_out_store",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutStore\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutStore\t\t:= PXS_UTILITY.f_ExistsArrayOutStore();",
			"\n"
		],
		"description": "Check Session Exists Array Out Store"
	},
	"Check Session Exists Array In Store Floor": {
		"prefix": "exists_array_in_store_floor",
		"body": [
			"\n",
			"\tlb_ExistsArrayInStoreFloor\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayInStoreFloor\t:= PXS_UTILITY.f_ExistsArrayInStoreFloor();",
			"\n"
		],
		"description": "Check Session Exists Array In Store Floor"
	},
	"Check Session Exists Array Out Store Floor": {
		"prefix": "exists_array_out_store_floor",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutStoreFloor\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutStoreFloor\t:= PXS_UTILITY.f_ExistsArrayOutStoreFloor();",
			"\n"
		],
		"description": "Check Session Exists Array Out Store Floor"
	},
	"Check Session Exists Array Tenant Name": {
		"prefix": "exists_array_tenant_name",
		"body": [
			"\n",
			"\tlb_ExistArrayTenantName\t\tBOOLEAN DEFAULT FALSE;",
			"",
			"\tlb_ExistArrayTenantName\t\t:= PXS_UTILITY.f_ExistsArrayTenantName();",
			"\n"
		],
		"description": "Check Session Exists Array Out Store Floor"
	},
	"Check Error Code import csv": {
		"prefix": "check_error_code",
		"body": [
			"\n",
			"\tls_ErrorCheck\t\t\t\t\t\t\tVARCHAR;",
			"",
			"ls_ErrorCheck\t\t:= PXS_FILEUPLOAD.f_GetCheckErrorCode(i_CSVFile_Cd, i_CheckType);",
			"\n"
		],
		"description": "Check Error Code import csv"
	},
	"Check csv file type import csv": {
		"prefix": "check_is_csv_file_type",
		"body": [
			"\n",
			"\tlb_IsCSVFileType\t\t\t\t\t\tBOOLEAN DEFAULT FALSE;",
			"",
			"\tlb_IsCSVFileType\t:= PXS_FILEUPLOAD.f_CheckIsCSVFileType(i_Server_Cd, i_ImportBatchKey);",
			"\n"
		],
		"description": "Check Error Code import csv"
	},
	"Set Select Store List": {
		"prefix": "set_select_store_list",
		"body": [
			"\n",
			"\t-- 蠎苓?玲､懃ｴ｢譚｡莉ｶ縺ｧ謖?螳壹＆繧後◆繧ｳ繝ｼ繝峨ｈ繧翫∝ｺ苓?嶺ｸ隕ｧ繧剃ｽ懈??",
			"\tPERFORM PXS_UTILITY.f_SetSelectStoreList(NULL, i_StoreSelect, i_Store_Cd);",
			"\n"
		],
		"description": "Set Select Store List"
	},
	"Get Money Hontai": {
		"prefix": "get_money_hontai",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneyHontai (",
			"\t\t\t\t\t\t\t\tSIT.BITNK1,",
			"\t\t\t\t\t\t\t\tUIT.TAXTYPE,",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (NULL, UIT.TAX_CD, COALESCE(SIT.SALESTARTDATE, UPL.SALESTARTDATE)),",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t0",
			"\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Money Hontai"
	},
	"Get Make Sku Code": {
		"prefix": "get_make_sku_code",
		"body": [
			"\n",
			"\tlrec_GetMakeSkuCd\tRECORD;",
			"",
			"\t\tlrec_GetMakeSkuCd\t\t:= PXS_UTILITY.f_GetMakeSkuCd(i_Sku_Cd);",
			"\n"
		],
		"description": "Get Make Sku Code"
	},
	"Get Sku Code CM": {
		"prefix": "get_sku_code_CM",
		"body": [
			"\n",
			"\tlrec_GetSkuCdRec\tRECORD;",
			"",
			"\t\tlrec_GetSkuCdRec\t:= PXS_UTILITY.f_GetSkuCdCM(ls_Sku_Cd, i_UPCE_Flag);",
			"\n"
		],
		"description": "Get Sku Code CM"
	},
	"Get Money Sougaku": {
		"prefix": "get_money_sougaku",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneySougaku\t(",
			"\t\t\t\t\t\t\t\t\tORDERGNTNK1,",
			"\t\t\t\t\t\t\t\t\ti_TaxType,",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (NULL, i_Tax_Cd, CURRENT_DATE),",
			"\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\tCAST(ls_Config_00113 AS NUMERIC)",
			"\t\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Money Sougaku"
	},
	"Check Item Exist In UMF_PLANITEMSTORE": {
		"prefix": "check_reserve_item",
		"body": [
			"\n",
			"PXS_UTILITY.f_CheckReserveItem ( NULL , i_Sku_Cd, i_Store_Cd, NULL )",
			"\n"
		],
		"description": "Check Item Exist In UMF_PLANITEMSTORE"
	},
	"Check String Irregular Chars": {
		"prefix": "check_str_irregular_chars",
		"body": [
			"\n",
			"\t-- 鞫倩ｦ√?ｮ蜈･蜉帙メ繧ｧ繝?繧ｯ",
			"\tOPEN returnCursor FOR",
			"\t\tSelect CASE PXS_UTILITY.f_CheckStrIrregularChars(i_CommentValue) WHEN TRUE THEN 'TRUE'",
			"\t\t       ELSE 'FALSE' END AS RESULT;",
			"",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Check String Irregular Chars"
	},
	"Check reverse Item For Plan": {
		"prefix": "check_reserve_item_for_plan",
		"body": [
			"\n",
			"\tls_Plan_Check_Flag\t\tVARCHAR(1)\t:= '0';",
			"",
			"\t\tls_Plan_Check_Flag := PXS_UTILITY.f_CheckReserveItemForPlan(NULL, i_Sku_Cd, NULL, i_Plan_Cd);",
			"\n"
		],
		"description": "Check reverse Item For Plan"
	},
	"Check Caset Bitnk": {
		"prefix": "check_caset_bitnk",
		"body": [
			"\n",
			"PXS_UTILITY.f_CheckCaseSetBitnk (",
			"\t\t\t\t\t\t\t\t\tld_CurrentDate,",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.STORE_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN6, -- SKU_CD",
			"\t\t\t\t\t\t\t\t\tln_Bitnk,",
			"\t\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC) -- QTY",
			"\t\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Check Caset Bitnk"
	},
	"Get Operator Data": {
		"prefix": "get_operator_data",
		"body": [
			"\n",
			"\tPERFORM PXS_UTILITY.p_GetOperatorData(i_Operator_Cd, i_Company_Cd);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_CALENDARDATELIST;",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Operator Data"
	},
	"Get Adopt Price": {
		"prefix": "get_adopt_price",
		"body": [
			"\n",
			"\t--------------------------",
			"\t-- 譛ｬ譌･謗｡逕ｨ 螢ｲ萓｡縲∫匱豕ｨ蜊倅ｾ｡縲￣OS蜴滉ｾ｡",
			"\t--------------------------",
			"\t-- 謖?螳壽律譎らせ縺ｮ謗｡逕ｨ螢ｲ萓｡縲￣OS蜴滉ｾ｡",
			"\tlrec_GetAdoptPrice\t\t:= PXS_UTILITY.f_GetAdoptPrice(",
			"\t\t\t\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(i_FixedDate, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\t\t\t\ti_Sku_Cd",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Adopt Price"
	},
	"Get Gnk Column List": {
		"prefix": "get_gnk_column_list",
		"body": [
			"\n",
			"\treturnCursor\tREFCURSOR;",
			"",
			"\tPERFORM PXS_UTILITY.f_GetGnkColumnList(i_ProfitType);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_GNKCOLUMN;",
			"",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Gnk Column List"
	},
	"Get Last Year Date": {
		"prefix": "get_last_year_date",
		"body": [
			"\n",
			"PXS_UTILITY.F_GETLASTYEARDATE(TMP_IB04_STOREINFO.SALESDATE)",
			"\n"
		],
		"description": "Get Last Year Date"
	},
	"Get Dispensing Floor Code": {
		"prefix": "get_dispensing_floor_cd",
		"body": [
			"\n",
			"\tls_Floor_Cd_Check\t\t\t\t\tVARCHAR\t\t\t\t\t\t\t\t\t\t:= '';",
			"\tls_SysConfigDispensingClass\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tlrec_UserInfo\t\t\t\t:= PXS_USER.p_GetUserInfo();",
			"\tla_ConfigList\t\t\t\t:= ARRAY[C_CONFIG_IB004];",
			"",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig(NULL, la_ConfigList);",
			"",
			"\tls_SysConfigDispensingClass\t:= PXS_UTILITY.F_GETSYSTEMCONFIG(lrec_UserInfo.SYSTEMMODE_CD, C_CONFIG_IB004);",
			"\tls_Floor_Cd_Check\t\t\t:= PXS_UTILITY.F_GETDISPENSINGFLOORCD(i_Store_Cd, i_Floor_Cd, i_Class_Cd, ls_SysConfigDispensingClass);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\tls_Floor_Cd_Check\t\tAS RESULT_CHECK_FLOOR_CD;",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Dispensing Floor Code"
	},
	"Get Item Store History": {
		"prefix": "get_item_store_history",
		"body": [
			"\n",
			"\tln_ItemMasterGntnk\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_ItemPOSGntnk\t\t\t\t\t\tUMF_ITEMSTORE.POSGNTNK1%TYPE;",
			"\tln_ItemWholeSaleGntnk\t\t\t\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tln_ItemNet1Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET1GNTNK1%TYPE;",
			"\tln_ItemNet2Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET2GNTNK1%TYPE;",
			"\tln_ItemBitnk\t\t\t\t\t\tUMF_ITEMSTORE.BITNK1%TYPE;",
			"\tls_ItemStore_Partner_Cd\t\t\t\tUMF_ITEMSTORE.PARTNER_CD%TYPE;",
			"",
			"\t\tSELECT\tCASE WHEN ls_TaxType = '1' THEN ORDERGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN ORDERGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN POSGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN POSGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN WHOLESALEGNTNK1\tWHEN ls_TaxType IN ('2', '3') THEN WHOLESALEGNTNK2\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN NET1GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET1GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN NET2GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET2GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN BITNK1\t\t\tWHEN ls_TaxType IN ('2', '3') THEN BITNK2\t\t\tEND,",
			"\t\t\t\tPARTNER_CD",
			"\t\tINTO\tln_ItemMasterGntnk,",
			"\t\t\t\tln_ItemPOSGntnk,",
			"\t\t\t\tln_ItemWholeSaleGntnk,",
			"\t\t\t\tln_ItemNet1Gntnk,",
			"\t\t\t\tln_ItemNet2Gntnk,",
			"\t\t\t\tln_ItemBitnk,",
			"\t\t\t\tls_ItemStore_Partner_Cd",
			"\t\tFROM\tPXS_UTILITY.f_GetItemStoreHistory(",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\ti_Sku_Cd,",
			"\t\t\t\t\ti_DenpInspectDate",
			"\t\t\t\t);",
			"\n"
		],
		"description": "Get Item Store History"
	},
	"Get Tenant PayDate": {
		"prefix": "get_tenant_pay_date",
		"body": [
			"\n",
			"\tld_PayDate\t\t\tDATE;",
			"",
			"\tld_PayDate\t:= PXS_UTILITY.f_GetTenantPayDate(NULL, i_Store_Cd, ls_Class5_Cd, '2', CAST(i_DelimitDate AS DATE));",
			"\n"
		],
		"description": "Get Tenant PayDate"
	},
	"Get Order Stock Qty": {
		"prefix": "get_order_stock_qty",
		"body": [
			"\n",
			"\tln_StockQty\t\t\tBIGINT := NULL;\t\t\t\t\t\t\t\t\t-- 逋ｺ豕ｨ逕ｨ逅?隲門惠蠎ｫ謨ｰ",
			"",
			"\t\t\tln_StockQty := CAST(PXS_UTILITY.f_GetOrderStockQty(i_Store_Cd, ls_Sku_Cd) AS BIGINT);",
			"\n"
		],
		"description": "Get Order S"
	},
	"Get Item Store History Profit Gntnk": {
		"prefix": "get_item_store_history_profit_gntnk",
		"body": [
			"\n",
			"\tln_PosGntnk_His\t\t\tUMF_ITEMSTORE.POSGNTNK1%TYPE;",
			"\tln_OrderGntnk_His\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_WholeSaleGntnk1_His\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tln_Net1Gntnk1_His\t\tUMF_ITEMSTORE.NET1GNTNK1%TYPE;",
			"\tln_Net2Gntnk1_His\t\tUMF_ITEMSTORE.NET2GNTNK1%TYPE;",
			"\tln_ProfitGntnk_His\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"",
			"\tSELECT\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN ORDERGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN ORDERGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN POSGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN POSGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN WHOLESALEGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN WHOLESALEGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN NET1GNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN NET1GNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN NET2GNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN NET2GNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN PROFITGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN PROFITGNTNK2",
			"\t\t\tEND",
			"\tINTO\tln_OrderGntnk_His,",
			"\t\t\tln_PosGntnk_His,",
			"\t\t\tln_WholeSaleGntnk1_His,",
			"\t\t\tln_Net1Gntnk1_His,",
			"\t\t\tln_Net2Gntnk1_His,",
			"\t\t\tln_ProfitGntnk_His",
			"\tFROM\tPXS_UTILITY.f_GetItemStoreHistoryProfitGntnk(NULL, i_Store_Cd, i_Sku_Cd, i_InDate);",
			"\n"
		],
		"description": "Get Item Store History Profit Gntnk"
	},
	"Get Order Gntnk": {
		"prefix": "get_order_gntnk",
		"body": [
			"\n",
			"\t-- 謖?螳壽律譎らせ縺ｮ逋ｺ豕ｨ蜊倅ｾ｡",
			"\tlrec_GetOrderGntnk\t\t:= PXS_UTILITY.f_GetOrderGntnk(",
			"\t\t\t\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(i_FixedDate, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\t\t\t\ti_Sku_Cd",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Order Gntnk"
	},
	"Get CombiGroupCd": {
		"prefix": "get_combi_group_cd",
		"body": [
			"\n",
			"\tlrec_GetCombiGroupCd\tRECORD;",
			"",
			"\t\tlrec_GetCombiGroupCd\t:= PXS_UTILITY.f_GetCombiGroupCd(ls_EntryStore_Cd, '2');",
			"\n"
		],
		"description": "Get CombiGroupCd"
	},
	"Get SkuCd can pass include_cd": {
		"prefix": "get_sku_cd",
		"body": [
			"\n",
			"\tla_GetSkuCd\t\tRECORD;",
			"",
			"\t-- 蝠?蜩∝玄蛻?遲牙叙蠕?",
			"\tla_GetSkuCd\t:= PXS_UTILITY.f_GetSkuCd(i_Sku_Cd);",
			"\n"
		],
		"description": "Get SkuCd can pass include_cd"
	},
	"Get Reserve Item Gntnk Pattern": {
		"prefix": "get_reserve_item_gntnk_pattern",
		"body": [
			"\n",
			"\tlrec_GetReserveItemGntnkPattern\tRECORD;",
			"",
			"\t\t\t\t-- 莠育ｴ?蝠?蜩∝次萓｡繝代ち繝ｼ繝ｳ諠?蝣ｱ蜿門ｾ?(蜿肴丐譌･譎らせ縺ｾ縺ｧ縺ｮ莠育ｴ?蝠?蜩∝次萓｡繝代ち繝ｼ繝ｳ諠?蝣ｱ)",
			"\t\t\t\tlrec_GetReserveItemGntnkPattern\t:= PXS_UTILITY.f_GetReserveItemGntnkPattern(i_Sku_Cd, lrec_TmpReserveItemGntnkPattern.PATTERN_CD, lrec_TmpReserveItemGntnkPattern.GROUP_CD, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Gntnk Pattern"
	},
	"Check is Whole Sale": {
		"prefix": "check_is_whole_sale",
		"body": [
			"\n",
			"\tlb_IsWholeSale\t\t\t\tBOOLEAN := FALSE;",
			"",
			"\tlb_IsWholeSale := PXS_UTILITY.f_IsWholeSale (",
			"\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\ti_Partner_Cd,",
			"\t\t\t\t\t\tTO_DATE(i_InspectDate, 'YYYY/MM/DD')",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check is Whole Sale"
	},
	"Check Double Number": {
		"prefix": "check_double_number",
		"body": [
			"\n",
			"PXS_UTILITY.f_checkDoubleNumber(i_Qty)",
			"\n"
		],
		"description": "Check Double Number"
	},
	"Get Reserve Item Bitnk Pattern": {
		"prefix": "get_reserve_item_bitnk_pattern",
		"body": [
			"\n",
			"\tlrec_GetReserveItemBitnkPattern\tRECORD;",
			"",
			"\t\t\t\t-- 莠育ｴ?蝠?蜩∝｣ｲ萓｡繝代ち繝ｼ繝ｳ諠?蝣ｱ蜿門ｾ?",
			"\t\t\t\tlrec_GetReserveItemBitnkPattern\t:= PXS_UTILITY.f_GetReserveItemBitnkPattern(i_Sku_Cd, lrec_TmpReserveItemBitnkPattern.PATTERN_CD, lrec_TmpReserveItemBitnkPattern.GROUP_CD, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Bitnk Pattern"
	},
	"Selector find element in jquery": {
		"prefix": "$_find",
		"body": [
			"$('#GROUP_1').find('#COMMAND')"
		],
		"description": "Selector find element in jquery"
	},
	"Set value element in jquery": {
		"prefix": "$_setValue",
		"body": [
			"$('#GROUP_1').find('#COMMAND').setValue('')"
		],
		"description": "Set value element in jquery"
	},
	"Get value element in jquery": {
		"prefix": "$_setValue",
		"body": [
			"$('#GROUP_1').find('#COMMAND').getValue()"
		],
		"description": "Get value element in jquery"
	},
	"Get Reserve Item Class": {
		"prefix": "get_reserve_item_class",
		"body": [
			"\n",
			"\tlrec_GetReserveItemClass\tRECORD;",
			"",
			"\t-- 莠育ｴ?蛻?鬘槫膚蜩∵ュ蝣ｱ蜿門ｾ?",
			"\tlrec_GetReserveItemClass\t:= PXS_UTILITY.f_GetReserveItemClass(i_Sku_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Class"
	},
	"Get Reserve Item Store": {
		"prefix": "get_reserve_item_store",
		"body": [
			"\n",
			"\tlrec_GetReserveItemStore\tRECORD;",
			"",
			"\t-- 莠育ｴ?蠎苓?怜膚蜩∵ュ蝣ｱ蜿門ｾ?",
			"\tlrec_GetReserveItemStore\t:= PXS_UTILITY.f_GetReserveItemStore(i_Sku_Cd, i_Store_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Store"
	},
	"Get Reserve Item Pop": {
		"prefix": "get_reserve_item_pop",
		"body": [
			"\n",
			"\tlrec_GetReserveItemPop\t\tRECORD;",
			"",
			"\t-- 莠育ｴ?蝠?蜩￣OP諠?蝣ｱ",
			"\tlrec_GetReserveItemPop\t\t:= PXS_UTILITY.f_GetReserveItemPop(i_Sku_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Pop"
	},
	"Get Operator Whole Sale Type": {
		"prefix": "get_operator_whole_sale_type",
		"body": [
			"\n",
			"\tls_WholeSalesType\t\tVARCHAR;",
			"",
			"\tls_WholeSalesType\t:= PXS_UTILITY.f_GetOperatorWholeSaleType(lrec_UserInfo.OPERATOR_CD, NULL);",
			"\n"
		],
		"description": "Get Operator Whole Sale Type"
	},
	"Convert Round Number Format": {
		"prefix": "convert_round_number_format",
		"body": [
			"\n",
			"PXS_UTILITY.f_ConvertRoundNumberFormat(targetvaluenum, i_Config_00104, 0)",
			"\n"
		],
		"description": "Convert Round Number Format"
	},
	"Get Money Hontai Item Master": {
		"prefix": "get_money_hontai_item_master",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneyHontaiItemMaster (",
			"\t\tCAST(COLUMNDATA.COLUMN29 AS NUMERIC), -- MONEYSOUGAKU",
			"\t\tCOLUMNDATA.COLUMN15, -- TAXTYPE",
			"\t\tPXS_UTILITY.f_GetTaxrate(",
			"\t\t\t\tNULL,",
			"\t\t\t\tCOLUMNDATA.COLUMN16, -- TAX_CD",
			"\t\t\t\ti_ReflectDate),",
			"\t\tls_Config_00112,",
			"\t\tCAST(ls_Config_00113 AS NUMERIC)",
			")",
			"\n"
		],
		"description": "Get Money Hontai Item Master"
	},
	"Get InStore_Cd": {
		"prefix": "get_instore_cd",
		"body": [
			"\n",
			"\tla_GetInstoreCd\t\tRECORD;",
			"",
			"\t-- 繧､繝ｳ繧ｹ繝医い逋ｺ逡ｪ",
			"\tla_GetInstoreCd\t\t:= PXS_UTILITY.f_GetInStoreCd(i_IssuenoType);",
			"\n"
		],
		"description": "Get InStore_Cd"
	},
	"Get Plan_Cd": {
		"prefix": "get_plan_cd",
		"body": [
			"\n",
			"\tlrec_GetPlanCd\t\tRECORD;",
			"",
			"\t\tlrec_GetPlanCd\t\t:= PXS_UTILITY.f_GetPlanCd();",
			"\n"
		],
		"description": "Get Plan_Cd"
	},
	"Get Hontai": {
		"prefix": "get_hontai",
		"body": [
			"\n",
			"\tln_OrderGntnk\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"",
			"\t\t\t\tln_OrderGntnk := PXS_UTILITY.F_GETHONTAI(i_OrderGntnk, i_TaxType, ld_Taxrate, i_Config_B0001, 2);",
			"\n"
		],
		"description": "Get Hontai"
	},
	"Get zero remove skuCd": {
		"prefix": "get_zero_remove_sku_cd",
		"body": [
			"\n",
			"PXS_UTILITY.f_getzeroremoveskucd(SKU_CD)",
			"\n"
		],
		"description": "Get zero remove skuCd"
	},
	"Get Append Check Digit": {
		"prefix": "get_append_check_digit",
		"body": [
			"\n",
			"\tls_Plan_Cd\t\t\tUMF_PLAN.PLAN_CD%TYPE;",
			"",
			"\t\t\t-- 繝√ぉ繝?繧ｯ繝?繧ｸ繝?繝井ｻ伜刈",
			"\t\t\tls_Plan_Cd := PXS_UTILITY.f_AppendCheckdigit(LEFT(ls_Plan_Cd, 7));",
			"\n"
		],
		"description": "Get Append Check Digit"
	},
	"Get Check Digit": {
		"prefix": "get_check_digit",
		"body": [
			"\n",
			"\tln_Denpno\t\t\tAS NUMERIC;",
			"",
			"\t\t\t\tln_Denpno := PXS_UTILITY.f_GetCheckdigit(CAST(DENPNO + ln_OldBaseDenpNo AS VARCHAR)) AS NUMERIC);",
			"\n"
		],
		"description": "Get Check Digit"
	},
	"Get Delivery Store Code": {
		"prefix": "get_delivery_store_cd",
		"body": [
			"\n",
			"\tlrec_DeliveryStore\t\t\t\t\t\tRECORD;",
			"",
			"\t\tlrec_DeliveryStore := PXS_UTILITY.f_GetDeliveryStoreCd (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- FINALDESTINATION_CD ",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN NULL",
			"\t\t\t\t\t\t\t\t\t\tELSE COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\tEND, -- ORDERDATE",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\tEND -- RETURNDATE",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Delivery Store Code"
	},
	"Resourceval very popular use": {
		"prefix": "resourceval_popular_use",
		"body": [
			"-- RESOURCE THUONG DUNG ",
			"",
			"ﾘｿｰｽｺｰﾄﾞ\t\t\t\t\t\t\t\t\t\t\t\tﾘｿｰｽﾀｲﾌﾟ\t\t\t\t\t\t\tﾘｿｰｽ値",
			"-- label cac nut ",
			"LA09_001.LABELTEXT.CONFIRM_MESSAGE_YES\t\t\t\t   画面使用メッセージ\t\t\t\t\tはい",
			"",
			"-- label normal",
			"LA09_001.LABELTEXT.FILENAMEDOWNLOAD\t\t\t\t\t   画面使用メッセージ\t\t\t\t\tファイル配信照会_",
			"",
			"-- label ERROR",
			"PXC_LA09_001.p_GridSearch.SYSTEMERROR\t\t\t\t   メッセージ\t\t\t\t\t\t\tデータ検索時に致命的なエラーが発生しました。(SQLSTATE:{1}, SQLERRM:{2})",
			"LA09_001.MESSAGETEXT.ERROR.MESSAGE\t\t\t\t\t   画面使用メッセージ\t\t\t\t\t選択対象がありません。",
			"PXC_LA04_001.p_GridDelete.SYSTEMERROR\t\t\t\t   メッセージ\t\t\t\t\t\t\tデータ削除時に致命的なエラーが発生しました。(SQLSTATE:{1}, SQLERRM:{2})",
			"PXC_AA19_001.p_GridEntryTab1.SYSTEMERROR\t\t\t   メッセージ\t\t\t\t\t\t\tデータ登録時に致命的なエラーが発生しました。(SQLSTATE:{1}, SQLERRM:{2})",
			"",
			"-- label ALREADY UPDATED",
			"PXC_LA04_001.p_GridDelete.EXP_ALREADY_DELETED\t\t   メッセージ\t\t\t\t\t\t\t既にデータが削除されています。再度検索してください。",
			"PXC_AA19_001.p_FormEntryTab2.EXP_ALREADY_UPDATED\t   メッセージ\t\t\t\t\t\t\t他のユーザによりデータが更新されています。再度検索してください。",
			"HA33_001.LABELTEXT.CONFIRM.OK\t\t\t\t\t\t   メッセージ\t\t\t\t\t\t\tはい",
			"HA33_001.LABELTEXT.CONFIRM.CANCEL\t\t\t\t\t   メッセージ\t\t\t\t\t\t\tいいえ",
			"HA33_001.LABELTEXT.WAITTING.CONFIRM\t\t\t\t\t   メッセージ\t\t\t\t\t\t\t確認",
			"PXC_HA33_001.p_GridSearchDetail.HASCOMMENT\t\t\t   メッセージ\t\t\t\t\t\t\t有",
			"B13.MESSAGE_ERROR.NO_DATA\t\t\t\t\t\t\t   メッセージ\t\t\t\t\t\t\t登録データがありません。",
			"LA09_001.MESSAGETEXT.ERROR.MESSAGE\t\t\t\t\t   メッセージ\t\t\t\t\t\t\t選択対象がありません。",
			"AB13.MESSAGETEXT.ALL_STORE_CD\t\t\t\t\t\t   メッセージ\t\t\t\t\t\t\t全店舗",
			"AB13.MESSAGETEXT.ALL_CLASS_CD\t\t\t\t\t\t   メッセージ\t\t\t\t\t\t\t全分類",
			"AB85_001.TEXT.NO\t\t\t\t\t\t\t\t\t   メッセージ\t\t\t\t\t\t\tいいえ"
		],
		"description": "Resourceval very popular use"
	},
	"Get Zeigaku": {
		"prefix": "get_zeigaku",
		"body": [
			"\n",
			"\t----------",
			"\t-- 遞朱｡? --",
			"\t----------",
			"\to_PurchaseGnkBik.GNKTAXKNGK := PXS_UTILITY.f_GetZeigaku(",
			"\t\to_PurchaseGnkBik.GNKKNGK,\t-- i_Kngk",
			"\t\ti_TaxType,\t\t\t\t\t-- i_TaxType",
			"\t\ti_TaxRate,\t\t\t\t\t-- i_TaxRate",
			"\t\ti_CostRoundType\t\t\t\t-- i_HsuType",
			"\t);",
			"\n"
		],
		"description": "Get Zeigaku"
	},
	"Get Item Class": {
		"prefix": "get_item_class",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetItemClass(",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\t\t\tlrec_DeliveryDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\tla_OutRec.INSPECTDATE",
			"\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Item Class"
	},
	"Get Nsw DenpType Purchase": {
		"prefix": "get_nsw_denp_type_purchase",
		"body": [
			"\n",
			"\t\t\t\tPXS_UTILITY.f_GetNswDenpTypePurchase(",
			"\t\t\t\t\tC_OHD.STORE_CD,",
			"\t\t\t\t\tC_OHD.PARTNER_CD,",
			"\t\t\t\t\tC_OHD.LOGISTICSCENTER_CD,",
			"\t\t\t\t\tLGC.CENTERKIND,",
			"\t\t\t\t\tC_OHD.TAXTYPE,",
			"\t\t\t\t\tC_OHD.TAXRATE,",
			"\t\t\t\t\tC_OHD.INSPECTDATE,",
			"\t\t\t\t\tC_OHD.DENPKIND",
			"\t\t\t\t)",
			"\n"
		],
		"description": "Get Nsw DenpType Purchase"
	},
	"Get Nsw DenpType Move": {
		"prefix": "get_nsw_denp_type_move",
		"body": [
			"\n",
			"\t\t\tPXS_UTILITY.f_GetNswDenpTypeMove(",
			"\t\t\t\tHD.INSTORE_CD,",
			"\t\t\t\tHD.OUTSTORE_CD,",
			"\t\t\t\t'1',\t-- 蜈･蜃ｺ蠎ｫ蛹ｺ蛻?(0:蜈･蠎ｫ縲?1:蜃ｺ蠎ｫ)",
			"\t\t\t\tDT.TAXTYPE,",
			"\t\t\t\tDT.TAXRATE,",
			"\t\t\t\tHD.INSPECTDATE",
			"\t\t\t),",
			"\n"
		],
		"description": "Get Nsw DenpType Move"
	},
	"Get ShelLifeCycle": {
		"prefix": "get_shel_Life_cycle",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetShelfLifeCycle(",
			"\tITEM.SHELFLIFE,",
			"\tCLASS2.CLASS_CD",
			")",
			"\n"
		],
		"description": "Get ShelLifeCycle"
	},
	"Get store history": {
		"prefix": "get_store_history",
		"body": [
			"\n",
			"\tls_Company_Cd\t\t\t\tUTR_PURCHASEDENPHEADER.COMPANY_CD%TYPE;",
			"\tls_Store\t\t\t\t\tUTR_RETURN.STORE_CD%TYPE;",
			"\tld_ReturnDate\t\t\t\tUTR_RETURN.RETURNDATE%TYPE;",
			"",
			"",
			"\t\t\t\t\t-- 莨夂､ｾ繧ｳ繝ｼ繝?",
			"\t\t\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\t\t\tINTO\tls_Company_Cd",
			"\t\t\t\t\tFROM\tPXS_UTILITY.f_GetStoreHistory(ls_Store, ld_ReturnDate);",
			"\n"
		],
		"description": "Get store history"
	},
	"Get Delimit Date": {
		"prefix": "get_de_limit_date",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetDelimitDate(NULL, PSD.PAYPARTNER_CD, ld_ApclosingDate, ld_ApclosingDate)",
			"\n"
		],
		"description": "Get Delimit Date"
	},
	"Get Class History": {
		"prefix": "get_class_history",
		"body": [
			"\n",
			"\tSELECT\tPARENTCLASS_CD",
			"\tFROM\tPXS_UTILITY.f_GetClassHistory(NULL, CLS3.ItemAttributeType, CLS3.ClassType, CLS3.Class_Cd, SSch.InventoryDate)",
			"\n"
		],
		"description": "Get Class History"
	},
	"Update System Config": {
		"prefix": "get_class_history",
		"body": [
			"\n",
			"\tlb_UpdSystemConfig\t\tBOOLEAN;",
			"",
			"\t\tlb_UpdSystemConfig\t:= PXS_UTILITY.f_UpdSystemConfig(lrec_UserInfo.User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.SystemMode_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'HG002',",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ls_MaxAccountsMonth,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.Operator_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t CAST(CURRENT_TIMESTAMP AS TIMESTAMP WITHOUT TIME ZONE),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.Proc_Cd);",
			"\n"
		],
		"description": "Get Class History"
	},
	"Lpad format": {
		"prefix": "lpad",
		"body": [
			"LPAD('PostgreSQL', 15, '*')"
		],
		"description": "Lpad format"
	},
	"Rpad format": {
		"prefix": "rpad",
		"body": [
			"RPAD('w3r', 10, '*')"
		],
		"description": "Rpad format"
	},
	"Coalesce format": {
		"prefix": "rpad",
		"body": [
			"COALESCE(COLUMN5, '')"
		],
		"description": "Coalesce format: n蘯ｿu tham s盻? th盻ｩ nh蘯･t lﾃ? NULL thﾃｬ s蘯ｽ s盻ｭ d盻･ng tham s盻? th盻ｩ 2"
	},
	"NULLIF format": {
		"prefix": "nullif",
		"body": [
			"NULLIF(i_ImportBatchKey, '')"
		],
		"description": "NULLIF format: n蘯ｿu tham s盻? th盻ｩ nh蘯･t b蘯ｱng tham s盻? th盻ｩ 2 thﾃｬ tr蘯｣ v盻? NULL"
	},
	"GREATEST format": {
		"prefix": "greatest",
		"body": [
			"GREATEST(25, 6, 7, 10, 20, 54);  --  returns 54"
		],
		"description": "GREATEST format: tr蘯｣ v盻? giﾃ｡ tr盻? l盻嬾 nh蘯･t trong cﾃ｡c giﾃ｡ tr盻? truy盻］ vﾃ?o"
	},
	"LEAST format": {
		"prefix": "least",
		"body": [
			"LEAST(20, 30, 60, 10); -- 10"
		],
		"description": "LEAST format: tr蘯｣ v盻? giﾃ｡ tr盻? nh盻? nh蘯･t trong cﾃ｡c giﾃ｡ tr盻? truy盻］ vﾃ?o"
	},
	"Unnest format": {
		"prefix": "unnest",
		"body": [
			"unnest(ARRAY[1,2])",
			"",
			"--  unnest",
			"-- --------",
			"--       1",
			"--       2",
			"-- (2 rows)"
		],
		"description": "Unnest format: convert array to set of rows"
	},
	"distinct on format": {
		"prefix": "distinct...on",
		"body": [
			"\n",
			"SELECT\tDISTINCT ON(UPDDATA.SKU_CD)",
			"\t\tUPDDATA.SKU_CD,",
			"\t\tUPDDATA.APPLY_DATE,",
			"\t\tUPDDATA.TAXTYPE,",
			"\t\tUPDDATA.TAX_CD",
			"FROM\tTMP_BA32_PROCESSDATA UPDDATA",
			"WHERE\tUPDDATA.EDIT_TYPE\t\t= '2'",
			"AND\t\tUPDDATA.APPLY_DATE\t\t= CURRENT_DATE",
			"AND\t\tUPDDATA.TAX_CD_FLAG\t\t= '0';",
			"\n"
		],
		"description": "distinct on format: distinct theo c盻冲"
	},
	"RANK format": {
		"prefix": "rank",
		"body": [
			"RANK() OVER(ORDER BY SUM_AMOUNT DESC)"
		],
		"description": "RANK format : RANK s蘯ｯp x蘯ｿp th盻ｩ h蘯｡ng, ﾄ黛ｻ渡g h蘯｡ng thﾃｬ h蘯｡ng k蘯ｿ ti蘯ｿp s蘯ｽ b盻? m蘯･t, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"DENSE_RANK format": {
		"prefix": "dense_rank",
		"body": [
			"DENSE_RANK() OVER(PARTITION BY SKU_CD ORDER BY GNTNK_STORECOUNT\t\t DESC, GNTNK)"
		],
		"description": "DENSE_RANK format : x蘯ｿp h蘯｡ng, ﾄ黛ｻ渡g h蘯｡ng thﾃｬ h蘯｡ng k蘯ｿ ti蘯ｿp v蘯ｫn ﾄ柁ｰ盻｣c hi盻ハ th盻?, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()."
	},
	"GENERATE_SERIES format": {
		"prefix": "generate_series",
		"body": [
			"GENERATE_SERIES(1, 5)"
		],
		"description": "GENERATE_SERIES format: tr蘯｣ v盻? to - from + 1 dﾃｲng cﾃｳ giﾃ｡ tr盻? t盻ｫ from ﾄ黛ｺｿn to vﾃ? bﾆｰ盻嫩 nh蘯｣y lﾃ? step (t蘯｡o s盻? liﾃｪn ti蘯ｿp t盻ｫ -> ﾄ黛ｺｿn.), cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"repeat format": {
		"prefix": "repeat",
		"body": [
			"REPEAT('i', 5)"
		],
		"description": "repeat format: l蘯ｷp l蘯｡i, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"trim format": {
		"prefix": "trim",
		"body": [
			"TRIM('  PostgreSQL TRIM  ')"
		],
		"description": "trim format: xﾃｳa all space ﾄ黛ｺｧu vﾃ? cu盻訴 string {TRIM(LEADING FROM string)}"
	},
	"ltrim format": {
		"prefix": "ltrim",
		"body": [
			"LTRIM('enterprise', 'e') -- nterprise"
		],
		"description": "ltrim format: xﾃｳa kﾃｽ t盻ｱ bﾃｪn trﾃ｡i {LTRIM(string, [character]);}"
	},
	"rtrim format": {
		"prefix": "rtrim",
		"body": [
			"RTRIM('enterprise', 'e') -- enterpris"
		],
		"description": "rtrim forma: xﾃｳa kﾃｽ t盻ｱ bﾃｪn ph蘯｣i {RTRIM(string, [character]);}"
	},
	"raise log pxsbuilder error sp": {
		"prefix": "raise_log_pxs_builder_error_sp",
		"body": [
			"raise notice 'SQL = % ',PXS_PLSBUILDER.Get();"
		],
		"description": "rtrim forma: xﾃｳa kﾃｽ t盻ｱ bﾃｪn ph蘯｣i {RTRIM(string, [character]);}"
	},
	"create new name folder fftp": {
		"prefix": "create_new_name_folder_fftp",
		"body": [
			"新規_20230113_中北"
		],
		"description": "rtrim forma: xﾃｳa kﾃｽ t盻ｱ bﾃｪn ph蘯｣i {RTRIM(string, [character]);}"
	},
	"create update name folder fftp": {
		"prefix": "create_update_name_folder_fftp",
		"body": [
			"変更_20240604_山田"
		],
		"description": "rtrim forma: xﾃｳa kﾃｽ t盻ｱ bﾃｪn ph蘯｣i {RTRIM(string, [character]);}"
	},
	"regex clean tab": {
		"prefix": "regex_clean_tab",
		"body": [
			".*\t[\r\n]"
		],
		"description": "rtrim forma: xﾃｳa kﾃｽ t盻ｱ bﾃｪn ph蘯｣i {RTRIM(string, [character]);}"
	},
	"btrim format": {
		"prefix": "btrim",
		"body": [
			"BTRIM('enterprise', 'e') -- nterpris"
		],
		"description": "btrim format: xﾃｳa kﾃｽ t盻ｱ bﾃｪn trﾃ｡i vﾃ? ph蘯｣i {RTRIM(string, [character]);}"
	},
	"concat format": {
		"prefix": "concat",
		"body": [
			"CONCAT(IT.SNAME, '縲', IT.STANDARDNAME)"
		],
		"description": "concat format: n盻訴 chu盻擁 n蘯ｿu chu盻擁 b蘯ｱng r盻溶g thﾃｬ v蘯ｫn hi盻㌻ nh盻ｯng char khﾃ｡c r盻溶g {CONCAT(str_1, str_2, ...)}"
	},
	"concentratate format": {
		"prefix": "||",
		"body": [
			"'Concatenation' || ' ' || 'Operator'"
		],
		"description": "concentratate format: n盻訴 chu盻擁 n蘯ｿu chu盻擁 b蘯ｱng r盻溶g thﾃｬ chu盻擁 tr蘯｣ v盻? lﾃ? r盻溶g(NULL) {CONCAT(str_1, str_2, ...)}"
	},
	"insert log": {
		"prefix": "vulog",
		"body": [
			"INSERT INTO VU_LOG VALUES(CONCAT('TEST:', TEST));"
		],
		"description": "insert log"
	},
	"create index": {
		"prefix": "create_index_pattern",
		"body": [
			"CREATE INDEX IF NOT EXISTS IDX1_TMP_LA15_DATA ON TMP_LA15_DATA(CALENDARTYPE);"
		],
		"description": "create vu log"
	},
	"create vu log server": {
		"prefix": "create_vu_log_debug_server",
		"body": [
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"-- DROP SCHEMA VN CASCADE;",
			"-- CREATE SCHEMA VN AUTHORIZATION uvuser;",
			"",
			"CREATE OR REPLACE FUNCTION VULOG(i_message character varying)",
			"RETURNS void AS",
			"$BODY$",
			"/*",
			"\tInsert data to table",
			"*/",
			"DECLARE",
			"\t-- 変数定義",
			"\tls_SqlState\t\t\tVARCHAR(5);",
			"\tls_SqlErrMsg\t\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE := '';",
			"\tls_ConnectionName\tTEXT;",
			"\tls_ConnStr\t\t\tTEXT;",
			"\tls_SQLPHUOCLOGry\tTEXT;",
			"\tls_Password\tTEXT;",
			"",
			"\t-- レコードとカーソル定義",
			"\tlrec_StatActivity\tRECORD;",
			"BEGIN",
			"\tls_ConnectionName := 'ConnectionVNLog';",
			"\tls_Password := 'ntuser';",
			"",
			"\tSELECT\t*",
			"\tINTO\tlrec_StatActivity",
			"\tFROM\tPG_STAT_ACTIVITY",
			"\tWHERE\tpid = (SELECT pg_backend_pid());",
			"",
			"\tls_ConnStr = 'host=172.28.1.107 dbname=area user=nt200 password=nt200';",
			"\t-- ls_ConnStr = 'dbname=' || lrec_StatActivity.DATNAME || ' user=' || lrec_StatActivity.USENAME || ' password=' || ls_Password;",
			"",
			"\tIF ((\tSELECT\tCOUNT(*)",
			"\t\t\tFROM\t(\tSELECT\tUNNEST(DBLINK_GET_CONNECTIONS()) AS CONNAME) A",
			"\t\t\tWHERE\tA.CONNAME = ls_ConnectionName) <> 0) THEN",
			"\t\tPERFORM DBLINK_DISCONNECT(ls_ConnectionName);",
			"\tEND IF;",
			"",
			"\tls_SQLPHUOCLOGry := 'INSERT INTO VULOG (MESSAGELOG) values($$' || i_Message || '$$);';",
			"",
			"\tPERFORM dblink_connect(ls_ConnectionName, ls_ConnStr);",
			"\tPERFORM dblink_exec(ls_ConnectionName, 'BEGIN;');",
			"\tPERFORM dblink_exec(ls_ConnectionName, ls_SQLPHUOCLOGry);",
			"\tPERFORM dblink_exec(ls_ConnectionName, 'COMMIT;');",
			"\tPERFORM dblink_disconnect(ls_ConnectionName);",
			"",
			"END;",
			"$BODY$",
			"LANGUAGE plpgsql VOLATILE",
			"COST 100;",
			"",
			"ALTER FUNCTION VULOG(character varying) OWNER TO NTUSER;",
			"",
			"RESET CLIENT_ENCODING;"
		],
		"description": "create vu log server"
	},
	"create vu log": {
		"prefix": "createvulog",
		"body": [
			"CREATE TABLE VU_LOG (TEST\tVARCHAR);"
		],
		"description": "create vu log"
	},
	"create index postgresql": {
		"prefix": "create_index_postgresql",
		"body": [
			"CREATE INDEX ix1_utrdeliveryerror ON utr_deliveryerror USING btree (adddatetime);"
		],
		"description": "create index postgresql"
	},
	"create table vu log": {
		"prefix": "create_table_vu_log",
		"body": [
			"-- ========================================================",
			"-- Create Logging Table - Start",
			"-- ======================================================== ",
			"",
			"DROP TABLE IF EXISTS VULOG;",
			"",
			"CREATE TABLE VULOG",
			"(",
			"\tID\t\t\tSERIAL NOT NULL,",
			"\tMESSAGELOG\t\tTEXT,",
			"\tCREATEDDATE\tTIMESTAMP DEFAULT CURRENT_TIMESTAMP,",
			"\tCLOCK\t\tVARCHAR(100) DEFAULT TO_CHAR(clock_timestamp(), 'YYYY/MM/DD HH24:MI:SS.US'::text),",
			"\tCONSTRAINT  VUMSG_PKEY PRIMARY KEY (ID)",
			")",
			"WITH (",
			"\tOIDS=FALSE",
			");",
			"",
			"ALTER TABLE VULOG OWNER TO NTUSER;"
		],
		"description": "create table vu log"
	},
	"vu log select": {
		"prefix": "vulogselect",
		"body": [
			"SELECT * FROM VU_LOG;"
		],
		"description": "query vu log"
	},
	"regexp_split_to_table": {
		"prefix": "regexp_split_to_table",
		"body": [
			"REGEXP_SPLIT_TO_TABLE(i_SystemMode_Cd, ',')"
		],
		"description": "regexp_split_to_table ( string text, pattern text [, flags text ] ) 竊? text[] is a system function for splitting a string into a table using a POSIX regular expression as the delimiter."
	},
	"convert char to timestamp format": {
		"prefix": "char_to_timestamp",
		"body": [
			"TO_TIMESTAMP(''' || ls_CreateDateTimeFrom || ''', ''YYYY/MM/DD HH24:MI:SS'')"
		],
		"description": "convert char to timestamp format"
	},
	"convert timestamp to char format": {
		"prefix": "timestamp_to_char",
		"body": [
			"TO_CHAR(REQUESTDATETIME, ''YYYY/MM/DD HH24:MI:SS'')"
		],
		"description": "convert timestamp to char format"
	},
	"INSTR use condition where": {
		"prefix": "INSTR",
		"body": [
			"INSTR(i_Status, 'A') = 0"
		],
		"description": "INSTR use condition where"
	},
	"IN use condition where": {
		"prefix": "IN",
		"body": [
			"IN (100, 300)"
		],
		"description": "IN use condition where"
	},
	"infomation connection to server database": {
		"prefix": "select_infomation_connect_to_server",
		"body": [
			"\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t'host=' || IPADDRESS || ' port=' || DBPORTNO || ' dbname=' || DB_CD || ' user=' || DBUSER_CD || ' password=' || DBPASSWORD_CD\tAS CONNECTIONSTRING",
			"\t\t\tFROM\tUMF_SERVERDEF",
			"\t\t\tWHERE\tSERVER_CD\tIN ('HEOS', 'TRAN1')",
			"\t\t\tOR\t\tSERVER_CD\tLIKE 'AEOS_%';"
		],
		"description": "infomation connection to server database"
	},
	"select data from dblink": {
		"prefix": "DBLINK",
		"body": [
			"\t\tPERFORM DBLINK_CONNECT(ls_ConnectionName, lrec_ServerDef.CONNECTIONSTRING);",
			"",
			"\t\t\tSELECT\tJSON_AGG(TMP)::JSONB::VARCHAR",
			"\t\t\tINTO\tls_Json",
			"\t\t\tFROM\t(",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tFROM\tDBLINK(ls_ConnectionName, ls_QueryString, false)",
			"\t\t\t\t\t\tALIAS (",
			"\t\t\t\t\t\t\tCSVFILE_CD\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tCREATEDATETIMEFROM\t\tVARCHAR,",
			"\t\t\t\t\t\t\tCREATEDATETIMETO\t\tVARCHAR,",
			"\t\t\t\t\t\t\tOPERATOR_CD\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tSTATUS\t\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tFILESNAME\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tDOWNLOADDATETIME\t\tVARCHAR,",
			"\t\t\t\t\t\t\tFILESIZE\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tFILENAME\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tDIRECTORYNAME\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tSERVER_CD\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tSEQNO\t\t\t\t\tVARCHAR,",
			"\t\t\t\t\t\t\tCOMPANY_CD\t\t\t\tVARCHAR",
			"\t\t\t\t\t\t)",
			"\t\t\t) TMP;",
			"",
			"\t\tPERFORM DBLINK_DISCONNECT(ls_ConnectionName);"
		],
		"description": "infomation connection to server database"
	},
	"dblink connection string": {
		"prefix": "DBLINK_CONNECT",
		"body": [
			"PERFORM DBLINK_CONNECT(ls_ConnectionName, lrec_ServerDef.CONNECTIONSTRING);"
		],
		"description": "dblink connection string"
	},
	"dblink disconnection string": {
		"prefix": "DBLINK_DISCONNECT",
		"body": [
			"PERFORM DBLINK_DISCONNECT(ls_ConnectionName);"
		],
		"description": "dblink disconnection string"
	},
	"regexp_split_to_array": {
		"prefix": "regexp_split_to_array",
		"body": [
			"REGEXP_SPLIT_TO_ARRAY(COLUMN3, '-')"
		],
		"description": "regexp_split_to_array ( string text, pattern text [, flags text ] ) 竊? text[] is a system function for splitting a string into an array using a POSIX regular expression as the delimiter."
	},
	"regexp_matches": {
		"prefix": "regexp_matches",
		"body": [
			"REGEXP_MATCHES(NOTES, '\\$[0-9A-Z_:]+', 'g')"
		],
		"description": "REGEXP_MATCHES(source_string, pattern [, flags]) function matches a regular expression against a string and returns matched substrings."
	},
	"regexp_replace": {
		"prefix": "regexp_replace",
		"body": [
			"REGEXP_REPLACE(i_BoxInput, '[^0-9,]', '', 'g'), ',')"
		],
		"description": "REGEXP_REPLACE(source, pattern, replacement_string,[, flags]) function replaces substrings that match a POSIX regular expression by a new substring."
	},
	"ROUND format": {
		"prefix": "round",
		"body": [
			"ROUND(FEE.EOSFEERATE, 2)"
		],
		"description": "ROUND format: lﾃ?m trﾃｲn s盻? bao nhiﾃｪu s盻? sau 0 { ROUND (source [ , n ] ) }"
	},
	"Average format": {
		"prefix": "avg",
		"body": [
			"AVG(POINTAWARDRATE)"
		],
		"description": "Average format: tﾃｭnh trung bﾃｬnh theo c盻冲 cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"Sum format": {
		"prefix": "SUM",
		"body": [
			"SUM(AMOUNT)"
		],
		"description": "Sum format: tﾃｭnh t盻貧g theo c盻冲 cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"ROW_NUMBER format": {
		"prefix": "row_number",
		"body": [
			"ROW_NUMBER() OVER(PARTITION BY STORE_CD ORDER BY STORE_CD, SALESDATE, CLASS_CD)"
		],
		"description": "ROW_NUMBER format: ﾄ妥｡nh s盻? th盻ｩ t盻ｱ, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"count format": {
		"prefix": "count",
		"body": [
			"COUNT(*)"
		],
		"description": "count format: ﾄ黛ｺｿm ph蘯ｧn t盻ｭ trong table count(1) thﾃｬ null v蘯ｫn tﾃｭnh, cﾃｲn count(column) thﾃｬ null khﾃｴng tﾃｭnh, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"min format": {
		"prefix": "min",
		"body": [
			"MIN(AMOUNT) OVER(PARTITION BY SALESDATE, STORE_CD)"
		],
		"description": "min format: l蘯･y giﾃ｡ tr盻? nh盻? nh蘯･t theo c盻冲, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"max format": {
		"prefix": "max",
		"body": [
			"MAX(CLASS_CD) OVER(PARTITION BY SALESDATE, STORE_CD) AS CLASS_CD"
		],
		"description": "max format: l蘯･y giﾃ｡ tr盻? l盻嬾 nh蘯･t theo c盻冲, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"FIRST_VALUE format": {
		"prefix": "first_value",
		"body": [
			"FIRST_VALUE(CLASS_CD) OVER(PARTITION BY SALESDATE, STORE_CD)"
		],
		"description": "FIRST_VALUE format: l蘯･y giﾃ｡ tr盻? ﾄ黛ｺｧu tiﾃｪn theo group partition by theo c盻冲, cﾃｳ th盻? dﾃｹng v盻嬖 OVER()"
	},
	"ARRAY_AGG format": {
		"prefix": "array_agg",
		"body": [
			"ARRAY_AGG(BYTELENGTH ORDER BY ROWNUMBER)"
		],
		"description": "ARRAY_AGG format: n盻訴 cﾃ｡c ph蘯ｧn t盻ｭ l蘯｡i thﾃ?nh 1 m蘯｣ng{ ARRAY_AGG(expression [ORDER BY [sort_expression {ASC | DESC}], [...]) }"
	},
	"STRING_AGG format": {
		"prefix": "string_agg",
		"body": [
			"STRING_AGG(TMP.COL2, '<br>')"
		],
		"description": "STRING_AGG format: n盻訴 column thﾃ?nh 1 chu盻擁 cﾃ｡ch nhau theo kﾃｽ hi盻㎡ phﾃｭa sau.{ STRING_AGG ( expression, separator [order_by_clause] ) }"
	},
	"ARRAY_TO_STRING format": {
		"prefix": "array_to_string",
		"body": [
			"ARRAY_TO_STRING(ARRAY_AGG(BYTELENGTH ORDER BY ROWNUMBER), ',')"
		],
		"description": "ARRAY_TO_STRING format: convert array to string {array_to_string(anyarray, text [, text])}"
	},
	"sum from previous row to current row format": {
		"prefix": "unbounded...preceding",
		"body": [
			"SUM(AMOUNT) OVER(ORDER BY STORE_CD, SALESDATE, AMOUNT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)"
		],
		"description": "sum from previous row to current row format : tﾃｭnh t盻貧g t盻ｫ dﾃｲng trﾆｰ盻嫩 ﾄ妥ｳ ﾄ黛ｺｿn dﾃｲng hi盻㌻ t蘯｡i"
	},
	"Over format": {
		"prefix": "over",
		"body": [
			"OVER($1)"
		],
		"description": "Over format : OVER([PARTITION BY tﾃｪn_c盻冲] [ORDER BY tﾃｪn_c盻冲] [ROWS/RANGE BETWEEN from AND to) \n from/to cﾃｳ th盻? lﾃ? UNBOUNDED PRECEDING ho蘯ｷc N PRECEDING ho蘯ｷc CURRENT ROW ho蘯ｷc UNBOUNDED FOLLOWING ho蘯ｷc N FOLLOWING"
	},
	"Set Authority Store": {
		"prefix": "auth.initilize_store",
		"body": [
			"",
			"\t-- 蠎苓?玲ｨｩ髯舌?ｮ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν繧偵そ繝?繝?",
			"\tPERFORM PXS_AUTH.p_Initilize_Store();",
			""
		],
		"description": "Set Authority Store"
	},
	"Set Authority Class": {
		"prefix": "auth.initilize_class",
		"body": [
			"",
			"\t-- 蛻?鬘樊ｨｩ髯舌?ｮ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν繧偵そ繝?繝?",
			"\tPERFORM PXS_AUTH.p_Initilize_Class();",
			""
		],
		"description": "Set Authority Class"
	},
	"Set Authority Partner": {
		"prefix": "auth.initilize_partner",
		"body": [
			"",
			"\t-- 繝代?ｼ繝医リ繝ｼ讓ｩ髯舌?ｮ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν繧偵そ繝?繝茨ｼ亥?ｨ繝代?ｼ繝医リ繝ｼ縺ｮ蝣ｴ蜷医?ｯ菴懈?舌＠縺ｪ縺??ｼ?",
			"\tIF (lrec_UserInfo.ParentPartner_Cd <> '000000') THEN",
			"\t\tPERFORM PXS_AUTH.p_Initilize_Partner();",
			"\tEND IF;",
			""
		],
		"description": "Set Authority Class"
	},
	"Set Authority Function Auth setting": {
		"prefix": "auth.funcauthsetting",
		"body": [
			"",
			"\tlf_FuncAuthSetting\tTYPE_FUNCAUTHSETTING;",
			"",
			"\tlf_FuncAuthSetting\t:= PXS_AUTH.P_GETFUNCAUTHSETTING (NULL, lrec_UserInfo.OPERATOR_CD, 'BB01');",
			""
		],
		"description": "Set Authority Function Auth setting"
	},
	"Set Authority Company": {
		"prefix": "auth.initilize_company",
		"body": [
			"",
			"\tlb_ExistsCompanyAuth\t\t\tBOOLEAN;",
			"",
			"\t-- 莨夂､ｾ讓ｩ髯仙叙蠕?",
			"\tlb_ExistsCompanyAuth\t:=  PXS_AUTH.p_Initilize_Company();",
			""
		],
		"description": "Set Authority Company"
	},
	"Set Authority Company contract": {
		"prefix": "auth.initilize_contractcompany",
		"body": [
			"",
			"\tlb_ExistsContractAuth\t\tBOOLEAN;",
			"",
			"\tlb_ExistsContractAuth\t\t:= PXS_AUTH.p_Initilize_ContractCompany(NULL, '2');",
			""
		],
		"description": "Set Authority Company contract"
	},
	"Shortcut command for linux": {
		"prefix": "shortcut_command_for_linux",
		"body": [
			"1. Qu?n l? h? th?ng",
			"rpm: ki?m tra g?i ?? c?i ??t, ho?c c?i ??t m?t g?i, ho?c s? d?ng ?? g? b? m?t g?i.",
			"ps: ki?m tra h? th?ng ti?n tr?nh ?ang ch?y.",
			"kill: stop proccess khi b? treo. Ch? c? super-user m?i c? th? d?ng t?t c? c?c ti?n tr?nh c?n user kh?c ch? c? th? d?ng proccess m? user ?? t?o ra.",
			"top: hi?n th? s? ho?t ??ng c?a c?c ti?n tr?nh, ??c bi?t l? th?ng tin v? t?i nguy?n h? th?ng v? vi?c s? d?ng c?c t?i nguy?n ?? c?a t?ng ti?n tr?nh.",
			"pstree: hi?n th? t?t c? c?c ti?n tr?nh d??i d?ng c?y.",
			"sleep: cho h? th?ng ng?ng ho?t ??ng trong m?t kho?ng th?i gian.",
			"useradd: t?o m?t ng??i d?ng m?i.",
			"groupadd: t?o m?t nh?m ng??i d?ng m?i.",
			"passwd: thay ??i password cho ng??i d?ng.",
			"userdel: xo? ng??i d?ng ?? t?o.",
			"groupdel: xo? nh?m ng??i d?ng ?? t?o.",
			"gpasswd: thay ??i password c?a m?t nh?m ng??i d?ng.",
			"su: cho ph?p ??ng nh?p v?i t? c?ch ng??i d?ng kh?c.",
			"groups: hi?n th? nh?m c?a user hi?n t?i.",
			"who: cho bi?t ai ?ang ??ng nh?p h? th?ng.",
			"w: t??ng t? nh? l?nh who.",
			"man: xem h??ng d?n v? d?ng l?nh nh? c? ph?p, c?c tham s?...",
			"usermod -aG sudo sammy: add command sudo for user regular",
			"",
			"2. Tr?n terminal",
			"clear: xo? tr?ng c?a s? d?ng l?nh.",
			"date: xem ng?y, gi? h? th?ng.",
			"find /usr/share/zoneinfo/ | grep -i pst: xem Timezone.",
			"ln -f -s /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime: ??i Server Time v? Timezone Vi?t Nam.",
			"date -s '1 Oct 2009 18: 00: 00 : thay ??i th?i gian h? th?ng.",
			"cal: xem l?ch h? th?ng.",
			"",
			"3. Ki?m tra th?ng tin",
			"cat /proc/cpuinfo: T?m chi ti?t k? thu?t c?a CPU",
			"cat /proc/meminfo: B? nh? v? trang ??i th?ng tin.",
			"lspci: Xem th?ng tin mainboard.",
			"uname -r: Xem h?t nh?n phi?n b?n.",
			"gcc -v: Compiler phi?n b?n n?o t?i ?? c?i ??t.",
			"/sbin/ifconfig: Xem c?c ??a ch? IP c?a b?n.",
			"netstat: xem t?t c? c?c k?t n?i.",
			"netstat -an |grep :80 |wc -l: xem c? bao nhi?u k?t n?i ??n port 80.",
			"lsmod: Nh?ng g? ???c n?p module kernel.",
			"last: xem log login v?o h? th?ng.",
			"history: xem log command.",
			"df: Xem disk space.",
			"free -m: xem dung l??ng memory.",
			"",
			"4. Li?n quan ??n v?n h?nh h? th?ng",
			"exit: tho?t kh?i terminal.",
			"logout: t??ng t? exit.",
			"reboot: kh?i ??ng l?i h? th?ng.",
			"mount: g?n h? th?ng t?p tin t? m?t thi?t b? l?u tr? v?o c?y th? m?c ch?nh.",
			"umount: ng??c v?i l?nh mount.",
			"",
			"5. Tr?n File - Folder",
			"ls: l?y danh s?ch t?t c? c?c file v? folder trong folder hi?n h?nh.",
			"pwd: xu?t ???ng d?n c?a folder l?m vi?c.",
			"cd: thay ??i folder l?m vi?c ??n m?t folder m?i.",
			"mkdir: t?o folder m?i.",
			"rmdir: xo? folder r?ng.",
			"cp: copy m?t hay nhi?u file ??n folder m?i.",
			"mv: ??i t?n hay di chuy?n file, folder.",
			"rm: x?a file.",
			"wc: ??m s? d?ng, s? k? t?... trong file.",
			"touch: t?o file.",
			"cat: xem n?i dung file.",
			"vi: kh?i ??ng tr?nh so?n th?o v?n b?n vi.",
			"df: ki?m tra disk space.",
			"du: xem disk space ?? d?ng cho m?t s? file nh?t ??nh.",
			"tar -cvzpf archive.tgz /home/example/public_html/folder: n?n m?t folder",
			"tar -tzf backup.tar.gz: li?t k? file n?n gz. ( gi?i n?n d?ng gzip -d filename.gz )",
			"tar -xvf archive.tar: gi?i n?n m?t file tar.",
			"unzip file.zip: gi?i n?n file .zip",
			"wget: download file.",
			"chown -hR user:user folder/ : ??i owner cho folder hay file.",
			"tail 100 matbao.log: Xem 100 d?ng cu?i c?ng c?a file matbao.log.",
			"",
			"6. Other",
			"rm -rf foldername: X?a folder",
			"cp -avr /home/uniusr/n-thi /home/n-thi: L?nh copy folder",
			"tar -xvf filename.tgz: L?nh gi?i n?n file tgz"
		],
		"description": "Shortcut command for linux"
	},
	"Pattern check error 00010": {
		"prefix": "check_error_00010_pattern",
		"body": [
			"",
			"\tln_ExistsCount\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t:= 0;",
			"\tla_ColumnName\t\t\t\tVARCHAR[];",
			"",
			"\t\tln_ExistsCount\t\t\t\t:= 0;",
			"",
			"",
			"",
			"\t\t-- 繧ｭ繝ｼ鬆?逶ｮ縺ｧ譖ｴ譁ｰ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\tSELECT\tCOUNT(*)",
			"\t\tINTO\tln_ExistsCount",
			"\t\tFROM\tUMF_STOREBRAND",
			"\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN1",
			"\t\tAND\t\tBRAND_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tSERIES_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '00010') > 0) THEN",
			"\t\t\t----------------------------------------------------------------------",
			"\t\t\t-- 譖ｴ譁ｰ繝槭せ繧ｿ縺ｫ蟄伜惠縺励↑縺?蝣ｴ蜷医??ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繧ｿ繧､繝励′縲?2:邱丞?･譖ｿ縲代?ｮ蝣ｴ蜷?  -",
			"\t\t\t-- 鬆?逶ｮ蠢?鬆医メ繧ｧ繝?繧ｯ?ｼ井ｽｿ逕ｨ縺吶ｋ繧ｫ繝ｩ繝?繧偵☆縺ｹ縺ｦ險倩ｼ峨☆繧具ｼ?                -",
			"\t\t\t-- 繧ｫ繝ｩ繝?繝輔Λ繧ｰ隧ｳ邏ｰ---------------------------------------------------",
			"\t\t\t-- 0?ｼ夲ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繝?繝ｼ繧ｿ縺後そ繝?繝医＆繧後※縺?繧?                             -",
			"\t\t\t-- 1?ｼ壹ョ繝輔か繝ｫ繝亥､縺後そ繝?繝医＆繧後※縺?繧?                                 -",
			"\t\t\t-- 8?ｼ哢ULL縺後そ繝?繝医＆繧後※縺?繧?                                         -",
			"\t\t\t-- 9?ｼ壼ｿ?鬆磯??逶ｮ縺ｫNULL縺後そ繝?繝医＆繧後※縺?繧?                               -",
			"\t\t\t----------------------------------------------------------------------",
			"\t\t\tIF (ln_ExistsCount = 0 OR i_UploadType = '2') THEN",
			"\t\t\t\t-- 蠢?鬆磯??逶ｮ縺ｮNULL繝√ぉ繝?繧ｯ",
			"\t\t\t\tIF (   lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\t\t\t-- 笘?菴ｿ逕ｨ縺吶ｋ繧ｫ繝ｩ繝?繧偵☆縺ｹ縺ｦ險倩ｼ峨☆繧九?",
			"\t\t\t\t\tOR lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'",
			"\t\t\t\t\tOR lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'",
			"\t\t\t\t) THEN",
			"\t\t\t\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t\t\t\tls_ColumnName\t:=\tCASE",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\tTHEN 'COLUMN1'",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'\tTHEN 'COLUMN2'",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'\tTHEN 'COLUMN3'",
			"\t\t\t\t\t\t\t\t\t\t\t\tELSE ''",
			"\t\t\t\t\t\t\t\t\t\t\tEND;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_ColumnName\t:=\tCASE WHEN lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\t\tTHEN 'COLUMN1'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'\t\tTHEN 'COLUMN2'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'\t\tTHEN 'COLUMN3'\t\t|| C_ARRAY_DELIMITER ELSE '' END;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tla_ColumnName\t:= STRING_TO_ARRAY(TRIM(ls_ColumnName, C_ARRAY_DELIMITER), C_ARRAY_DELIMITER);",
			"",
			"\t\t\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸINSERT",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.P_ACCEPTCSVUPDATEERRORDATA(",
			"\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'00010',",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00010'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\tla_ColumnName",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\t-- 譁ｰ隕冗匳骭ｲ莉ｶ謨ｰ縺ｮ繧ｫ繧ｦ繝ｳ繝医い繝?繝?",
			"\t\t\t\tln_InsCount\t\t\t:= ln_InsCount + 1;",
			"\t\t\t\tlb_RegistFlag\t\t:= TRUE;",
			"\t\t\tELSE",
			"\t\t\t\t-- 譖ｴ譁ｰ逋ｻ骭ｲ莉ｶ謨ｰ縺ｮ繧ｫ繧ｦ繝ｳ繝医い繝?繝?",
			"\t\t\t\tln_UpdCount\t\t\t:= ln_UpdCount + 1;",
			"\t\t\t\tlb_RegistFlag\t\t:= FALSE;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			""
		],
		"description": "Pattern check error 00010"
	},
	"Pattern check error 00011": {
		"prefix": "check_error_00011_pattern",
		"body": [
			"",
			"\tIF (INSTR(ls_ErrorCheck, '00011') > 0) THEN",
			"\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸINSERT",
			"\t\t\tINSERT INTO UWK_CSVUPDATEERRORDATA (",
			"\t\t\t\t\t\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\tCHECKTYPE,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tERROR_CD,",
			"\t\t\t\t\t\tERRORTYPE,",
			"\t\t\t\t\t\tERROR_NOTES,",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t)",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\tMAX(USER_CD)\t\tAS USER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMN1,COLUMN2,COLUMN3;",
			"",
			"\t\tELSE",
			"\t\t\tINSERT INTO UWK_EXCELUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tEXCELTAGINDEX,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(EXCELTAGINDEX)\tAS EXCELTAGINDEX,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMN1,COLUMN2,COLUMN3;",
			"\t\tEND IF;",
			"\tEND IF;",
			""
		],
		"description": "Pattern check error 00011"
	},
	"CSV Import Check Pattern": {
		"prefix": "import_check_pattern",
		"body": [
			"\n",
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"/*",
			"\t[繧ｵ繝匁ｩ溯?ｽ  ] EA.莉募?･",
			"\t[讖溯?ｽ?ｼｩ?ｼ､  ] EA25",
			"\t[讖溯?ｽ蜷咲ｧｰ  ] 莉募?･莨晉･ｨ蜿冶ｾｼ",
			"\t[繝ｪ繝薙ず繝ｧ繝ｳ] 1",
			"\t[髢｢謨ｰ蜷?    ] p_CSVImportCheck",
			"\t[菴? 謌? 譌･  ] 2022/08/30",
			"\t[菴? 謌? 閠?  ] UNICCS/d-vu",
			"\t[譖ｴ譁ｰ螻･豁ｴ  ] ",
			"*/",
			"",
			"CREATE OR REPLACE FUNCTION PXC_EA25_001.p_CSVImportCheck (",
			"\ti_User_Cd\t\t\tIN\tUTR_CSVUPLOADOBSERVER.USER_CD%TYPE,",
			"\ti_Server_Cd\t\t\tIN\tUWK_CSVUPLOADCOLUMNDATA.SERVER_CD%TYPE,",
			"\ti_ImportBatchKey\tIN\tUWK_CSVUPLOADCOLUMNDATA.IMPORTBATCHKEY%TYPE,",
			"\ti_CSVFile_Cd\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVFILE_CD%TYPE,",
			"\ti_CheckType\t\t\tIN\tUWK_CSVUPDATEERRORDATA.CHECKTYPE%TYPE,",
			"\ti_UploadType\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVUPLOADTYPE%TYPE",
			") RETURNS VOID AS $$",
			"/*",
			"$START",
			"$FUNCTION\\1",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繝?繝ｼ繧ｿ縺ｮ繝√ぉ繝?繧ｯ繧定｡後↑縺?縺ｾ縺吶?",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ蠖｢蠑擾ｼ夲ｼｭ?ｼｯ?ｼ､?ｼ郁ｿｽ蜉?繝ｻ荳頑嶌縺搾ｼ?",
			"\t\t\t\t\t?ｼｲ?ｼ･?ｼｰ?ｼ育ｷ丞?･繧梧崛縺茨ｼ?",
			"$PAR\\1",
			"\t繝ｦ繝ｼ繧ｶ繧ｳ繝ｼ繝?",
			"$PAR\\2",
			"\t繧ｵ繝ｼ繝舌?ｼ繧ｳ繝ｼ繝?",
			"$PAR\\3",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繝舌ャ繝√く繝ｼ",
			"$PAR\\4",
			"\t?ｼ｣?ｼｳ?ｼｶ繝輔ぃ繧､繝ｫ繧ｳ繝ｼ繝?",
			"$PAR\\5",
			"\t繝√ぉ繝?繧ｯ繧ｿ繧､繝暦ｼ?1:譖ｴ譁ｰ蜑阪メ繧ｧ繝?繧ｯ縲?2:譖ｴ譁ｰ蠕後メ繧ｧ繝?繧ｯ?ｼ?",
			"$PAR\\6",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繧ｿ繧､繝暦ｼ?1:霑ｽ蜉?/譖ｴ譁ｰ縲?2:邱丞?･譖ｿ縲?3:蜑企勁?ｼ?",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/",
			"DECLARE",
			"\tC_ARRAY_DELIMITER\t\t\t\t\t\tCONSTANT VARCHAR\t\t\t\t\t\t\t\t:= ',';",
			"",
			"\tls_SqlErrMsg\t\t\t\t\t\t\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE\t\t\t\t:= '';",
			"\tls_SqlState\t\t\t\t\t\t\t\tVARCHAR(5);",
			"",
			"\tlb_IsCSVFileType\t\t\t\t\t\tBOOLEAN DEFAULT FALSE;",
			"\tls_ErrorCheck\t\t\t\t\t\t\tVARCHAR;",
			"\tls_ColumnName\t\t\t\t\t\t\tVARCHAR;",
			"\tla_ColumnName\t\t\t\t\t\t\tVARCHAR[];",
			"",
			"\t-- 繧ｷ繧ｹ繝?繝?繧ｳ繝ｳ繝輔ぅ繧ｰ逕ｨ",
			"\tlarr_ConfigList\t\t\t\t\t\t\tTEXT[];",
			"\tls_Config_00102\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00103\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00104\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00106\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00108\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00112\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00200\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_EA016\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00201\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00204\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_HA014\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tls_Config_00009\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tls_Config_ItemClass_Length\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_EA020_ExcludeTaxCalcType\t\t\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_EA021_IncludeTaxCalcType\t\t\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"",
			"\tls_Out_CLASS1_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS2_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS3_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS4_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS5_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"",
			"\tls_LineNoCheck\t\t\t\t\t\t\tVARCHAR(5)\t\t\t\t\t\t\t\t\t\t:= '0';",
			"\tln_LineNo\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"\tln_LineNoRe\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"\tln_ErrorCount\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_ErrorCountBk\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"",
			"\tlb_StoreError\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_PartnerError\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_SkuError\t\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_ExistsOrder\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_ExistsReturn\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tln_SysDenpno\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_CountCostRate\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tls_Sku_Cd_Check\t\t\t\t\t\t\tVARCHAR;",
			"",
			"\tls_InspectDate\t\t\t\t\t\t\tUWK_CSVUPLOADCOLUMNDATA.COLUMN1%TYPE\t\t\t:= '';",
			"\tld_InspectDateCheck\t\t\t\t\t\tDATE;",
			"\tls_Store_Cd\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.STORE_CD%TYPE\t\t\t:= '';",
			"\tls_Partner_Cd\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.PARTNER_CD%TYPE\t\t\t:= '';",
			"\tls_LogisticsCenter\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.LOGISTICSCENTER_CD%TYPE\t:= '';",
			"\tls_LogisticsCenterCheck\t\t\t\t\tUTR_PURCHASEDENPHEADER.LOGISTICSCENTER_CD%TYPE\t:= '';",
			"\tls_DenpKind\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPKIND%TYPE\t\t\t:= '';",
			"\tls_DenpKindCsv\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPKIND%TYPE\t\t\t:= '';",
			"\tln_Denpno\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPNO%TYPE\t\t\t\t:= 0;",
			"\tls_Company_Cd\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.COMPANY_CD%TYPE\t\t\t:= '';",
			"\tln_MoveDenpno\t\t\t\t\t\t\tUTR_MOVEDENPHEADER.DENPNO%TYPE\t\t\t\t\t:= 0;",
			"\tls_SkuName\t\t\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.SKUSNAME%TYPE;",
			"\tls_StandardName\t\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.STANDARDNAME%TYPE;",
			"\tln_SingleQty\t\t\t\t\t\t\tUTR_ORDERDETAIL.SINGLEQTY%TYPE;",
			"",
			"\tln_SystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tls_PartnerType\t\t\t\t\t\t\tUMF_PARTNER.PARTNERTYPE%TYPE;",
			"\tls_PayPartner_Cd\t\t\t\t\t\tUMF_PARTNER.PAYPARTNER_CD%TYPE;",
			"\tls_UserDenpkind\t\t\t\t\t\t\tUMF_DENPKIND.USERDENPKIND%TYPE;",
			"\tls_UserDenptype\t\t\t\t\t\t\tUMF_DENPTYPE.USERDENPTYPE%TYPE;",
			"\tls_DenpType\t\t\t\t\t\t\t\tUMF_DENPTYPE.DENPTYPE%TYPE;",
			"\tls_HeaderNotes\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.NOTES%TYPE\t\t\t\t:= '';",
			"\tls_ItemAttributeType\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ITEMATTRIBUTETYPE%TYPE;",
			"\tls_ParentClass1_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS1_CD%TYPE;",
			"\tls_AttributeClass1_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS1_CD%TYPE;",
			"\tls_ParentClass2_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS2_CD%TYPE;",
			"\tls_AttributeClass2_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS2_CD%TYPE;",
			"\tls_ParentClass3_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS3_CD%TYPE;",
			"\tls_AttributeClass3_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS3_CD%TYPE;",
			"\tls_ParentClass4_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS4_CD%TYPE;",
			"\tls_AttributeClass4_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS4_CD%TYPE;",
			"\tls_ParentClass5_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS5_CD%TYPE;",
			"\tls_AttributeClass5_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS5_CD%TYPE;",
			"",
			"\tls_OutStore_Cd\t\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tls_InStore_Cd\t\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tls_ChangeStore_Cd\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tln_InsCount\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_UpdCount\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_LoopIndex\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"",
			"\tls_EOSType\t\t\t\t\t\t\t\tVARCHAR(1);",
			"\tln_CountDeliveryDecisionFlag\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count_LineNo\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count_DBLineNo\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tls_Company_Cd_Chk\t\t\t\t\t\tUMF_STORE.COMPANY_CD%TYPE\t\t\t\t\t\t:= '';",
			"\tls_GntnktType\t\t\t\t\t\t\tVARCHAR;",
			"\tln_CostRate\t\t\t\t\t\t\t\tNUMERIC(5, 2);",
			"\tln_TmpPartnerGntnk\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARTNERGNTNK%TYPE;",
			"",
			"\tln_OrderGntnk1\t\t\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_OrderGntnk2\t\t\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK2%TYPE;",
			"",
			"\to_Store\t\t\t\t\t\t\t\t\tTYPE_STORE;",
			"\to_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;",
			"",
			"\tlrec_ReturnHeader\t\t\t\t\t\tUTR_RETURNHEADER%ROWTYPE;",
			"\tlrec_OrderHeader\t\t\t\t\t\tUTR_ORDERHEADER%ROWTYPE;",
			"",
			"\tln_OutSystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tln_InSystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tlrec_MasterItemIn\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"\tlrec_MasterItemOut\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"\tlrec_MasterItem\t\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"",
			"\tls_Zero\t\t\t\t\t\t\t\t\tVARCHAR(1)\t:= '0';",
			"\tls_SkuClass\t\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Sku_Cd\t\t\t\t\t\t\t\tUMF_ITEM.SKU_CD%TYPE;",
			"\tln_OrderBitnk\t\t\t\t\t\t\tUTR_ORDERDETAIL.BITNK%TYPE;",
			"",
			"\t-- 蝠?蜩√?槭せ繧ｿ蜿冶ｾｼ蜿冶ｾｼ譚｡莉ｶ蜿門ｾ怜､画焚",
			"\tls_ImportCondition1\t\t\t\t\t\tUWK_IMPORTCONDITION.CONDITION1%TYPE\t\t\t\t:= NULL;\t\t\t\t-- 蜿冶ｾｼ譚｡莉ｶ1",
			"\tls_ImportCondition2_Server\t\t\t\tUWK_IMPORTCONDITION.CONDITION2%TYPE\t\t\t\t:= NULL;\t\t\t\t-- 蜿冶ｾｼ譚｡莉ｶ2",
			"\tls_CompanyCd\t\t\t\t\t\t\tVARCHAR;",
			"\tld_RegistStoreDelayDate\t\t\t\t\tDATE;",
			"",
			"\tls_IncludeFlag\t\t\t\t\t\t\tVARCHAR;",
			"\tls_SuppliesType\t\t\t\t\t\t\tVARCHAR;",
			"\tls_ConsignItemType\t\t\t\t\t\tVARCHAR;",
			"\tls_GntnkType\t\t\t\t\t\t\tVARCHAR;",
			"\tls_CurrentDate\t\t\t\t\t\t\tVARCHAR;",
			"",
			"\t-- 螟画焚螳夂ｾｩ",
			"\tlrec_UserInfo\t\t\t\t\t\t\tRECORD;",
			"\tlrec_UtrPurchaseDenpHeader\t\t\t\tUTR_PURCHASEDENPHEADER%ROWTYPE;",
			"\tlrec_UtrPurchaseDenpDetail\t\t\t\tUTR_PURCHASEDENPDETAIL%ROWTYPE;",
			"\tlrec_UtrMoveDenpHeader\t\t\t\t\tUTR_MOVEDENPHEADER%ROWTYPE;",
			"\tlrec_UtrMoveDenpDetail\t\t\t\t\tUTR_MOVEDENPDETAIL%ROWTYPE;",
			"",
			"\tlcur_EA25_TAXTYPE_GROUP\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXTYPE_GROUP\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXRATE_GROUP\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXRATE_GROUP\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXTYPE_ITEM\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXTYPE_ITEM\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXRATE_ITEM\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXRATE_ITEM\t\t\t\t\tRECORD;",
			"\tlrec_EA25_ORDER_RETURN\t\t\t\t\tRECORD;",
			"\tlrec_DeliveryStore\t\t\t\t\t\tRECORD;",
			"",
			"\t-- 繧ｫ繝ｩ繝?繝√ぉ繝?繧ｯ逕ｨ繧ｫ繝ｼ繧ｽ繝ｫ",
			"\tlcur_CSVUploadColumnData CURSOR FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\tORDER BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN5;",
			"BEGIN",
			"\tlrec_UserInfo\t\t:= PXS_USER.p_GetUserInfo();",
			"\tls_ErrorCheck\t\t:= PXS_FILEUPLOAD.f_GetCheckErrorCode(i_CSVFile_Cd, i_CheckType);",
			"\tlb_IsCSVFileType\t:= PXS_FILEUPLOAD.f_CheckIsCSVFileType(i_Server_Cd, i_ImportBatchKey);",
			"\tls_CurrentDate\t\t:= CAST(CURRENT_DATE AS VARCHAR);",
			"",
			"\t-- 蜿冶ｾｼ譚｡莉ｶ繧貞叙蠕?",
			"\tSELECT\tCONDITION1,",
			"\t\t\tCONDITION2",
			"\tINTO\tls_ImportCondition1,\t\t-- 蜿冶ｾｼ譚｡莉ｶ1",
			"\t\t\tls_ImportCondition2_Server\t-- 蜿冶ｾｼ譚｡莉ｶ2",
			"\tFROM\tUWK_IMPORTCONDITION",
			"\tWHERE\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\tLIMIT 1 OFFSET 0;",
			"",
			"\tlarr_ConfigList\t\t:= ARRAY['00009', '00102', '00103', '00104', '00106', '00108', '00112', '00200', '00201', '00204', 'EA016', 'ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH', 'ITEMCLASS4_LENGTH', 'ITEMCLASS5_LENGTH', 'EA020', 'EA021', 'HA014'];",
			"",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig(NULL, larr_ConfigList);",
			"",
			"\tls_Config_00102\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00102');",
			"\tls_Config_00103\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00103');",
			"\tls_Config_00104\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00104');",
			"\tls_Config_00106\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00106');",
			"\tls_Config_00108\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00108');",
			"\tls_Config_00112\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00112');",
			"\tls_Config_00200\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00200');",
			"\tls_Config_EA016\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'EA016');",
			"\tls_Config_00201\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00201');",
			"\tls_Config_00204\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00204');",
			"\tls_Config_HA014\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'HA014');",
			"",
			"\tls_Config_00009\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00009');",
			"\tls_EA020_ExcludeTaxCalcType\t:= PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'EA020');\t-- 繧ｷ繧ｹ繧ｳ繝?EA020?ｼ壼､也ｨ弱?ｮ莉募?･蜴滉ｾ｡遞取栢邂｡逅?譁ｹ豕包ｼ?1:縺昴ｌ縺槭ｌ邂｡逅?縲?2:譏守ｴｰ縺ｫ蜷医ｏ縺帙ｋ縲?3:繝倥ャ繝縺ｫ蜷医ｏ縺帙ｋ?ｼ?",
			"\tls_EA021_IncludeTaxCalcType\t:= PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'EA021');\t-- 繧ｷ繧ｹ繧ｳ繝?EA021?ｼ壼??遞弱?ｮ莉募?･蜴滉ｾ｡遞取栢邂｡逅?譁ｹ豕包ｼ?1:縺昴ｌ縺槭ｌ邂｡逅?縲?2:譏守ｴｰ縺ｫ蜷医ｏ縺帙ｋ縲?3:繝倥ャ繝縺ｫ蜷医ｏ縺帙ｋ?ｼ?",
			"",
			"",
			"\t-- 蝨ｨ蠎ｫ邂｡逅?蛻?鬘橸ｼ?2:隨ｬ?ｼ貞??鬘槭3:隨ｬ?ｼ灘??鬘橸ｼ峨ｒ蜿門ｾ?",
			"\tIF (ls_Config_00201 = '2') THEN",
			"\t\tls_Config_ItemClass_Length := PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH');",
			"",
			"\tELSIF (ls_Config_00201 = '3') THEN",
			"\t\tls_Config_ItemClass_Length := PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH');",
			"",
			"\tELSIF (ls_Config_00201 IS NULL) THEN",
			"\t\tls_Config_ItemClass_Length := '0';",
			"\tEND IF;",
			"",
			"\tIF (INSTR(ls_ErrorCheck, '00011') > 0) THEN",
			"\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸ?ｼｩ?ｼｮ?ｼｳ?ｼ･?ｼｲ?ｼｴ",
			"\t\t\tINSERT INTO UWK_CSVUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA TMP_DATA",
			"\t\t\t\tWHERE\tTMP_DATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tTMP_DATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= TMP_DATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= TMP_DATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= TMP_DATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\tMAX(USER_CD)\t\tAS USER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN11;",
			"",
			"\t\tELSE",
			"\t\t\tINSERT INTO UWK_EXCELUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tEXCELTAGINDEX,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA TMP_DATA",
			"\t\t\t\tWHERE\tTMP_DATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tTMP_DATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= TMP_DATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= TMP_DATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= TMP_DATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(COLUMNDATA.SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.EXCELTAGINDEX)\tAS EXCELTAGINDEX,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN11;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_COLUMNDATA_SOURCE AS",
			"\t\tSELECT\tCAST('0000000000000' AS VARCHAR) AS SKUCLASS_CD,",
			"\t\t\t\t*",
			"\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_COLUMNDATA_SOURCE;",
			"",
			"\tINSERT INTO TMP_EA25_COLUMNDATA_SOURCE",
			"\t\tSELECT\tSUBSTR(COLUMNDATA.COLUMN11, LENGTH(COLUMNDATA.COLUMN11) - CAST(ls_Config_ItemClass_Length AS INTEGER) + 1, CAST(ls_Config_ItemClass_Length AS INTEGER))\tAS SKUCLASS_CD,",
			"\t\t\t\tCOLUMNDATA.*",
			"\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t)",
			"\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t);",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_COLUMNDATA_SOURCE ON TMP_EA25_COLUMNDATA_SOURCE (COLUMN1, COLUMN2, COLUMN3, COLUMN7, COLUMN8, COLUMN9, COLUMN11, COLUMN12);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_COLUMNDATA AS",
			"\t\tSELECT\tCAST('0000000000000' AS VARCHAR) AS SKU_CD,",
			"\t\t\t\t*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA_SOURCE",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_COLUMNDATA;",
			"",
			"\tINSERT INTO TMP_EA25_COLUMNDATA",
			"\t\tSELECT\tCASE",
			"\t\t\t\t\tWHEN CLS.INCLUDE_CD IS NOT NULL THEN CLS.INCLUDE_CD",
			"\t\t\t\t\tELSE TMP.COLUMN11",
			"\t\t\t\tEND\t\t\t\t\t\tAS SKU_CD,",
			"\t\t\t\tTMP.*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA_SOURCE TMP",
			"\t\t\t\tLEFT OUTER JOIN UMF_CLASS CLS",
			"\t\t\t\t\tON\tCLS.ITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\t\t\tAND\tCLS.CLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\t\t\tAND\tCLS.CLASS_CD\t\t\t=\tCASE",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN TMP.COLUMN11 = LPAD(TMP.SKUCLASS_CD, 13, '0') THEN TMP.SKUCLASS_CD",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tEND;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_COLUMNDATA ON TMP_EA25_COLUMNDATA (COLUMN1, COLUMN2, COLUMN3, COLUMN7, COLUMN8, COLUMN9, COLUMN11, COLUMN12);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_HEADERTAXCAL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_HEADERTAXCAL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_HEADERTAXCAL ON TMP_EA25_HEADERTAXCAL (SYSDENPNO);",
			"",
			"\t-- 蜿冶ｾｼ繝輔ぃ繧､繝ｫ縺ｮ蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ繝√ぉ繝?繧ｯ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER_CHECK (",
			"\t\tDENPNO\t\t\t\tNUMERIC(9, 0),",
			"\t\tSTORE_CD\t\t\tVARCHAR(5),",
			"\t\tPARTNER_CD\t\t\tVARCHAR(6),",
			"\t\tDENPINSPECTDATE\t\tDATE,",
			"\t\tCSVDENPKIND\t\t\tVARCHAR,",
			"\t\tCSVLINENO\t\t\tNUMERIC",
			"\t);",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER_CHECK;",
			"",
			"\tCREATE INDEX IX1_TMP_EA25_DENPHEADER_CHECK ON TMP_EA25_DENPHEADER_CHECK (DENPNO);",
			"",
			"\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ域僑蠑ｵ)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tSKU_CD,",
			"\t\t\t\tSKUSNAME,",
			"\t\t\t\tSTANDARDNAME,",
			"\t\t\t\tQTY,",
			"\t\t\t\tGNTNK,",
			"\t\t\t\tGNKKNGK,",
			"\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\tPROFITGNTNK,",
			"\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\tNET1GNTNK,",
			"\t\t\t\tNET2GNTNK,",
			"\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\tPOSGNTNK,",
			"\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\tBITNK,",
			"\t\t\t\tBIKKNGK,",
			"\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tLOTSIZE,",
			"\t\t\t\tORDERGNTNK,",
			"\t\t\t\tORDERBITNK,",
			"\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\tNOTES,",
			"\t\t\t\tREASON_CD,",
			"\t\t\t\tIDNUMBER,",
			"\t\t\t\tGROSSDENPNO,",
			"\t\t\t\tGROSSLINENO",
			"\t\tFROM\tUTR_PURCHASEDENPDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPDETAIL ON TMP_EA25_DENPDETAIL (SYSDENPNO, LINENO);",
			"",
			"\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ域僑蠑ｵ)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tCOMPANY_CD,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tFLOOR_CD,",
			"\t\t\t\tREDECORATION_CD,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\tCLASSTYPE,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tPAYSCHDATE,",
			"\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\tTRADETYPE,",
			"\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\tTOTALQTY,",
			"\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\tORDERDATE,",
			"\t\t\t\tDELIVERYDATE,",
			"\t\t\t\tORDERMETHOD,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tDELIVERYNO,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPHEADER ON TMP_EA25_DENPHEADER (SYSDENPNO);",
			"",
			"\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ域僑蠑ｵ)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_MOVEDENPDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tEFFECTTYPE,",
			"\t\t\t\tMOVESTATUS,",
			"\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\tINSTORE_CD,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tOUTDATE,",
			"\t\t\t\tINDATE,",
			"\t\t\t\tSKU_CD,",
			"\t\t\t\tSKUSNAME,",
			"\t\t\t\tSTANDARDNAME,",
			"\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\tOUTQTY,",
			"\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\tOUTGNTNK,",
			"\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\tOUTBITNK,",
			"\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\tINQTY,",
			"\t\t\t\tINPOSGNTNK,",
			"\t\t\t\tINGNTNK,",
			"\t\t\t\tINGNKKNGK,",
			"\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\tINNET1GNTNK,",
			"\t\t\t\tINNET2GNTNK,",
			"\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\tINBITNK,",
			"\t\t\t\tINBIKKNGK,",
			"\t\t\t\tINLOSSQTY,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tNOTES,",
			"\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\tINSTOREITEMCOPYFLAG",
			"\t\tFROM\tUTR_MOVEDENPDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_MOVEDENPDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_MOVEDENPDETAIL ON TMP_EA25_MOVEDENPDETAIL (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_ORDERHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDELIVERYDECISIONFLAG,",
			"\t\t\t\tINSPECTDATE",
			"\t\tFROM\tUTR_ORDERHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_ORDERHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_ORDERHEADER ON TMP_EA25_ORDERHEADER (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_RETURNHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDELIVERYDECISIONFLAG,",
			"\t\t\t\tINSPECTDATE",
			"\t\tFROM\tUTR_RETURNHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_RETURNHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_RETURNHEADER ON TMP_EA25_RETURNHEADER (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_ORDERDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDELIVERYQTY",
			"\t\tFROM\tUTR_ORDERDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_ORDERDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_ORDERDETAIL ON TMP_EA25_ORDERDETAIL (SYSDENPNO, LINENO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_RETURNDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDELIVERYQTY",
			"\t\tFROM\tUTR_RETURNDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_RETURNDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_RETURNDETAIL ON TMP_EA25_RETURNDETAIL (SYSDENPNO, LINENO);",
			"",
			"\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ域僑蠑ｵ)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_MOVEDENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tEFFECTTYPE,",
			"\t\t\t\tMOVESTATUS,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\tREGISTERDATE,",
			"\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\tINSTORE_CD,",
			"\t\t\t\tINFLOOR_CD,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tOUTDATE,",
			"\t\t\t\tINDATE,",
			"\t\t\t\tINPLANDATE,",
			"\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tREVERSETYPE,",
			"\t\t\t\tBOXESSEQNO,",
			"\t\t\t\tBOXESQTY,",
			"\t\t\t\tBOXESNO,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_MOVEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_MOVEDENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_MOVEDENPHEADER ON TMP_EA25_MOVEDENPHEADER (SYSDENPNO);",
			"",
			"\tFOR lrec_CSVUploadColumnData IN lcur_CSVUploadColumnData LOOP",
			"\t\tSELECT\tMAX(LINENO) + 1",
			"\t\tINTO\tln_LineNo",
			"\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\tWHERE\tSERVER_CD\t\t= lrec_CSVUploadColumnData.SERVER_CD",
			"\t\tAND\t\tIMPORTBATCHKEY\t= lrec_CSVUploadColumnData.IMPORTBATCHKEY",
			"\t\tAND\t\tCSVLINENO\t\t= lrec_CSVUploadColumnData.CSVLINENO",
			"\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\tINTO\tln_LineNo",
			"\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\tWHERE\tSERVER_CD\t\t= lrec_CSVUploadColumnData.SERVER_CD",
			"\t\t\tAND\t\tIMPORTBATCHKEY\t= lrec_CSVUploadColumnData.IMPORTBATCHKEY",
			"\t\t\tAND\t\tCSVLINENO\t\t= lrec_CSVUploadColumnData.CSVLINENO",
			"\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\tEND IF;",
			"",
			"\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\tln_LineNo\t:= 1;",
			"\t\tEND IF;",
			"",
			"\t\t-- 譖ｴ譁ｰ繝槭せ繧ｿ縺ｫ蟄伜惠縺励↑縺?蝣ｴ蜷医??ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繧ｿ繧､繝励′縲?2:邱丞?･譖ｿ縲代?ｮ蝣ｴ蜷?",
			"\t\t-- 鬆?逶ｮ蠢?鬆医メ繧ｧ繝?繧ｯ?ｼ井ｽｿ逕ｨ縺吶ｋ繧ｫ繝ｩ繝?繧偵☆縺ｹ縺ｦ險倩ｼ峨☆繧具ｼ?",
			"\t\tIF (INSTR(ls_ErrorCheck, '00010') > 0) THEN",
			"\t\t\tIF (\tlrec_CSVUploadColumnData.COLUMN1_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN2_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN3_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN4_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN5_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN6_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN7_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN8_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN9_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN10_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN11_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN12_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN13_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN14_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN15_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN16_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN17_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN18_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN19_FLAG = '9'",
			"\t\t\t\t) THEN",
			"\t\t\t\tls_ColumnName\t:=\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN1_FLAG = '9') THEN 'COLUMN1'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN2_FLAG = '9') THEN 'COLUMN2'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN3_FLAG = '9') THEN 'COLUMN3'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN4_FLAG = '9') THEN 'COLUMN4'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN5_FLAG = '9') THEN 'COLUMN5'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN6_FLAG = '9') THEN 'COLUMN6'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN7_FLAG = '9') THEN 'COLUMN7'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN8_FLAG = '9') THEN 'COLUMN8'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN9_FLAG = '9') THEN 'COLUMN9'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN10_FLAG = '9') THEN 'COLUMN10'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN11_FLAG = '9') THEN 'COLUMN11'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN12_FLAG = '9') THEN 'COLUMN12'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN13_FLAG = '9') THEN 'COLUMN13'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN14_FLAG = '9') THEN 'COLUMN14'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN15_FLAG = '9') THEN 'COLUMN15'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN16_FLAG = '9') THEN 'COLUMN16'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN17_FLAG = '9') THEN 'COLUMN17'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN18_FLAG = '9') THEN 'COLUMN18'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN19_FLAG = '9') THEN 'COLUMN19'\t|| C_ARRAY_DELIMITER ELSE '' END;",
			"",
			"\t\t\t\tla_ColumnName\t\t:= STRING_TO_ARRAY(TRIM(ls_ColumnName, C_ARRAY_DELIMITER), C_ARRAY_DELIMITER);",
			"",
			"\t\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸINSERT",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.P_ACCEPTCSVUPDATEERRORDATA (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'00010',",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00010'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\tla_ColumnName",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tls_EOSType\t\t:= lrec_CSVUploadColumnData.COLUMN6;",
			"\t\tlb_ExistsOrder\t:= FALSE;",
			"\t\tlb_ExistsReturn\t:= FALSE;",
			"",
			"\t\tlrec_DeliveryStore := PXS_UTILITY.f_GetDeliveryStoreCd (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN NULL",
			"\t\t\t\t\t\t\t\t\t\tELSE COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\tEND,",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\tlrec_CSVUploadColumnData.COLUMN2 := lrec_DeliveryStore.STORE_CD;",
			"",
			"\t\t-- 蜿冶ｾｼ繝ｬ繧､繧｢繧ｦ繝?.EOS蛹ｺ蛻?繧?0:閾ｪ蜍募愛蛻･繧ゅ＠縺上?ｯ1:EOS縺ｨ縺励◆蝣ｴ蜷医?ｯ縲∽ｻ･荳九?ｮ譚｡莉ｶ縺ｧ逋ｺ豕ｨ螳溽ｸｾ繧ゅ＠縺上?ｯ霑泌刀螳溽ｸｾ繧貞盾辣ｧ縺励・OS?ｼ乗焔譖ｸ縺ｮ蛻､蛻･繧?繝√ぉ繝?繧ｯ蜃ｦ逅?縲∫ｴ榊刀遒ｺ螳壹ヵ繝ｩ繧ｰ縺ｪ縺ｩ縺ｮ譖ｴ譁ｰ繧定｡後＞縺ｾ縺吶?",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '0' OR lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN7 = '2') THEN",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tlrec_ReturnHeader",
			"\t\t\t\tFROM\tUTR_RETURNHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tORDER BY DELIVERYDECISIONFLAG, RETURNDATE DESC",
			"\t\t\t\tLIMIT 1;",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50200') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50200',\t\t-- 霑泌刀螳溽ｸｾ縺悟ｭ伜惠縺励∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50200'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN6,COLUMN7'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_EOSType\t:= '2';",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\t\tlb_ExistsReturn\t:= FALSE;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tlb_ExistsReturn\t:= TRUE;",
			"\t\t\t\t\tls_EOSType\t\t:= '1';",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tlrec_OrderHeader",
			"\t\t\t\tFROM\tUTR_ORDERHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tORDER BY DELIVERYDECISIONFLAG, ORDERDATE DESC",
			"\t\t\t\tLIMIT 1;",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50100') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50100',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺悟ｭ伜惠縺励∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50100'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN6,COLUMN7'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_EOSType := '2';",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\t\tlb_ExistsOrder\t:= FALSE;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tlb_ExistsOrder\t:= TRUE;",
			"\t\t\t\t\tls_EOSType\t\t:= '1';",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '50004') > 0) THEN",
			"\t\t\tIF (TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD') > CURRENT_DATE) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50004',\t\t\t\t-- 莨晉･ｨ譌･莉倥↓譛ｪ譚･譌･莉倥?ｯ蜈･蜉帙〒縺阪∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '50004'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 莨晉･ｨ邱?譌･繝槭せ繧ｿ繝√ぉ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '60004') > 0 AND ls_ImportCondition2_Server = 'AEOS') THEN",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN1 IS NOT NULL) THEN",
			"\t\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\t\tINTO\tls_CompanyCd",
			"\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\tls_CompanyCd\t:= COALESCE(ls_CompanyCd, '');",
			"",
			"\t\t\t\tSELECT\tSTOREDELAYDATE",
			"\t\t\t\tINTO\tld_RegistStoreDelayDate",
			"\t\t\t\tFROM\tUMF_COMPANYDELAYDAY",
			"\t\t\t\tWHERE\tSETTYPE\t\t\t= '2'",
			"\t\t\t\tAND\t\tCOMPANY_CD\t\t= ls_CompanyCd",
			"\t\t\t\tAND\t\tVALIDFLAG\t\t= '1'",
			"\t\t\t\tAND\t\tACCOUNTSMONTH\t= TO_CHAR(TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), 'YYYYMM');",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tSELECT\tSTOREDELAYDATE",
			"\t\t\t\t\tINTO\tld_RegistStoreDelayDate",
			"\t\t\t\t\tFROM\tUMF_COMPANYDELAYDAY",
			"\t\t\t\t\tWHERE\tSETTYPE\t\t\t= '1'",
			"\t\t\t\t\tAND\t\tCOMPANY_CD\t\t= '00000'",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t\t= '1'",
			"\t\t\t\t\tAND\t\tACCOUNTSMONTH\t= TO_CHAR(TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), 'YYYYMM');",
			"",
			"\t\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\t\tld_RegistStoreDelayDate\t\t:= NULL;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (ld_RegistStoreDelayDate IS NOT NULL) THEN",
			"\t\t\t\t\tIF (ld_RegistStoreDelayDate < CURRENT_DATE) THEN",
			"\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60004',\t\t\t\t-- 莨晉･ｨ繝ｭ繝?繧ｯ譌･繧帝℃縺弱※縺?繧九◆繧∫匳骭ｲ縺ｧ縺阪∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '60004'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ(笳丞?ｱ騾壹メ繧ｧ繝?繧ｯ)",
			"\t\tSELECT\tSYSTEMMODE_CD",
			"\t\tINTO\tln_SystemMode_Cd",
			"\t\tFROM\tUMF_STORE",
			"\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (NOT FOUND) THEN",
			"\t\t\tln_SystemMode_Cd := '001';",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk\t\t:= ln_ErrorCount;",
			"",
			"\t\t-- 蠎苓?励さ繝ｼ繝峨?ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '10000') > 0 OR INSTR(ls_ErrorCheck, '10010') > 0 AND lrec_CSVUploadColumnData.COLUMN2 IS NOT NULL) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSTORE (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN2'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- 蠎苓?励さ繝ｼ繝峨お繝ｩ繝ｼ",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_StoreError\t:= TRUE;",
			"\t\tEND IF;",
			"",
			"\t\tls_SkuClass := SUBSTR(lrec_CSVUploadColumnData.COLUMN11, LENGTH(lrec_CSVUploadColumnData.COLUMN11) - CAST(ls_Config_ItemClass_Length AS INTEGER) + 1, CAST(ls_Config_ItemClass_Length AS INTEGER));",
			"",
			"\t\tls_IncludeFlag\t:= '0';",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN11 = LPAD(ls_SkuClass, 13, '0')) THEN",
			"\t\t\tSELECT\tINCLUDE_CD",
			"\t\t\tINTO\tls_Sku_Cd",
			"\t\t\tFROM\tUMF_CLASS",
			"\t\t\tWHERE\tITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\tAND\t\tCLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\tAND\t\tCLASS_CD\t\t\t= ls_SkuClass;",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tls_Sku_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN11;",
			"\t\t\tELSE",
			"\t\t\t\tls_IncludeFlag\t:= '1';",
			"\t\t\tEND IF;",
			"",
			"\t\tELSE",
			"\t\t\tSELECT\tINCLUDE_CD",
			"\t\t\tINTO\tls_Sku_Cd",
			"\t\t\tFROM\tUMF_CLASS",
			"\t\t\tWHERE\tITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\tAND\t\tCLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\tAND\t\tINCLUDE_CD\t\t\t= lrec_CSVUploadColumnData.COLUMN11;",
			"",
			"\t\t\tIF (FOUND) THEN",
			"\t\t\t\tls_IncludeFlag\t:= '1';",
			"\t\t\tELSE",
			"\t\t\t\tls_Sku_Cd := lrec_CSVUploadColumnData.COLUMN11;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 蛹?諡ｬ繧ｳ繝ｼ繝峨?ｮ蝣ｴ蜷医∝次蜊倅ｾ｡縺ｨ螢ｲ蜊倅ｾ｡縺梧欠螳壹＆繧後※縺?縺ｪ縺?蝣ｴ蜷医お繝ｩ繝ｼ",
			"\t\tIF(ls_IncludeFlag <> '0' AND (lrec_CSVUploadColumnData.COLUMN13 IS NULL OR lrec_CSVUploadColumnData.COLUMN14 IS NULL) ) THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60005') > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60005',\t\t-- 蛻?鬘槫?･蜉帙?ｮ轤ｺ蜴溷腰萓｡縺ｨ螢ｲ蜊倅ｾ｡蠢?鬆医〒縺吶?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60005'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN13,COLUMN14'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tSELECT\tSUPPLIESTYPE,",
			"\t\t\t\tCONSIGNITEMTYPE",
			"\t\tINTO\tls_SuppliesType,",
			"\t\t\t\tls_ConsignItemType",
			"\t\tFROM\tUMF_ITEM",
			"\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tSELECT\tGNTNKTYPE,",
			"\t\t\t\tORDERGNTNK1,",
			"\t\t\t\tORDERGNTNK2",
			"\t\tINTO\tls_GntnkType,",
			"\t\t\t\tln_OrderGntnk1,",
			"\t\t\t\tln_OrderGntnk2",
			"\t\tFROM\tUMF_ITEMSTORE",
			"\t\tWHERE\tSTORE_CD\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tSKU_CD\t\t\t= ls_Sku_Cd",
			"\t\tAND\t\tVALIDFLAG\t\t= '1';",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN7 <> '5' AND lrec_CSVUploadColumnData.COLUMN7 <> '6') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60012') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType <> '0' AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60012',\t\t-- 逕ｨ蠎ｦ蜩√?ｻ蟋碑ｨ嶺ｼ晉･ｨ蛹ｺ蛻?繝√ぉ繝?繧ｯ縺ｧ縺吶?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60012'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tELSIF (INSTR(ls_ErrorCheck, '60006') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType <> '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60006',\t\t-- 逕ｨ蠎ｦ蜩∽ｼ晉･ｨ蛹ｺ蛻?繝√ぉ繝?繧ｯ縺ｧ縺吶?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60006'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tELSIF (INSTR(ls_ErrorCheck, '60010') > 0 AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60010',\t\t-- 蟋碑ｨ嶺ｼ晉･ｨ蛹ｺ蛻?繝√ぉ繝?繧ｯ縺ｧ縺吶?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60010'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN7 = '5') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60007') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType = '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60007',\t\t-- 逕ｨ蠎ｦ蜩∽ｼ晉･ｨ蛹ｺ蛻?繝√ぉ繝?繧ｯ縺ｧ縺吶?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60007'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN7 = '6') THEN",
			"\t\t\tSELECT\tPARTNERTYPE",
			"\t\t\tINTO\tls_PartnerType",
			"\t\t\tFROM\tUMF_PARTNER",
			"\t\t\tWHERE\tPARTNER_CD = lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG = '1';",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60011') > 0 AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType <> '1' AND ls_PartnerType IS NOT NULL AND ls_PartnerType <> '12') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60011',\t\t-- 蟋碑ｨ嶺ｼ晉･ｨ蛹ｺ蛻?繝√ぉ繝?繧ｯ縺ｧ縺吶?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60011'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_GntnkType = '1') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60013') > 0 AND lrec_CSVUploadColumnData.COLUMN13 IS NOT NULL) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60013',",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60013'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN13'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60014') > 0 AND lrec_CSVUploadColumnData.COLUMN13 IS NULL) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60014',",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60014'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN13'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60016') > 0) THEN",
			"\t\t\to_Store := PXS_UTILITY.f_GetStoreHistory(lrec_CSVUploadColumnData.COLUMN2, TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'));",
			"",
			"\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\tINTO\tls_Company_Cd_Chk",
			"\t\t\tFROM\tUMF_STORE",
			"\t\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tIF (o_Store.COMPANY_CD <> ls_Company_Cd_Chk) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60016',\t\t\t\t\t\t\t-- 莨晉･ｨ譌･莉俶凾轤ｹ縺ｮ譌ｧ莨夂､ｾ繧ｳ繝ｼ繝峨ｒ險ｭ螳壹＠縺ｾ縺励◆縲?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60016'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN1,COLUMN2'",
			"\t\t\t\t);",
			"\t\t\tEND IF;",
			"",
			"\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_EOSType = '2' AND lrec_CSVUploadColumnData.COLUMN6 = '0') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60017') > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60017',\t\t\t\t\t-- 謇区嶌莨晉･ｨ縺ｨ蛻､蛻･縺輔ｌ縺ｾ縺励◆縲?",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60017'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN6'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk := ln_ErrorCount;",
			"",
			"\t\t-- 蝠?蜩√さ繝ｼ繝峨?ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\tIF (lb_SkuError = FALSE AND (INSTR(ls_ErrorCheck, '10001') > 0 OR INSTR(ls_ErrorCheck, '10011') > 0)) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFItem (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- 蝠?蜩√さ繝ｼ繝峨お繝ｩ繝ｼ",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_SkuError := TRUE;",
			"\t\tEND IF;",
			"",
			"\t\t-- 蝠?蜩∝ｺ苓?励さ繝ｼ繝峨?ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ(蛹?諡ｬ繧ｳ繝ｼ繝峨?ｮ蝣ｴ蜷亥ｭ伜惠繝√ぉ繝?繧ｯ繧定｡後ｏ縺ｪ縺?縲?",
			"\t\tIF ((lb_SkuError = FALSE AND lb_StoreError = FALSE) AND (INSTR(ls_ErrorCheck, '10002') > 0 OR INSTR(ls_ErrorCheck, '10012') > 0) AND ls_IncludeFlag <> '1') THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFItemStore (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\tSELECT\tITEMATTRIBUTETYPE",
			"\t\tINTO\tls_ItemAttributeType",
			"\t\tFROM\tUMF_SYSTEMMODE",
			"\t\tWHERE\tSYSTEMMODE_CD\t= ln_SystemMode_Cd",
			"\t\tAND\t\tVALIDFLAG\t\t= '1';",
			"",
			"\t\tIF (NOT FOUND) THEN",
			"\t\t\tls_ItemAttributeType := '001';",
			"\t\tEND IF;",
			"",
			"\t\tIF (lb_SkuError = FALSE AND (INSTR(ls_ErrorCheck, '10006') > 0 OR INSTR(ls_ErrorCheck, '10007') > 0)) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUmfItemClass (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk := ln_ErrorCount;",
			"",
			"\t\t-- 繝代?ｼ繝医リ繝ｼ繧ｳ繝ｼ繝峨?ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '10004') > 0 OR INSTR(ls_ErrorCheck, '10014') > 0) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPARTNER (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- 繝代?ｼ繝医リ繝ｼ繧ｳ繝ｼ繝峨お繝ｩ繝ｼ",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_PartnerError := TRUE;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_EOSType = '1') THEN",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '12';",
			"\t\t\t\t\tls_DenpType\t:= lrec_ReturnHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '14';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '14';",
			"",
			"\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '81';",
			"",
			"\t\t\t\tWHEN ('6') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '16';",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"\t\t\tEND CASE;",
			"",
			"\t\tELSE",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '13';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '15';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '14';",
			"",
			"\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '81';",
			"",
			"\t\t\t\tWHEN ('6') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '16';",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"\t\t\tEND CASE;",
			"\t\tEND IF;",
			"",
			"\t\t-- 蠎苓?励さ繝ｼ繝峨→繝代?ｼ繝医リ繝ｼ繧ｳ繝ｼ繝峨?ｯ繧ｨ繝ｩ繝ｼ縺後↑縺?蝣ｴ蜷医∵､懷庶譌･繧貞叙蠕励＠縺ｾ縺吶?",
			"\t\tIF (lb_StoreError = FALSE AND lb_PartnerError = FALSE) THEN",
			"\t\t\tld_InspectDateCheck\t:= PXS_UTILITY.f_GetDenpAccountDate (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\tls_DenpKind,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\t\t\tls_Config_00201,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4,",
			"\t\t\t\t\t\t\t\t\tls_Config_00009,",
			"\t\t\t\t\t\t\t\t\tls_Config_00204",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50005') > 0) THEN",
			"\t\t\t\tIF (TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD') <> ld_InspectDateCheck) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50005',\t\t\t-- 蜈･蜉帙＆繧後◆莨晉･ｨ譌･莉倥?ｯ邂怜?ｺ縺ｮ莨晉･ｨ譌･莉倥′逡ｰ縺ｪ縺｣縺ｦ縺?縺ｾ縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50005'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 繝代?ｼ繝医リ繝ｼ繧ｳ繝ｼ繝峨ｈ繧翫∽ｻ募?･縺狗ｧｻ蜍輔°蛻､蛻･縺吶ｋ縲?",
			"\t\tSELECT\tPARTNERTYPE,",
			"\t\t\t\tCHANGESTORE_CD",
			"\t\tINTO\tls_PartnerType,",
			"\t\t\t\tls_ChangeStore_Cd",
			"\t\tFROM\tUMF_PARTNER",
			"\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t-- 逋ｺ豕ｨ蜈亥玄蛻?縺轡C縺ｮ蝣ｴ蜷医お繝ｩ繝ｼ",
			"\t\tIF (INSTR(ls_ErrorCheck, '50009') > 0 AND ls_EOSType = '2') THEN",
			"\t\t\tIF (ls_PartnerType = '11') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50009',\t\t\t-- 逋ｺ豕ｨ蜈医′迚ｩ豬√そ繝ｳ繧ｿ繝ｼ縺ｨ縺ｪ縺｣縺ｦ縺?縺ｾ縺吶らｧｻ蜍穂ｼ晉･ｨ縺ｨ縺励※逋ｻ骭ｲ縺励※縺上□縺輔＞縲?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50009'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"\t\t\tSELECT\tCOALESCE(PAYPARTNER_CD, '')",
			"\t\t\tINTO\tls_PayPartner_Cd",
			"\t\t\tFROM\tUMF_PARTNER",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\tEND IF;",
			"",
			"\t\t-- 迚ｩ豬√そ繝ｳ繧ｿ繝ｼ縺ｮ繝槭せ繧ｿ蟄伜惠繝√ぉ繝?繧ｯ",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL AND lrec_CSVUploadColumnData.COLUMN5 <> '000000') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '10026') > 0 OR INSTR(ls_ErrorCheck, '10027') > 0) THEN",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFLogisticsCenter (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN5,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t\t);",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '50007') > 0) THEN",
			"\t\t\tSELECT\tCOUNT(1)",
			"\t\t\tINTO\tln_Count",
			"\t\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\t\tWHERE\tDENPNO\t\t\t\t\t\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\tAND\t\tSTORE_CD\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tTO_CHAR(INSPECTDATE, 'YYYYMM')\t\t= TO_CHAR(ld_InspectDateCheck, 'YYYYMM')",
			"\t\t\tAND\t\t(\t(lrec_CSVUploadColumnData.COLUMN7 = '1' AND DENPKIND IN ('10', '11') AND DENPTYPE NOT IN ('71', '81', '16', '14'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '2' AND DENPKIND IN ('12', '13'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '3' AND DENPKIND IN ('14', '15'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '4' AND DENPKIND IN ('10', '11') AND DENPTYPE = '14')",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '5' AND DENPKIND IN ('10', '11') AND DENPTYPE = '81')",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '6' AND DENPKIND IN ('10', '11') AND DENPTYPE = '16')",
			"\t\t\t\t\t);",
			"",
			"\t\t\tIF (ln_Count > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50007',\t\t-- 莨晉･ｨ逡ｪ蜿ｷ縺瑚ｨ井ｸ頑ｸ医∩縺ｧ縺吶?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50007'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN2,COLUMN3,COLUMN8'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- EOS(窶ｻ)縺九▽蜿冶ｾｼ繝ｬ繧､繧｢繧ｦ繝?.莨晉･ｨ遞ｮ蛻･縺?1:莉募?･繧ゅ＠縺上?ｯ3:蛟､蠑輔?ｮ蝣ｴ蜷医?ｮ縺ｿ繝√ぉ繝?繧ｯ繧定｡後≧",
			"\t\tIF (ls_EOSType = '1' AND (lrec_CSVUploadColumnData.COLUMN7 = '1' OR lrec_CSVUploadColumnData.COLUMN7 = '3') AND lb_ExistsOrder) THEN",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50101') > 0 AND COALESCE(lrec_OrderHeader.DELIVERYDECISIONFLAG, '0') = '1') THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50101',\t\t-- 莉募?･莨晉･ｨ縺瑚ｨ井ｸ頑ｸ医〒縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50101'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tSELECT\tSKU_CD,",
			"\t\t\t\t\tSINGLEQTY",
			"\t\t\tINTO\tls_Sku_Cd_Check,",
			"\t\t\t\t\tln_SingleQty",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50105') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50105',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｫ蟄伜惠縺励↑縺?陦檎分蜿ｷ縺ｧ縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50105'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ls_Sku_Cd_Check <> lrec_CSVUploadColumnData.COLUMN11) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50104') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50104',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧句膚蜩√さ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50104'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ln_SingleQty < CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '60019') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'60019',\t\t-- 莉募?･謨ｰ縺檎匱豕ｨ謨ｰ繧定ｶ?縺医※縺?縺ｾ縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60019'),",
			"\t\t\t\t\t\t\t\t'(逋ｺ豕ｨ謨ｰ?ｼ?' || CAST(ln_SingleQty AS INT) || ')',",
			"\t\t\t\t\t\t\t\t'COLUMN12'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50106') > 0) THEN",
			"\t\t\t\t--隧ｲ蠖薙☆繧狗匱豕ｨ螳溽ｸｾ縺ｫ蟄伜惠縺吶ｋ陦檎分蜿ｷ縺ｨ荳閾ｴ縺吶ｋ蜿冶ｾｼ繝ｬ繧､繧｢繧ｦ繝?.陦檎分蜿ｷ縺ｮ繝?繝ｼ繧ｿ縺悟ｭ伜惠縺励↑縺?蝣ｴ蜷?",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_DBLineNo",
			"\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO;",
			"",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_LineNo",
			"\t\t\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tEXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERHEADER HEADER",
			"\t\t\t\t\t\t\t\t\tINNER JOIN UTR_ORDERDETAIL DETAIL",
			"\t\t\t\t\t\t\t\t\t\tON\tDETAIL.SYSDENPNO\t= HEADER.SYSDENPNO",
			"\t\t\t\t\t\t\tWHERE\tHEADER.STORE_CD\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\t\t\tAND\t\tHEADER.PARTNER_CD\t\t\t\t\t\t\t\t\t= COLUMNDATA.COLUMN3",
			"\t\t\t\t\t\t\tAND\t\tHEADER.DENPNO\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(COLUMNDATA.COLUMN10, COLUMNDATA.COLUMN8) AS NUMERIC)",
			"\t\t\t\t\t\t\tAND\t\t(\t(COLUMNDATA.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\t\t\t\tAND\tTO_DATE(COLUMNDATA.COLUMN15, 'YYYY/MM/DD')\t= HEADER.ORDERDATE",
			"\t\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\t\t\tOR\tHEADER.ORDERDATE\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\tAND\t\tHEADER.SYSDENPNO\t\t\t\t\t\t\t\t\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tDETAIL.LINENO\t\t\t\t\t\t\t\t\t\t= CAST(COLUMNDATA.COLUMN9 AS NUMERIC)",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_Count_DBLineNo > ln_Count_LineNo) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50106',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｫ蟄伜惠縺吶ｋ陦檎分蜿ｷ縺悟叙霎ｼ繝?繝ｼ繧ｿ縺ｫ蟄伜惠縺励∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50106'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50107') > 0) THEN",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_CountDeliveryDecisionFlag",
			"\t\t\t\tFROM\tUTR_ORDERHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tTO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')\t= ORDERDATE",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tAND\t\tDELIVERYDECISIONFLAG\t\t\t\t\t\t\t\t\t\t\t\t= '0'",
			"\t\t\t\tGROUP BY DENPNO, STORE_CD, PARTNER_CD;",
			"",
			"\t\t\t\tIF (ln_CountDeliveryDecisionFlag > 1) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50107',\t\t-- 蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ繝ｻ蠎苓?励?ｻ逋ｺ豕ｨ蜈医?ｮ逋ｺ豕ｨ螳溽ｸｾ縺瑚､?謨ｰ蟄伜惠縺励∪縺吶ら匱豕ｨ譌･繧呈欠螳壹☆繧九°縲∫判髱｢縺九ｉ莨晉･ｨ險井ｸ翫＠縺ｦ縺上□縺輔＞縲?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50107'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 逋ｺ豕ｨ螳溽ｸｾ迚ｩ豬√そ繝ｳ繧ｿ繝ｼ荳肴紛蜷医メ繧ｧ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '50108') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\tIF ((ls_DenpKind = '10' OR ls_DenpKind = '14') AND lrec_OrderHeader.LOGISTICSCENTER_CD <> lrec_CSVUploadColumnData.COLUMN5) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧狗黄豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- EOS(窶ｻ)縺九▽蜿冶ｾｼ繝ｬ繧､繧｢繧ｦ繝?.莨晉･ｨ遞ｮ蛻･縺?2:霑泌刀縺ｮ蝣ｴ蜷医?ｮ縺ｿ繝√ぉ繝?繧ｯ繧定｡後≧",
			"\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN7 = '2' AND lb_ExistsReturn) THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50201') > 0 AND COALESCE(lrec_ReturnHeader.DELIVERYDECISIONFLAG, '0') = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50201',\t\t-- 霑泌刀莨晉･ｨ縺瑚ｨ井ｸ頑ｸ医〒縺吶?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50201'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tSELECT\tSKU_CD,",
			"\t\t\t\t\tSINGLEQTY",
			"\t\t\tINTO\tls_Sku_Cd_Check,",
			"\t\t\t\t\tln_SingleQty",
			"\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50205') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50205',\t\t-- 霑泌刀螳溽ｸｾ縺ｫ蟄伜惠縺励↑縺?陦檎分蜿ｷ縺ｧ縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50205'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ls_Sku_Cd_Check <> lrec_CSVUploadColumnData.COLUMN11) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50204') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50204',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧句膚蜩√さ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50204'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ln_SingleQty < CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '60019') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'60019',\t\t-- 莉募?･謨ｰ縺檎匱豕ｨ謨ｰ繧定ｶ?縺医※縺?縺ｾ縺吶?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60019'),",
			"\t\t\t\t\t\t\t\t'(逋ｺ豕ｨ謨ｰ?ｼ?' || CAST(ln_SingleQty AS INT) || ')',",
			"\t\t\t\t\t\t\t\t'COLUMN12'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50206') > 0) THEN",
			"\t\t\t\t--隧ｲ蠖薙☆繧狗匱豕ｨ螳溽ｸｾ縺ｫ蟄伜惠縺吶ｋ陦檎分蜿ｷ縺ｨ荳閾ｴ縺吶ｋ蜿冶ｾｼ繝ｬ繧､繧｢繧ｦ繝?.陦檎分蜿ｷ縺ｮ繝?繝ｼ繧ｿ縺悟ｭ伜惠縺励↑縺?蝣ｴ蜷?",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_DBLineNo",
			"\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO;",
			"",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_LineNo",
			"\t\t\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tEXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNHEADER HEADER",
			"\t\t\t\t\t\t\t\t\tINNER JOIN UTR_RETURNDETAIL DETAIL",
			"\t\t\t\t\t\t\t\t\t\tON\tDETAIL.SYSDENPNO\t= HEADER.SYSDENPNO",
			"\t\t\t\t\t\t\tWHERE\tHEADER.STORE_CD\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\t\t\tAND\t\tHEADER.PARTNER_CD\t\t\t\t\t\t\t\t\t= COLUMNDATA.COLUMN3",
			"\t\t\t\t\t\t\tAND\t\tHEADER.DENPNO\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(COLUMNDATA.COLUMN10, COLUMNDATA.COLUMN8) AS NUMERIC)",
			"\t\t\t\t\t\t\tAND\t\t(\t(\tCOLUMNDATA.COLUMN15\tIS NOT NULL",
			"\t\t\t\t\t\t\t\t\t\tAND\tTO_DATE(COLUMNDATA.COLUMN15, 'YYYY/MM/DD')\t= HEADER.RETURNDATE",
			"\t\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\t\t\tOR\tHEADER.RETURNDATE\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\tAND\t\tHEADER.SYSDENPNO\t\t\t\t\t\t\t\t\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tDETAIL.LINENO\t\t\t\t\t\t\t\t\t\t= CAST(COLUMNDATA.COLUMN9 AS NUMERIC)",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_Count_DBLineNo > ln_Count_LineNo) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50206',\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｫ蟄伜惠縺吶ｋ陦檎分蜿ｷ縺悟叙霎ｼ繝?繝ｼ繧ｿ縺ｫ蟄伜惠縺励∪縺帙ｓ縲?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50206'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50207') > 0) THEN",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_CountDeliveryDecisionFlag",
			"\t\t\t\tFROM\tUTR_RETURNHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(lrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')\t= RETURNDATE",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tAND\t\tDELIVERYDECISIONFLAG\t\t\t\t\t\t\t\t\t\t\t\t= '0'",
			"\t\t\t\tGROUP BY DENPNO, STORE_CD, PARTNER_CD;",
			"",
			"\t\t\t\tIF (ln_CountDeliveryDecisionFlag > 1) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50207',\t\t-- 蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ繝ｻ蠎苓?励?ｻ逋ｺ豕ｨ蜈医?ｮ霑泌刀螳溽ｸｾ縺瑚､?謨ｰ蟄伜惠縺励∪縺吶ら匱豕ｨ譌･繧呈欠螳壹☆繧九°縲∫判髱｢縺九ｉ莨晉･ｨ險井ｸ翫＠縺ｦ縺上□縺輔＞縲?",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50207'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 霑泌刀螳溽ｸｾ迚ｩ豬√そ繝ｳ繧ｿ繝ｼ荳肴紛蜷医メ繧ｧ繝?繧ｯ",
			"\t\tIF (INSTR(ls_ErrorCheck, '50208') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\tIF (ls_DenpKind = '12' AND lrec_ReturnHeader.LOGISTICSCENTER_CD <> lrec_CSVUploadColumnData.COLUMN5) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50208',\t\t-- 霑泌刀螳溽ｸｾ縺ｨ逡ｰ縺ｪ繧狗黄豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶?",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50208'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 繝槭せ繧ｿ蜴滉ｾ｡繧剃ｽｿ繧上↑縺?繝代ち繝ｼ繝ｳ",
			"\t\t-- 竭?蟋碑ｨ嶺ｻ募?･縺ｧ逋ｺ豕ｨ蜈亥挨蜴滉ｾ｡邇?繝槭せ繧ｿ逋ｻ骭ｲ縺ゅｊ",
			"\t\tIF (ls_DenpKind IN ('10', '11') AND ls_DenpType = '16') THEN",
			"\t\t\tSELECT\tCOUNT(1)",
			"\t\t\tINTO\tln_CountCostRate",
			"\t\t\tFROM\tUMF_PARTNERCOSTRATE",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tSELECT\tCOSTRATE",
			"\t\t\tINTO\tln_CostRate",
			"\t\t\tFROM\tUMF_PARTNERCOSTRATE",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t\t:= lrec_ReturnHeader.RETURNDATE;",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= lrec_ReturnHeader.DENPNO;",
			"",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\tSENDOPERATOR_CD",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE \t\t\t:= lrec_OrderHeader.ORDERDATE;",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= lrec_OrderHeader.DENPNO;",
			"",
			"\t\tELSE",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUMF_ITEM",
			"\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN10 AS NUMERIC);",
			"",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN15 IS NULL) THEN",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t:= NULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD');",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tls_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\tlrec_MasterItem\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\tls_CLASS1_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS2_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS3_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS4_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS5_CD",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t-- 譏守ｴｰ繧ｳ繝｡繝ｳ繝?",
			"\t\tlrec_UtrPurchaseDenpDetail.NOTES\t\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN19;",
			"",
			"\t\tIF (ls_DenpKind = '10' AND lrec_CSVUploadColumnData.COLUMN13 IS NULL AND lrec_OrderHeader.DELIVERYPLANFLAG = '1') THEN",
			"\t\t\tSELECT\tDELIVERYPLANGNTNK",
			"\t\t\tINTO\tln_TmpPartnerGntnk",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= fx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9);",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN13 IS NULL AND ln_CountCostRate > 0) THEN",
			"\t\t\tln_TmpPartnerGntnk\t\t\t\t:= COALESCE(CAST(lrec_MasterItem.BITNK AS NUMERIC), 0) * COALESCE(ln_CostRate / 100, 0);",
			"",
			"\t\tELSE",
			"\t\t\tln_TmpPartnerGntnk\t\t\t\t:= CAST(NULLIF(lrec_CSVUploadColumnData.COLUMN13, '') AS NUMERIC);",
			"\t\tEND IF;",
			"",
			"\t\to_PurchaseGnkBik := PXS_UTILITY.f_GetPurchaseGnkBik (",
			"\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC),",
			"\t\t\t\tln_TmpPartnerGntnk,",
			"\t\t\t\tls_DenpKind,",
			"\t\t\t\tls_DenpType,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\tls_Sku_Cd,",
			"\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN17 = '1' THEN TRUE ELSE FALSE END,",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\tfx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9),",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\tCAST(NULLIF(lrec_CSVUploadColumnData.COLUMN18, '') AS NUMERIC)",
			"\t\t);",
			"",
			"\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNTNK;",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN14 IS NOT NULL AND lrec_CSVUploadColumnData.COLUMN14 <> '') THEN",
			"\t\t\tlrec_UtrPurchaseDenpDetail.BITNK\t\t\t\t\t:= COALESCE(CAST(NULLIF(lrec_CSVUploadColumnData.COLUMN14, '') AS NUMERIC), 0);",
			"",
			"\t\tELSE",
			"\t\t\tlrec_UtrPurchaseDenpDetail.BITNK\t\t\t\t\t:= o_PurchaseGnkBik.BITNK;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60018') > 0) THEN",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN18 IS NOT NULL AND o_PurchaseGnkBik.WHOLESALEGNKINPUTTYPE = '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60018',\t\t\t\t-- 萓帷ｵｦ蜩∽ｻ･螟悶ｂ縺励￥縺ｯ驛ｨ髢謇薙■繝ｻNONPLU繝ｻ蜴滉ｾ｡邇?莉･螟悶?ｮ縺溘ａ蜊ｸ蜴溷腰萓｡縺ｯ辟｡蜉ｹ縺ｧ縺吶?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '60018'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN18'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 繧ｻ繝ｳ繧ｿ繝ｼ蠎励?槭せ繧ｿ譛ｪ逋ｻ骭ｲ",
			"\t\tIF (INSTR(ls_ErrorCheck, '60020') > 0) THEN",
			"\t\t\tIF (ls_EOSType <> '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NULL) THEN",
			"\t\t\t\tSELECT\tLOGISTICSCENTER_CD",
			"\t\t\t\tINTO\tls_LogisticsCenterCheck",
			"\t\t\t\tFROM\tPXC_EA25_001.f_GetLogisticscenter_Cd(lrec_CSVUploadColumnData.COLUMN2, lrec_CSVUploadColumnData.COLUMN3, lrec_CSVUploadColumnData.COLUMN7, lrec_CSVUploadColumnData.COLUMN1) AS LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\tIF (NOT FOUND OR ls_LogisticsCenterCheck IS NULL) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'60020',\t\t-- 迚ｩ豬√そ繝ｳ繧ｿ繝ｼ蜿匁桶蠎苓?励?槭せ繧ｿ譛ｪ逋ｻ骭ｲ縺ｧ縺吶?",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60020'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ln_LoopIndex = 1) THEN",
			"\t\t\t-- 遞主玄蛻?繝√ぉ繝?繧ｯ",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60001') > 0) THEN",
			"\t\t\t\tOPEN lcur_EA25_TAXTYPE_GROUP FOR",
			"\t\t\t\t\tSELECT\tTMP.COLUMN1,",
			"\t\t\t\t\t\t\tTMP.COLUMN2,",
			"\t\t\t\t\t\t\tTMP.COLUMN3,",
			"\t\t\t\t\t\t\tCOALESCE(TMP.COLUMN5, '')\t\t\t\tAS COLUMN5,",
			"\t\t\t\t\t\t\tTMP.COLUMN8,",
			"\t\t\t\t\t\t\tMAX(ITEM.TAXTYPE) <> MIN(ITEM.TAXTYPE)\tAS TAXTYPE_FLAG",
			"\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA TMP",
			"\t\t\t\t\t\t\tINNER JOIN UMF_ITEM ITEM",
			"\t\t\t\t\t\t\t\tON\tITEM.SKU_CD\t\t= TMP.SKU_CD",
			"\t\t\t\t\t\t\t\tAND\tITEM.VALIDFLAG\t= '1'",
			"\t\t\t\t\tGROUP BY TMP.COLUMN1, TMP.COLUMN2, TMP.COLUMN3, TMP.COLUMN5, TMP.COLUMN8;",
			"\t\t\t\tLOOP",
			"\t\t\t\t\tFETCH lcur_EA25_TAXTYPE_GROUP INTO lrec_EA25_TAXTYPE_GROUP;",
			"\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\tIF (lrec_EA25_TAXTYPE_GROUP.TAXTYPE_FLAG = TRUE) THEN",
			"\t\t\t\t\t\t\tOPEN lcur_EA25_TAXTYPE_ITEM FOR",
			"\t\t\t\t\t\t\t\tSELECT\t*",
			"\t\t\t\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA",
			"\t\t\t\t\t\t\t\tWHERE\tCOLUMN1\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN1",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN2\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN2",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN3\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN3",
			"\t\t\t\t\t\t\t\tAND\t\tCOALESCE(COLUMN5, '')\t= lrec_EA25_TAXTYPE_GROUP.COLUMN5",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN8\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN8;",
			"\t\t\t\t\t\t\tLOOP",
			"\t\t\t\t\t\t\t\tFETCH lcur_EA25_TAXTYPE_ITEM INTO lrec_EA25_TAXTYPE_ITEM;",
			"\t\t\t\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXTYPE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXTYPE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo\t:= 1;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸINSERT",
			"\t\t\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_EA25_TAXTYPE_ITEM.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'60001',",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60001'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"",
			"\t\t\t\t\t\t\tEND LOOP;",
			"\t\t\t\t\t\t\tCLOSE lcur_EA25_TAXTYPE_ITEM;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\tEND LOOP;",
			"\t\t\t\tCLOSE lcur_EA25_TAXTYPE_GROUP;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- 遞守紫繝√ぉ繝?繧ｯ",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60002') > 0) THEN",
			"\t\t\t\tOPEN lcur_EA25_TAXRATE_GROUP FOR",
			"\t\t\t\t\tSELECT\tTMP.COLUMN1,",
			"\t\t\t\t\t\t\tTMP.COLUMN2,",
			"\t\t\t\t\t\t\tTMP.COLUMN3,",
			"\t\t\t\t\t\t\tCOALESCE(TMP.COLUMN5, '')\tAS COLUMN5,",
			"\t\t\t\t\t\t\tTMP.COLUMN8,",
			"\t\t\t\t\t\t\tMAX(COALESCE(TAX.TAXRATE, 0)) <> MIN(COALESCE(TAX.TAXRATE, 0))\tAS TAXRATE_FLAG",
			"\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA TMP",
			"\t\t\t\t\t\t\tINNER JOIN UMF_ITEM ITEM",
			"\t\t\t\t\t\t\t\tON\tITEM.SKU_CD\t\t\t\t= TMP.SKU_CD",
			"\t\t\t\t\t\t\t\tAND\tITEM.VALIDFLAG\t\t\t= '1'",
			"\t\t\t\t\t\t\tLEFT OUTER JOIN UMF_TAX TAX",
			"\t\t\t\t\t\t\t\tON\tTAX.TAX_CD\t\t\t\t= ITEM.TAX_CD",
			"\t\t\t\t\t\t\t\tAND\tTAX.APPLYSTARTDATE\t\t<= CURRENT_DATE",
			"\t\t\t\t\t\t\t\tAND\tTAX.APPLYENDDATE\t\t>= CURRENT_DATE",
			"\t\t\t\t\t\t\t\tAND\tTAX.VALIDFLAG\t\t\t= '1'",
			"\t\t\t\t\tGROUP BY TMP.COLUMN1, TMP.COLUMN2, TMP.COLUMN3, TMP.COLUMN5, TMP.COLUMN8;",
			"\t\t\t\tLOOP",
			"\t\t\t\t\tFETCH lcur_EA25_TAXRATE_GROUP INTO lrec_EA25_TAXRATE_GROUP;",
			"\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\tIF (lrec_EA25_TAXRATE_GROUP.TAXRATE_FLAG = TRUE) THEN",
			"\t\t\t\t\t\t\tOPEN lcur_EA25_TAXRATE_ITEM FOR",
			"\t\t\t\t\t\t\t\tSELECT\t*",
			"\t\t\t\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA",
			"\t\t\t\t\t\t\t\tWHERE\tCOLUMN1\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN1",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN2\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN2",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN3\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN3",
			"\t\t\t\t\t\t\t\tAND\t\tCOALESCE(COLUMN5, '')\t= lrec_EA25_TAXRATE_GROUP.COLUMN5",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN8\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN8;",
			"\t\t\t\t\t\t\tLOOP",
			"\t\t\t\t\t\t\t\tFETCH lcur_EA25_TAXRATE_ITEM INTO lrec_EA25_TAXRATE_ITEM;",
			"\t\t\t\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXRATE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXRATE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo\t:= 1;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\t-- 繧ｨ繝ｩ繝ｼ繝?繝ｼ繝悶Ν縺ｸINSERT",
			"\t\t\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_EA25_TAXRATE_ITEM.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'60002',",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60002'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"",
			"\t\t\t\t\t\t\tEND LOOP;",
			"\t\t\t\t\t\t\tCLOSE lcur_EA25_TAXRATE_ITEM;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\tEND LOOP;",
			"\t\t\t\tCLOSE lcur_EA25_TAXRATE_GROUP;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tln_LoopIndex\t:= -1;",
			"\t\tEND IF;",
			"",
			"\t\t-- 譖ｴ譁ｰ蜑阪メ繧ｧ繝?繧ｯ",
			"\t\tIF (i_CheckType = '1') THEN",
			"\t\t\tIF (\tls_InspectDate\t\t<> lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\t\tOR\tls_Store_Cd\t\t\t<> lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tOR\tls_Partner_Cd\t\t<> lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tOR\tls_LogisticsCenter\t<> lrec_CSVUploadColumnData.COLUMN5",
			"\t\t\t\tOR\tls_DenpKindCsv\t\t<> lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\t\tOR\tln_Denpno\t\t\t<> CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\t\t) THEN",
			"\t\t\t\tls_InspectDate\t\t:= lrec_CSVUploadColumnData.COLUMN1;",
			"\t\t\t\tls_Store_Cd\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\tls_Partner_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\tls_LogisticsCenter\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\tln_Denpno\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\tls_HeaderNotes\t\t:= COALESCE(lrec_CSVUploadColumnData.COLUMN16, '');",
			"\t\t\t\tls_DenpKindCsv\t\t:= lrec_CSVUploadColumnData.COLUMN7;",
			"\t\t\t\tln_LineNoRe\t\t\t:= 1;",
			"",
			"\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN9_FLAG = '0') THEN",
			"\t\t\t\t\tls_LineNoCheck\t:= lrec_CSVUploadColumnData.COLUMN9;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_LineNoCheck\t:= '';",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50003') > 0) THEN",
			"\t\t\t\t\tIF (ls_HeaderNotes <> COALESCE(lrec_CSVUploadColumnData.COLUMN16, '')) THEN",
			"",
			"\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t'50003',\t\t--蜷後§莨晉･ｨ逡ｪ蜿ｷ縺ｧ繝倥ャ繝繧ｳ繝｡繝ｳ繝医′逡ｰ縺ｪ縺｣縺ｦ縺?縺ｾ縺吶?",
			"\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50003'),",
			"\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t'COLUMN16'",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN9_FLAG = '0') THEN",
			"\t\t\t\t\tIF (ls_LineNoCheck <> lrec_CSVUploadColumnData.COLUMN9) THEN",
			"\t\t\t\t\t\tls_LineNoCheck\t:= lrec_CSVUploadColumnData.COLUMN9;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50006') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50006',\t-- 蜷御ｼ晉･ｨ逡ｪ蜿ｷ繝?繝ｼ繧ｿ縺ｮ陦檎分蜿ｷ縺碁㍾隍?縺励※縺?縺ｾ縺吶?",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50006'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tln_LineNoRe\t\t\t\t:= ln_LineNoRe + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50001') > 0) THEN",
			"\t\t\t\tIF (ln_LineNoRe > CAST(ls_Config_EA016 AS NUMERIC)) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50001',",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '50001'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60021') > 0) THEN",
			"\t\t\tln_Count := 0;",
			"\t\t\tSELECT\tCOUNT(*)",
			"\t\t\tINTO\tln_Count",
			"\t\t\tFROM\tTMP_EA25_DENPHEADER_CHECK",
			"\t\t\tWHERE\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\tAND\t\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tTO_CHAR(COALESCE(DENPINSPECTDATE, '2000-01-01'), 'YYYY/MM/DD')\t= lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\tAND\t\tCSVDENPKIND\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\tAND\t\tCSVLINENO\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.CSVLINENO - 1;",
			"",
			"\t\t\t-- 蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ繝√ぉ繝?繧ｯ",
			"\t\t\tIF (CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC) > 1 AND ln_Count = 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60021',\t\t-- 蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ縺ｮ譏守ｴｰ繝?繝ｼ繧ｿ縺ｯ騾｣邯壹＠縺ｦ險倩ｼ峨＠縺ｦ縺上□縺輔＞縲?",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60021'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 蜿冶ｾｼ繝輔ぃ繧､繝ｫ縺ｮ蜷御ｸ莨晉･ｨ逡ｪ蜿ｷ繝√ぉ繝?繧ｯ逕ｨ縺ｫ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν縺ｫ繝?繝ｼ繧ｿ繧堤匳骭ｲ縺吶ｋ",
			"\t\tINSERT INTO TMP_EA25_DENPHEADER_CHECK (",
			"\t\t\tDENPNO,",
			"\t\t\tSTORE_CD,",
			"\t\t\tPARTNER_CD,",
			"\t\t\tDENPINSPECTDATE,",
			"\t\t\tCSVDENPKIND,",
			"\t\t\tCSVLINENO",
			"\t\t) VALUES (",
			"\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC),",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN7,",
			"\t\t\tlrec_CSVUploadColumnData.CSVLINENO",
			"\t\t);",
			"",
			"\t\t-- 繧ｨ繝ｩ繝ｼ縺後↑縺?蝣ｴ蜷医√ョ繝ｼ繧ｿ繧堤匳骭ｲ縺励∪縺?",
			"\t\tIF (ln_ErrorCount = 0) THEN",
			"\t\t\tIF (i_CheckType = '2') THEN",
			"\t\t\t\tSELECT\tSNAME,\t\t\t\t\t-- 蝠?蜩∫払蠑丞錐遘ｰ",
			"\t\t\t\t\t\tSTANDARDNAME\t\t\t-- 蝠?蜩∬ｦ乗?ｼ蜷咲ｧｰ",
			"\t\t\t\tINTO\tls_SkuName,",
			"\t\t\t\t\t\tls_StandardName",
			"\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\tIF (\tls_InspectDate\t\t<> lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\t\t\tOR\tls_Store_Cd\t\t\t<> lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\tOR\tls_Partner_Cd\t\t<> lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\t\tOR\tls_LogisticsCenter\t<> lrec_CSVUploadColumnData.COLUMN5",
			"\t\t\t\t\tOR\tls_DenpKindCsv\t\t<> lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\t\t\tOR\tln_Denpno\t\t\t<> CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\t\t\t) THEN",
			"",
			"\t\t\t\t\tln_LineNoRe\t\t\t:= 1;",
			"",
			"\t\t\t\t\tIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"\t\t\t\t\t\tln_SysDenpno\t:= NEXTVAL('SEQ_MOVESYSDENPNO');",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tln_SysDenpno\t:= NEXTVAL('SEQ_PURCHASESYSDENPNO');",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tls_InspectDate\t\t:= lrec_CSVUploadColumnData.COLUMN1;",
			"\t\t\t\t\tls_Store_Cd\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\tls_Partner_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\tls_LogisticsCenter\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\t\tls_DenpKindCsv\t\t:= lrec_CSVUploadColumnData.COLUMN7;",
			"\t\t\t\t\tln_Denpno\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\tls_UserDenpkind\t\t:= PXC_EA25_001.f_GetUserDenpKind(ls_DenpKind);",
			"\t\t\t\t\tls_UserDenptype\t\t:= PXC_EA25_001.f_GetUserDenpType(ls_DenpType, ls_DenpKind);",
			"\t\t\t\t\tls_Company_Cd\t\t:= PXC_EA25_001.f_GetCompany_Cd(ls_Store_Cd);",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tln_LineNoRe\t\t\t\t:= ln_LineNoRe + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tSELECT\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD",
			"\t\t\t\tINTO\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_ParentClass1_Cd,",
			"\t\t\t\t\t\tls_AttributeClass1_Cd,",
			"\t\t\t\t\t\tls_ParentClass2_Cd,",
			"\t\t\t\t\t\tls_AttributeClass2_Cd,",
			"\t\t\t\t\t\tls_ParentClass3_Cd,",
			"\t\t\t\t\t\tls_AttributeClass3_Cd,",
			"\t\t\t\t\t\tls_ParentClass4_Cd,",
			"\t\t\t\t\t\tls_AttributeClass4_Cd,",
			"\t\t\t\t\t\tls_ParentClass5_Cd,",
			"\t\t\t\t\t\tls_AttributeClass5_Cd",
			"\t\t\t\tFROM\tPXS_UTILITY.f_GetAttributeClassByItemStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\tld_InspectDateCheck",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_LineNoRe = 1) THEN",
			"\t\t\t\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPINSPECTDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD\t\t:= ln_SystemMode_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPNO\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.COMPANY_CD\t\t\t:= ls_Company_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.STORE_CD\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARTNER_CD\t\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD\t\t:= ls_PayPartner_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND\t\t\t\t:= ls_DenpKind;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPTYPE\t\t\t:= ls_UserDenptype;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ITEMATTRIBUTETYPE\t:= COALESCE(ls_ItemAttributeType, '001');",
			"",
			"\t\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t\t:= COALESCE(lrec_ReturnHeader.FLOOR_CD, '');",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= lrec_ReturnHeader.RETURNDETAILTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t\t:= NULL;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_ReturnHeader.LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\t\t\t\tSELECT\tSUM(GNKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(BIKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(CASEQTY),",
			"\t\t\t\t\t\t\t\t\tSUM(SINGLEQTY)",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO = lrec_ReturnHeader.SYSDENPNO;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)-- 遞守紫",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t\t:= COALESCE(lrec_OrderHeader.FLOOR_CD, '');",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERMETHOD\t\t\t:= lrec_OrderHeader.ORDERTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYNO\t\t\t:= lrec_OrderHeader.DELIVERYNO;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= lrec_OrderHeader.DISTRIBUTIONTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_OrderHeader.LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\t\t\t\tIF (ls_DenpKind = '10') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_OrderHeader.REDECORATION_CD;",
			"",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_DeliveryStore.REDECORATION_CD;",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tSELECT\tSUM(GNKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(BIKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(CASEQTY),",
			"\t\t\t\t\t\t\t\t\tSUM(SINGLEQTY)",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO = lrec_OrderHeader.SYSDENPNO;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= ls_LogisticsCenterCheck;",
			"",
			"\t\t\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tIF (COALESCE(lrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD, '000000') = '000000') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= '1';",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= '3';",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\t\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_DeliveryStore.REDECORATION_CD;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t-- 莉｣陦ｨ蛻?鬘?",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.CLASSTYPE\t\t\t\t\t:= COALESCE(ls_Config_00201, '');",
			"",
			"\t\t\t\t\t\tCASE (lrec_UtrPurchaseDenpHeader.CLASSTYPE)",
			"\t\t\t\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass1_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass1_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass2_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass2_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass3_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass3_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass4_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass4_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass5_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass5_Cd;",
			"",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass2_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass2_Cd;",
			"\t\t\t\t\t\tEND CASE;",
			"",
			"\t\t\t\t\t\tSELECT\tCASE TRADETYPE",
			"\t\t\t\t\t\t\t\t\tWHEN '2' THEN '2'",
			"\t\t\t\t\t\t\t\t\tELSE '1'",
			"\t\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TRADETYPE",
			"\t\t\t\t\t\tFROM\tUMF_PARTNER",
			"\t\t\t\t\t\tWHERE\tPARTNER_CD\t= lrec_UtrPurchaseDenpHeader.PARTNER_CD",
			"\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORGSYSDENPNO\t\t\t:= ln_SysDenpno;",
			"",
			"\t\t\t\t\t\tSELECT\tPAYDATE,",
			"\t\t\t\t\t\t\t\tDELIMITDATE",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.PAYSCHDATE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.APCLOSINGDATE",
			"\t\t\t\t\t\tFROM\tPXS_UTILITY.f_GetAccountPayDate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t'0'",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.NOTES\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN16;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYDELAYDATE\t\t\t\t:= TO_DATE('2000/01/01', 'YYYY/MM/DD');",
			"",
			"\t\t\t\t\t\t-- 逋ｺ豕ｨ螳溽ｸｾ縺ｮ讀懷庶譌･縺悟叙霎ｼ螳溯｡後?ｮ3縺区怦蜑阪→縺ｪ縺｣縺ｦ縺励∪縺?縺ｾ縺吶ゆｻ募?･莨晉･ｨ縺ｫ險ｭ螳壹＠縺滓､懷庶譌･繧定ｨｭ螳壹＠縺ｦ縺上□縺輔＞縲?",
			"\t\t\t\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN7 <> '2' AND CURRENT_DATE - '3 MONTH'::INTERVAL > lrec_OrderHeader.INSPECTDATE) THEN",
			"\t\t\t\t\t\t\tUPDATE\tTMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\tSET\t\tINSPECTDATE\t\t= lrec_UtrPurchaseDenpHeader.INSPECTDATE",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_OrderHeader.SYSDENPNO;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_DENPHEADER (",
			"\t\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\t\tNOTES",
			"\t\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.INSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPINSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.COMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.STORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.RBFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.PARENTCLASS_CD, ''),",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD, ''),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.CLASSTYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.TAXTYPE, ''),",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.TAXRATE, 0),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORGSYSDENPNO,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.PAYSCHDATE, TO_DATE('2000/01/01', 'YYYY/MM/DD')),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYDELAYDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.APCLOSINGDATE, TO_DATE('2000/01/01', 'YYYY/MM/DD')),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD,",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALQTY",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALEXCLUDETAXGNK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALPARTNERGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKDISCOUNTKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALPROFITGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALBIKKNGK",
			"\t\t\t\t\t\t\t'0',\t\t\t\t\t\t-- CONTRACTTYPE",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERMETHOD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.NOTES",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPKIND\t\t:= ls_DenpKind;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPTYPE\t\t:= ls_DenpType;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPNO\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPKIND\t:= PXC_EA25_001.f_GetUserDenpKind(lrec_UtrMoveDenpHeader.PURCHASEDENPKIND);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPTYPE\t:= PXC_EA25_001.f_GetUserDenpType(lrec_UtrMoveDenpHeader.PURCHASEDENPTYPE, lrec_UtrMoveDenpHeader.PURCHASEDENPKIND);",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tln_MoveDenpno\t\t\t\t\t\t\t\t:= NEXTVAL('SEQ_MOVEDENPNO');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPNO\t\t\t\t:= ln_MoveDenpno;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.EFFECTTYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVESTATUS\t\t\t:= 3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORGSYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVEINPUTTYPE\t\t:= 3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REGISTERDATE\t\t\t:= CURRENT_DATE;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPKIND\t\t\t\t:= '20';",
			"\t\t\t\t\t\tls_UserDenpkind\t\t\t\t\t\t\t\t:= PXC_EA25_001.f_GetUserDenpKind(lrec_UtrMoveDenpHeader.DENPKIND);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"",
			"\t\t\t\t\t\tIF (ls_DenpKind IN ('10', '11')) THEN",
			"\t\t\t\t\t\t\tls_DenpType\t\t\t\t\t\t\t\t:= '11';",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD\t\t:= ls_ChangeStore_Cd;",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind IN ('12', '13', '14', '15')) THEN",
			"\t\t\t\t\t\t\tls_DenpType\t\t\t\t\t\t\t\t:= '21';",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPTYPE\t\t\t:= PXC_EA25_001.f_GetUserDenpType(ls_DenpType, lrec_UtrMoveDenpHeader.DENPKIND);",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INCOMPANY_CD\t\t\t:= PXC_EA25_001.f_GetCompany_Cd(lrec_UtrMoveDenpHeader.INSTORE_CD);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTCOMPANY_CD\t\t:= PXC_EA25_001.f_GetCompany_Cd(lrec_UtrMoveDenpHeader.OUTSTORE_CD);",
			"\t\t\t\t\t\tls_OutStore_Cd\t\t\t\t\t\t\t\t:= lrec_UtrMoveDenpHeader.OUTSTORE_CD;",
			"\t\t\t\t\t\tls_InStore_Cd\t\t\t\t\t\t\t\t:= lrec_UtrMoveDenpHeader.INSTORE_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INPLANDATE\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTOPERATOR_CD\t\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INOPERATOR_CD\t\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTOPERATOR_CD\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTOPERATOR_CD\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSTATUS\t\t:= 1;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSTATUS\t\t:= 1;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSEQNO\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSEQNO\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTTYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.HTINSTOREDATAFLAG\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REVERSETYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESSEQNO\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESQTY\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESNO\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PARTNER_CD\t\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.NOTES\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN16;",
			"\t\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= lrec_ReturnHeader.DENPNO;",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= lrec_OrderHeader.DENPNO;",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN10 AS NUMERIC);",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_MOVEDENPHEADER (",
			"\t\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\t\tNOTES",
			"\t\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.SYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.RBFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.EFFECTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVESTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORGSYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVEINPUTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REGISTERDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTCOMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INCOMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INPLANDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.HTINSTOREDATAFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REVERSETYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESQTY,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.NOTES",
			"\t\t\t\t\t\t);",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LINENO\t\t\t\t:= fx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9);",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPINSPECTDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSTEMMODE_CD\t\t:= ln_SystemMode_Cd;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPNO\t\t\t\t:= ln_Denpno;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STORE_CD\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND\t\t\t\t:= ls_DenpKind;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPTYPE\t\t\t:= ls_UserDenptype;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKU_CD\t\t\t\t:= ls_Sku_Cd;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ITEMATTRIBUTETYPE\t:= COALESCE(ls_ItemAttributeType, '001');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS1_CD\t\t:= COALESCE(ls_ParentClass1_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS1_CD\t:= COALESCE(ls_AttributeClass1_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS2_CD\t\t:= COALESCE(ls_ParentClass2_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS2_CD\t:= COALESCE(ls_AttributeClass2_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS3_CD\t\t:= COALESCE(ls_ParentClass3_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS3_CD\t:= COALESCE(ls_AttributeClass3_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS4_CD\t\t:= COALESCE(ls_ParentClass4_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS4_CD\t:= COALESCE(ls_AttributeClass4_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS5_CD\t\t:= COALESCE(ls_ParentClass5_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS5_CD\t:= COALESCE(ls_AttributeClass5_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC);",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\tSELECT\tCASEQTY,",
			"\t\t\t\t\t\t\t\tSINGLEQTY,",
			"\t\t\t\t\t\t\t\tLOTQTY,",
			"\t\t\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\t\t\tREQOPERATOR_CD,",
			"\t\t\t\t\t\t\t\tNULL",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.REASON_CD",
			"\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNDETAIL",
			"\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t-- LINENO",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tSELECT\tCASEQTY,",
			"\t\t\t\t\t\t\t\tSINGLEQTY,",
			"\t\t\t\t\t\t\t\tLOTQTY,",
			"\t\t\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\t\t\tREQOPERATOR_CD",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD",
			"\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERDETAIL",
			"\t\t\t\t\t\t\tVALUES(",
			"\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t\t-- LINENO",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t\t\t-- DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE\t:= 1;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKUSNAME\t\t\t\t\t\t:= ls_SkuName;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STANDARDNAME\t\t\t\t\t:= ls_StandardName;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNKKNGK\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BIKKNGK\t\t\t\t\t\t:= lrec_UtrPurchaseDenpDetail.BITNK * lrec_UtrPurchaseDenpDetail.QTY;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNTNK\t\t\t\t\t\t:= o_PurchaseGnkBik.GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKKNGK\t\t\t\t\t\t:= o_PurchaseGnkBik.GNKKNGK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKTAXKNGK\t\t\t\t\t:= o_PurchaseGnkBik.GNKTAXKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.EXCLUDETAXGNK\t\t\t\t:= o_PurchaseGnkBik.EXCLUDETAXGNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTTNK\t\t\t\t:= o_PurchaseGnkBik.GNKDISCOUNTTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTKNGK\t\t\t\t:= o_PurchaseGnkBik.GNKDISCOUNTKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PROFITGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKTYPE\t\t\t\t:= o_PurchaseGnkBik.PROFITGNKTYPE;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.WHOLESALEGNTNK\t\t\t\t:= o_PurchaseGnkBik.WHOLESALEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKKNGK\t\t\t\t:= o_PurchaseGnkBik.PROFITGNKKNGK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET1GNTNK\t\t\t\t\t:= o_PurchaseGnkBik.NET1GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET2GNTNK\t\t\t\t\t:= o_PurchaseGnkBik.NET2GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MASTERORDERGNTNK\t\t\t\t:= o_PurchaseGnkBik.MASTERORDERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.POSGNTNK\t\t\t\t\t\t:= o_PurchaseGnkBik.POSGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANWHOLESALEGNTNK\t\t\t:= o_PurchaseGnkBik.PLANWHOLESALEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET1GNTNK\t\t\t\t:= o_PurchaseGnkBik.PLANNET1GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET2GNTNK\t\t\t\t:= o_PurchaseGnkBik.PLANNET2GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANMASTERORDERGNTNK\t\t\t:= o_PurchaseGnkBik.PLANMASTERORDERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANPOSGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PLANPOSGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MAKERNETGNTNK\t\t\t\t:= o_PurchaseGnkBik.MAKERNETGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QUOTEGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.QUOTEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLAN_CD\t\t\t\t\t\t:= NULL;",
			"",
			"\t\t\t\t\tln_InsCount\t\t\t\t\t\t\t\t\t\t\t\t:= ln_InsCount + 1;",
			"",
			"\t\t\t\t\tINSERT INTO TMP_EA25_DENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO",
			"\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LINENO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.INSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPINSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSTEMMODE_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STORE_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.RBFLAG,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.TAXTYPE, ''),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.TAXRATE, 0),",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKU_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKUSNAME,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STANDARDNAME,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.EXCLUDETAXGNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKTAXKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.PROFITGNTNK, 0),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.PROFITGNKKNGK, 0),",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.WHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.POSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MAKERNETGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QUOTEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BITNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PRICECHGKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NOTES,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.REASON_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.IDNUMBER,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GROSSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GROSSLINENO",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\tELSIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SYSDENPNO\t\t:= ln_SysDenpno;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.LINENO\t\t\t:= ln_LineNoRe;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPNO\t\t\t:= ln_MoveDenpno;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND\t\t\t:= lrec_UtrMoveDenpHeader.DENPKIND;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPKIND\t\t:= lrec_UtrMoveDenpHeader.USERDENPKIND;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE\t\t\t:= lrec_UtrMoveDenpHeader.DENPTYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPTYPE\t\t:= lrec_UtrMoveDenpHeader.USERDENPTYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.RBFLAG\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.EFFECTTYPE\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.MOVESTATUS\t\t:= 3;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD\t\t:= ls_OutStore_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD\t\t:= ls_InStore_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INSPECTDATE\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTDATE\t\t\t:= lrec_UtrMoveDenpHeader.OUTDATE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INDATE\t\t\t:= lrec_UtrMoveDenpHeader.INDATE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD\t\t\t:= ls_Sku_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SKUSNAME\t\t\t:= ls_SkuName;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.STANDARDNAME\t\t:= ls_StandardName;",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t),\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\t\t\t\tBITNK",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tln_OrderBitnk",
			"\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNDETAIL",
			"\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t-- LINENO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t),\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\t\t\t\tBITNK",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tln_OrderBitnk",
			"\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERDETAIL",
			"\t\t\t\t\t\t\tVALUES(",
			"\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t\t-- LINENO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)\t\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 遞主玄蛻?",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 遞守紫",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE",
			"\t\t\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\t\t\tWHERE\tSKU_CD\t\t= lrec_UtrMoveDenpDetail.SKU_CD",
			"\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t-- 蛻?鬘槭さ繝ｼ繝峨′蜿門ｾ励〒縺阪↑縺?蝣ｴ蜷医?ｮ縲√ぞ繝ｭ蝓九ａ譯∵焚繧貞叙蠕?",
			"\t\t\t\t\tSELECT\tSYSTEMMODE_CD",
			"\t\t\t\t\tINTO\tln_OutSystemMode_Cd",
			"\t\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\t\tWHERE\tSTORE_CD\t= lrec_UtrMoveDenpDetail.OUTSTORE_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tls_Out_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\t\t\t\tSELECT\tSYSTEMMODE_CD",
			"\t\t\t\t\tINTO\tln_InSystemMode_Cd",
			"\t\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\t\tWHERE\tSTORE_CD\t= lrec_UtrMoveDenpDetail.INSTORE_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tlrec_MasterItemOut\t\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS1_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS2_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS3_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS4_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS5_CD",
			"\t\t\t\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tls_In_CLASS1_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS2_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS3_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS4_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS5_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\t\t\t\tlrec_MasterItemIn\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS1_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS2_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS3_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS4_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS5_CD",
			"\t\t\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTITEMATTRIBUTETYPE\t\t:= lrec_MasterItemOut.ITEMATTRIBUTETYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS1_CD\t\t:= lrec_MasterItemOut.PARENTCLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS1_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS2_CD\t\t:= lrec_MasterItemOut.PARENTCLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS2_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS3_CD\t\t:= lrec_MasterItemOut.PARENTCLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS3_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS4_CD\t\t:= lrec_MasterItemOut.PARENTCLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS4_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS5_CD\t\t:= lrec_MasterItemOut.PARENTCLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS5_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INITEMATTRIBUTETYPE\t\t:= lrec_MasterItemIn.ITEMATTRIBUTETYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS1_CD\t\t:= lrec_MasterItemIn.PARENTCLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS1_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS2_CD\t\t:= lrec_MasterItemIn.PARENTCLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS2_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS3_CD\t\t:= lrec_MasterItemIn.PARENTCLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS3_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS4_CD\t\t:= lrec_MasterItemIn.PARENTCLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS4_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS5_CD\t\t:= lrec_MasterItemIn.PARENTCLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS5_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTQTY\t\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC);",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INQTY\t\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTQTY;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPOSGNTNK\t\t\t\t:= lrec_MasterItemOut.POSGNTNK_HIS;",
			"",
			"\t\t\t\t\tSELECT\tGNTNKSELECTTYPE",
			"\t\t\t\t\tINTO\tls_GntnktType",
			"\t\t\t\t\tFROM\tUMF_COMPANY",
			"\t\t\t\t\tWHERE\tCOMPANY_CD\t= lrec_UtrMoveDenpHeader.OUTCOMPANY_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\t\tls_GntnktType := '1';",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNTNK := COALESCE(lrec_MasterItemOut.GNTNK, 0);",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNKKNGK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTGNTNK * lrec_UtrMoveDenpDetail.OUTQTY;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTWHOLESALEGNTNK\t\t:= lrec_MasterItemOut.WHOLESALEGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET1GNTNK\t\t\t\t:= lrec_MasterItemOut.NET1GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET2GNTNK\t\t\t\t:= lrec_MasterItemOut.NET2GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTMASTERORDERGNTNK\t\t:= lrec_MasterItemOut.ORDERGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPOSGNTNK\t\t\t\t:= lrec_MasterItemIn.POSGNTNK_HIS;",
			"",
			"\t\t\t\t\tIF (lrec_UtrMoveDenpHeader.OUTCOMPANY_CD = lrec_UtrMoveDenpHeader.INCOMPANY_CD) THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTGNTNK;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK\t\t\t\t:= lrec_MasterItemIn.GNTNK;",
			"",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNKKNGK\t\t\t\t:= lrec_UtrMoveDenpDetail.INGNTNK * lrec_UtrMoveDenpDetail.INQTY;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INWHOLESALEGNTNK\t\t\t:= lrec_MasterItemIn.WHOLESALEGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET1GNTNK\t\t\t\t:= lrec_MasterItemIn.NET1GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET2GNTNK\t\t\t\t:= lrec_MasterItemIn.NET2GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INMASTERORDERGNTNK\t\t:= lrec_MasterItemIn.ORDERGNTNK1;",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK\t\t\t\t\t:= lrec_MasterItemOut.BITNK;",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK\t\t\t\t\t:= ln_OrderBitnk;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBIKKNGK\t\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTBITNK * lrec_UtrMoveDenpDetail.OUTQTY;",
			"",
			"\t\t\t\t\t-- Config HA014 遘ｻ蜍募?･蠎ｫ螢ｲ萓｡驥鷹｡阪?ｮ謗｡逕ｨ譁ｹ豕包ｼ?1:蜈･蠎ｫ螢ｲ萓｡縲?2:蜃ｺ蠎ｫ螢ｲ萓｡?ｼ?",
			"\t\t\t\t\tIF (ls_Config_HA014 = '2') THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTBITNK;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= ln_OrderBitnk;",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= lrec_MasterItemIn.BITNK;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INBIKKNGK\t\t\t\t:= ROUND(lrec_UtrMoveDenpDetail.INQTY * lrec_UtrMoveDenpDetail.INBITNK, 0);",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTLOSSQTY\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INLOSSQTY\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.HTINSTOREDATAFLAG\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKFLAG\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKDATE\t\t\t:= TO_DATE('2000/01/01', 'YYYY/MM/DD');",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN19;",
			"--\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES\t\t\t\t\t:= NULL;",
			"",
			"\t\t\t\t\tln_InsCount\t\t\t\t\t\t\t\t\t\t:= ln_InsCount + 1;",
			"",
			"\t\t\t\t\tINSERT INTO TMP_EA25_MOVEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG",
			"\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SYSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.LINENO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPNO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPKIND,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.RBFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.EFFECTTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.MOVESTATUS,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKUSNAME,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.STANDARDNAME,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTLOSSQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INLOSSQTY,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrMoveDenpDetail.TAXTYPE, ''),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrMoveDenpDetail.TAXRATE, 0),",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.HTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTOREITEMCOPYFLAG",
			"\t\t\t\t\t);",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCount\t:= 0;",
			"\tEND LOOP;",
			"",
			"\tIF (i_CheckType = '2') THEN",
			"",
			"\t\tUPDATE\tTMP_EA25_DENPHEADER T1",
			"\t\tSET\t\tTOTALQTY\t\t\t\t= TMP_DETAIL.SUM_QTY,",
			"\t\t\t\tTOTALGNKKNGK\t\t\t= TMP_DETAIL.SUM_GNKKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK\t\t= TMP_DETAIL.SUM_PARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK\t= TMP_DETAIL.SUM_GNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK\t\t= TMP_DETAIL.SUM_PROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK\t\t\t= TMP_DETAIL.SUM_BIKKNGK",
			"\t\tFROM\t(",
			"\t\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\t\tSUM(QTY)\t\t\t\tAS SUM_QTY,",
			"\t\t\t\t\t\t\tSUM(GNKKNGK)\t\t\tAS SUM_GNKKNGK,",
			"\t\t\t\t\t\t\tSUM(PARTNERGNKKNGK)\t\tAS SUM_PARTNERGNKKNGK,",
			"\t\t\t\t\t\t\tSUM(GNKDISCOUNTKNGK)\tAS SUM_GNKDISCOUNTKNGK,",
			"\t\t\t\t\t\t\tSUM(PROFITGNKKNGK)\t\tAS SUM_PROFITGNKKNGK,",
			"\t\t\t\t\t\t\tSUM(BIKKNGK)\t\t\tAS SUM_BIKKNGK",
			"\t\t\t\t\tFROM\tTMP_EA25_DENPDETAIL",
			"\t\t\t\t\tGROUP BY SYSDENPNO",
			"\t\t\t\t) TMP_DETAIL",
			"\t\tWHERE\tT1.SYSDENPNO\t= TMP_DETAIL.SYSDENPNO;",
			"",
			"\t\t-- 譏守ｴｰ縺ｮ蜴滉ｾ｡豸郁ｲｻ遞朱｡榊粋險医ｒ邂怜?ｺ",
			"\t\tINSERT INTO TMP_EA25_HEADERTAXCAL",
			"\t\t\tSELECT\tTMP.SYSDENPNO,",
			"\t\t\t\t\tCASE TMP.TAXTYPE",
			"\t\t\t\t\t\tWHEN '2' THEN --蜀?遞?",
			"\t\t\t\t\t\t\tCASE ls_EA021_IncludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tWHEN '1' THEN -- 螟也ｨ?",
			"\t\t\t\t\t\t\tCASE ls_EA020_ExcludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tELSE 0 -- 髱櫁ｪｲ遞?",
			"\t\t\t\t\tEND, -- TOTALGNKTAXKNGK",
			"\t\t\t\t\tCASE TMP.TAXTYPE",
			"\t\t\t\t\t\tWHEN '2' THEN --蜀?遞?",
			"\t\t\t\t\t\t\tCASE ls_EA021_IncludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKKNGK - TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE TMP.TOTALGNKKNGK - PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tELSE TMP.TOTALGNKKNGK -- 螟也ｨ?, 髱櫁ｪｲ遞?",
			"\t\t\t\t\tEND -- TOTALEXCLUDETAXGNK",
			"\t\t\tFROM\t(",
			"\t\t\t\t\t\tSELECT\tT1.SYSDENPNO,",
			"\t\t\t\t\t\t\t\tT1.PARTNER_CD,",
			"\t\t\t\t\t\t\t\tT2.TAXTYPE,",
			"\t\t\t\t\t\t\t\tT2.TAXRATE,",
			"\t\t\t\t\t\t\t\tSUM(T2.GNKKNGK)\t\tAS TOTALGNKKNGK,",
			"\t\t\t\t\t\t\t\tSUM(T2.GNKTAXKNGK)\tAS TOTALGNKTAXKNGK",
			"\t\t\t\t\t\tFROM\tTMP_EA25_DENPHEADER T1",
			"\t\t\t\t\t\t\t\tINNER JOIN TMP_EA25_DENPDETAIL T2",
			"\t\t\t\t\t\t\t\t\tON\tT1.SYSDENPNO = T2.SYSDENPNO",
			"\t\t\t\t\t\tGROUP BY T1.SYSDENPNO, T1.PARTNER_CD, T2.TAXTYPE, T2.TAXRATE",
			"\t\t\t\t\t) TMP",
			"\t\t\t\t\tINNER JOIN UMF_PARTNER T3",
			"\t\t\t\t\t\tON\tT3.PARTNER_CD\t\t= TMP.PARTNER_CD",
			"\t\t\t\t\t\tAND\tT3.VALIDFLAG\t\t= '1'",
			"\t\t\t\t\tINNER JOIN UMF_PAYPARTNER T4",
			"\t\t\t\t\t\tON\tT4.PAYPARTNER_CD\t= T3.PAYPARTNER_CD",
			"\t\t\t\t\t\tAND\tT4.VALIDFLAG\t\t= '1';",
			"",
			"\t\t-- 譏守ｴｰ縺ｮ蜴滉ｾ｡豸郁ｲｻ遞朱｡榊粋險医ｒ繝倥ャ繝縺ｫ繧ｻ繝?繝?",
			"\t\tUPDATE\tTMP_EA25_DENPHEADER T1",
			"\t\tSET\t\tTOTALEXCLUDETAXGNK\t= TMP_TAXCAL.SUM_TOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK\t\t= TMP_TAXCAL.SUM_TOTALGNKTAXKNGK",
			"\t\tFROM\t(",
			"\t\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\t\tSUM(TOTALEXCLUDETAXGNK)\tAS SUM_TOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\t\tSUM(TOTALGNKTAXKNGK)\tAS SUM_TOTALGNKTAXKNGK",
			"\t\t\t\t\tFROM\tTMP_EA25_HEADERTAXCAL",
			"\t\t\t\t\tGROUP BY SYSDENPNO",
			"\t\t\t\t) TMP_TAXCAL",
			"\t\tWHERE\tT1.SYSDENPNO = TMP_TAXCAL.SYSDENPNO;",
			"\tEND IF;",
			"",
			"\t-- 譁ｰ隕冗匳骭ｲ繝ｻ譖ｴ譁ｰ逋ｻ骭ｲ莉ｶ謨ｰ譖ｴ譁ｰ",
			"\tPERFORM PXS_FILEUPLOAD.p_SetCSVUploadObserverUpdQty (",
			"\t\t\t\ti_User_Cd,",
			"\t\t\t\ti_Server_Cd,",
			"\t\t\t\ti_ImportBatchKey,",
			"\t\t\t\ti_CheckType,",
			"\t\t\t\tln_InsCount,",
			"\t\t\t\tln_UpdCount",
			"\t\t\t);",
			"END;",
			"$$ LANGUAGE 'plpgsql';",
			"",
			"RESET CLIENT_ENCODING;",
			"\n"
		],
		"description": "CSV Import Check Pattern"
	},
	"CSV Entry Pattern": {
		"prefix": "csventrypattern",
		"body": [
			"\n",
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"/*",
			"\t[繧ｵ繝匁ｩ溯?ｽ  ] EA.莉募?･",
			"\t[讖溯?ｽ?ｼｩ?ｼ､  ] EA25",
			"\t[讖溯?ｽ蜷咲ｧｰ  ] 莉募?･莨晉･ｨ蜿冶ｾｼ",
			"\t[繝ｪ繝薙ず繝ｧ繝ｳ] 1",
			"\t[髢｢謨ｰ蜷?    ] p_CSVEntry",
			"\t[菴? 謌? 譌･  ] 2022/08/30",
			"\t[菴? 謌? 閠?  ] UNICCS/d-vu",
			"\t[譖ｴ譁ｰ螻･豁ｴ  ] 2023/06/12 UNICCS/d-vu",
			"\t\t\t\t\t繧､繝ｳ繝懊う繧ｹ蟇ｾ蠢懶ｼ夊ｿ泌刀縺ｮ逋ｻ骭ｲ繝ｻ譖ｴ譁ｰ譎ゅ∝渕蜿門ｼ募ｹｴ譛域律繧堤匳骭ｲ繝ｻ譖ｴ譁ｰ縺吶ｋ繧医≧縺ｫ螟画峩",
			"\t\t\t\t\t霑泌刀縺ｮ遞守紫縺ｯ蝓ｺ蜿門ｼ募ｹｴ譛域律譎らせ縺ｮ遞守紫繧貞叙蠕励☆繧九ｈ縺?縺ｫ螟画峩",
			"\t\t\t\t\t蝓ｺ蜿門ｼ募ｹｴ譛域律縺ｯ縲￣XS_UTILITY.f_GetPurchaseGnkBik蜀?縺ｧ邂怜?ｺ縺励◆蛟､繧単URCHASEINFO1縺ｨ縺励※謌ｻ縺輔ｌ繧?",
			"\t\t\t\t\t窶ｻ蝓ｺ蜿門ｼ募ｹｴ譛域律縺ｮ邂怜?ｺ蠑擾ｼ壻ｼ晉･ｨ譌･莉假ｼ咲匱豕ｨ蜈医?槭せ繧ｿ.霑泌刀遞主､画峩邨碁℃譛域焚",
			"*/",
			"",
			"CREATE OR REPLACE FUNCTION PXC_EA25_001.p_CSVEntry (",
			"\ti_Server_Cd\t\t\tIN\tUWK_CSVUPLOADCOLUMNDATA.SERVER_CD%TYPE,",
			"\ti_ImportBatchKey\tIN\tUWK_CSVUPLOADCOLUMNDATA.IMPORTBATCHKEY%TYPE,",
			"\ti_CSVUploadType\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVUPLOADTYPE%TYPE,",
			"\ti_StartCSVLineNo\tIN\tUWK_CSVUPLOADCOLUMNDATA.CSVLINENO%TYPE,",
			"\ti_CommitRowCount\tIN\tNUMERIC,",
			"\ti_SyoriFlag\t\t\tIN\tVARCHAR\t\t-- 1:逋ｻ骭ｲ蜃ｦ逅? 2:蜑企勁蜃ｦ逅?",
			") RETURNS VOID AS $$",
			"/*",
			"$START",
			"$FUNCTION\\1",
			"\t莉募?･莨晉･ｨ蜿冶ｾｼ縺ｮ譖ｴ譁ｰ蜃ｦ逅?",
			"$PAR\\1",
			"\t繧ｵ繝ｼ繝舌?ｼ繧ｳ繝ｼ繝?",
			"$PAR\\2",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繝舌ャ繝√く繝ｼ",
			"$PAR\\3",
			"\t?ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ繧ｿ繧､繝暦ｼ?1?ｼ夊ｿｽ蜉??ｼ丈ｸ頑嶌縺阪?2?ｼ夂ｷ丞?･譖ｿ縲?3?ｼ壼炎髯､?ｼ?",
			"$PAR\\4",
			"\t髢句ｧ具ｼ｣?ｼｳ?ｼｶ蜿冶ｾｼ陦檎分蜿ｷ",
			"$PAR\\5",
			"\t繧ｳ繝溘ャ繝郁｡梧焚",
			"$PAR\\6",
			"\t蜃ｦ逅?繝輔Λ繧ｰ?ｼ?1:逋ｻ骭ｲ蜃ｦ逅?縲?2:蜑企勁蜃ｦ逅??ｼ?",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/",
			"DECLARE",
			"\t-- 繝ｬ繧ｳ繝ｼ繝峨→繧ｫ繝ｼ繧ｽ繝ｫ螳夂ｾｩ",
			"\tlrec_UserInfo\t\tRECORD;",
			"BEGIN",
			"\t-- 繧ｳ繝溘ャ繝井ｻｶ謨ｰ譛ｪ蟇ｾ蠢懊?ｮ縺溘ａ縲?2蝗樒岼莉･髯阪?ｮ螳溯｡後〒縺ｯ菴輔ｂ縺励↑縺?縲?",
			"\tIF (i_StartCSVLineNo <> 1) THEN",
			"\t\tRETURN;",
			"\tEND IF;",
			"",
			"\tlrec_UserInfo\t\t:= PXS_USER.p_GetUserInfo();",
			"",
			"\tIF (i_SyoriFlag = '1') THEN",
			"\t\t-- 笆?逋ｻ骭ｲ蜃ｦ逅?",
			"\t\tCASE (i_CSVUploadType)",
			"\t\t\t-- 霑ｽ蜉?/荳頑嶌縺?",
			"\t\t\tWHEN ('1') THEN",
			"\t\t\t\t-- 莉募?･",
			"\t\t\t\t-- 繝倥ャ繝",
			"\t\t\t\t-- 譖ｴ譁ｰ逕ｨ繝?繝ｳ繝昴Λ繝ｪ繝?繝ｼ繝悶Ν?ｼ亥渕譛ｬ?ｼ?",
			"\t\t\t\tINSERT INTO UTR_PURCHASEDENPHEADER (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_DENPHEADER HEADER",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_PURCHASEDENPHEADER TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_PURCHASEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO,",
			"\t\t\t\t\t\tPURCHASEINFO1,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO,",
			"\t\t\t\t\t\tPURCHASEINFO1,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_DENPDETAIL DETAIL",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_PURCHASEDENPDETAIL TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_MOVEDENPHEADER (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_MOVEDENPHEADER HEADER",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_MOVEDENPHEADER TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_MOVEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG,",
			"\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG,",
			"\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_MOVEDENPDETAIL DETAIL",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_MOVEDENPDETAIL TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tUPDATE\tUTR_ORDERHEADER HEADER",
			"\t\t\t\tSET\t\tDELIVERYDECISIONFLAG\t= TMP.DELIVERYDECISIONFLAG,",
			"\t\t\t\t\t\tINSPECTDATE\t\t\t\t= TMP.INSPECTDATE,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_ORDERHEADER TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO;",
			"",
			"\t\t\t\tUPDATE\tUTR_RETURNHEADER HEADER",
			"\t\t\t\tSET\t\tDELIVERYDECISIONFLAG\t= TMP.DELIVERYDECISIONFLAG,",
			"\t\t\t\t\t\tINSPECTDATE\t\t\t\t= TMP.INSPECTDATE,",
			"\t\t\t\t\t\tRSVDATE1\t\t\t\t= TMP.RSVDATE1,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_RETURNHEADER TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= HEADER.SYSDENPNO;",
			"",
			"\t\t\t\tUPDATE\tUTR_ORDERDETAIL DETAIL",
			"\t\t\t\tSET\t\tDELIVERYQTY\t\t\t\t= TMP.DELIVERYQTY,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_ORDERDETAIL TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO;",
			"",
			"\t\t\t\tUPDATE\tUTR_RETURNDETAIL DETAIL",
			"\t\t\t\tSET\t\tDELIVERYQTY\t\t\t\t= TMP.DELIVERYQTY,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_RETURNDETAIL TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO;",
			"",
			"\t\t\t-- 邱丞?･譖ｿ",
			"\t\t\tWHEN ('2') THEN",
			"\t\t\t\t-- 菴輔ｂ縺励↑縺?縲?",
			"\t\t\t\tNULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tNULL;",
			"\t\tEND CASE;",
			"",
			"\tELSIF (i_SyoriFlag = '2') THEN",
			"\t\t-- 笆?蜑企勁蜃ｦ逅?",
			"\t\tCASE (i_CSVUploadType)",
			"\t\t\t-- 邱丞?･譖ｿ逕ｨ縺ｮ蜑企勁",
			"\t\t\tWHEN ('2') THEN",
			"\t\t\t\t-- 菴輔ｂ縺励↑縺?縲?",
			"\t\t\t\tNULL;",
			"",
			"\t\t\t-- 蜑企勁",
			"\t\t\tWHEN ('3') THEN",
			"\t\t\t\t-- 菴輔ｂ縺励↑縺?縲?",
			"\t\t\t\tNULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tNULL;",
			"\t\tEND CASE;",
			"\tEND IF;",
			"",
			"END;",
			"$$ LANGUAGE 'plpgsql';",
			"",
			"RESET CLIENT_ENCODING;",
			"\n"
		],
		"description": "CSV Entry Pattern"
	},
	"Defined create table pattern": {
		"prefix": "create_table_pattern",
		"body": [
			"\n",
			"CREATE TABLE utr_returnheader (",
			"    sysdenpno\t\t\t\t\t\tnumeric(14,0) NOT NULL,",
			"    denpno\t\t\t\t\t\t\tnumeric(9,0) NOT NULL,",
			"    denpkind\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenpkind\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    denptype\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenptype\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    store_cd\t\t\t\t\t\tcharacter varying(10) NOT NULL,",
			"    floor_cd\t\t\t\t\t\tcharacter varying(5),",
			"    returndate\t\t\t\t\t\tdate NOT NULL,",
			"    deliverydate\t\t\t\t\tdate NOT NULL,",
			"    partner_cd\t\t\t\t\t\tcharacter varying(6) NOT NULL,",
			"    itemattributetype\t\t\t\tcharacter varying(3) NOT NULL,",
			"    classtype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    parentclass_cd\t\t\t\t\tcharacter varying(5) NOT NULL,",
			"    attributeclass_cd\t\t\t\tcharacter varying(5) NOT NULL,",
			"    taxtype\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    tax_cd\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscentertype\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscenter_cd\t\t\t\tcharacter varying(6),",
			"    partnerdistributionmaster_cd\tcharacter varying(6),",
			"    partnerlayouttype\t\t\t\tcharacter varying(2),",
			"    directtransfer\t\t\t\t\tcharacter varying(6),",
			"    temporarytransfer\t\t\t\tcharacter varying(6),",
			"    logisticsdistributionmaster_cd\tcharacter varying(6),",
			"    logisticslayouttype\t\t\t\tcharacter varying(2),",
			"    businessname\t\t\t\t\tcharacter varying(2),",
			"    eosmaketype\t\t\t\t\t\tcharacter varying(2),",
			"    instore_cd\t\t\t\t\t\tcharacter varying(10),",
			"    inclass_cd\t\t\t\t\t\tcharacter varying(5),",
			"    grosstype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributionstatus\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributiondatetime\t\t\ttimestamp(6) without time zone,",
			"    deliveryplanflag\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    deliveryplandate\t\t\t\tdate,",
			"    deliverydecisionflag\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    inspectdate\t\t\t\t\t\tdate,",
			"    printdatetime\t\t\t\t\ttimestamp(6) without time zone,",
			"    partneroperator\t\t\t\t\tcharacter varying(40),",
			"    partneradmitdate\t\t\t\tdate,",
			"    classoperator\t\t\t\t\tcharacter varying(40),",
			"    classadmitdate\t\t\t\t\tdate,",
			"    returndetailtype\t\t\t\tcharacter varying(5),",
			"    reason1\t\t\t\t\t\t\tcharacter varying(10),",
			"    reason2\t\t\t\t\t\t\tcharacter varying(10),",
			"    returndenpmaketype\t\t\t\tcharacter varying(1),",
			"    totaldeliveryqty\t\t\t\tnumeric(7,1) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnkkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnktaxkngk\t\t\t\t\tnumeric(11,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalbikkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    notes\t\t\t\t\t\t\tcharacter varying(200),",
			"    returntype\t\t\t\t\t\tcharacter varying(2) DEFAULT '00'::character varying NOT NULL,",
			"    pendingtype\t\t\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying NOT NULL,",
			"    rsvchar1\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar2\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar3\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar4\t\t\t\t\t\tcharacter varying(10),",
			"    rsvnum1\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum2\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum3\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum4\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvdate1\t\t\t\t\t\tdate,",
			"    rsvdatetime1\t\t\t\t\ttimestamp(6) without time zone,",
			"    addoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    adddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    addproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    updoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    upddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    updproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    CONSTRAINT pk_utrreturnheader PRIMARY KEY (sysdenpno)",
			");",
			"",
			"COMMENT ON TABLE utr_returnheader IS '縲占ｿ泌刀縲題ｿ泌刀螳溽ｸｾ繝倥ャ繝縺ｧ縺吶?';",
			"",
			"COMMENT ON COLUMN utr_returnheader.sysdenpno IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ逡ｪ蜿ｷ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.denpno IS '霑泌刀莨晉･ｨ逡ｪ蜿ｷ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.denpkind IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ遞ｮ鬘槭〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.userdenpkind IS '繝ｦ繝ｼ繧ｶ莨晉･ｨ遞ｮ鬘槭〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.denptype IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.userdenptype IS '繝ｦ繝ｼ繧ｶ莨晉･ｨ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.store_cd IS '蠎苓?励さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.floor_cd IS '繝輔Ο繧｢繧ｳ繝ｼ繝峨〒縺吶よ悴謖?螳壽凾縺ｾ縺溘?ｯ繝輔Ο繧｢邂｡逅?縺励※縺?縺ｪ縺?蝣ｴ蜷医?ｯ蠎苓?励さ繝ｼ繝峨→蜷後§蛟､縺悟?･繧翫∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.returndate IS '霑泌刀譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.deliverydate IS '邏榊刀譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.partner_cd IS '逋ｺ豕ｨ蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.itemattributetype IS '蝠?蜩∝ｱ樊ｧ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.classtype IS '蝠?蜩∝??鬘樣嚴螻､蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.parentclass_cd IS '莉｣陦ｨ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.attributeclass_cd IS '螻樊ｧ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.taxtype IS '遞主玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.tax_cd IS '遞守紫繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.logisticscentertype IS '迚ｩ豬√そ繝ｳ繧ｿ繝ｼ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.logisticscenter_cd IS '迚ｩ豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶ょｺ礼峩縺ｮ蝣ｴ蜷医?ｯNULL縺檎匳骭ｲ縺輔ｌ縺ｦ縺?縺ｾ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.partnerdistributionmaster_cd IS '蜿門ｼ募?亥髄縺鷹?堺ｿ｡繝槭せ繧ｿ繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.partnerlayouttype IS '蜿門ｼ募?亥髄縺鷹?堺ｿ｡繝輔ぃ繧､繝ｫ縺ｮ繝ｬ繧､繧｢繧ｦ繝亥玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.directtransfer IS '逶ｴ謗･騾∽ｿ｡蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.temporarytransfer IS '荳譎る?堺ｿ｡蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.logisticsdistributionmaster_cd IS '迚ｩ豬∝髄縺鷹?堺ｿ｡繝槭せ繧ｿ繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.logisticslayouttype IS '迚ｩ豬∝髄縺鷹?堺ｿ｡繝輔ぃ繧､繝ｫ縺ｮ繝ｬ繧､繧｢繧ｦ繝亥玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.businessname IS '蝟ｶ讌ｭ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.eosmaketype IS '驟堺ｿ｡菴懈?仙玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.instore_cd IS '蜈･蠎ｫ蠎苓?励さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.inclass_cd IS '蜈･蠎ｫ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.grosstype IS '邱城㍼蛹ｺ蛻?縺ｧ縺吶ゑｼ?0:蠎怜挨 1:邱城㍼?ｼ?';",
			"COMMENT ON COLUMN utr_returnheader.distributionstatus IS '驟堺ｿ｡繧ｹ繝?繝ｼ繧ｿ繧ｹ縺ｧ縺吶ゑｼ?0:譛ｪ驟堺ｿ｡縲?1:驟堺ｿ｡貂茨ｼ?';",
			"COMMENT ON COLUMN utr_returnheader.distributiondatetime IS '驟堺ｿ｡譎ょ綾縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.deliveryplanflag IS '邏榊刀莠亥ｮ壹ヵ繝ｩ繧ｰ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.deliveryplandate IS '邏榊刀莠亥ｮ壽律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.deliverydecisionflag IS '邏榊刀遒ｺ螳壽律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.inspectdate IS '莨晉･ｨ險井ｸ頑律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.printdatetime IS '蜊ｰ蛻ｷ譌･譎ゅ〒縺吶よ悴蜊ｰ蛻ｷ繝?繝ｼ繧ｿ縺ｯNULL縺瑚ｨｭ螳壹＆繧後∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.partneroperator IS '逋ｺ豕ｨ蜈域球蠖楢?縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.partneradmitdate IS '逋ｺ豕ｨ蜈域球蠖楢?縺ｮ莠?謇ｿ譌･縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.classoperator IS '驛ｨ髢諡?蠖楢?蜷阪〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.classadmitdate IS '驛ｨ髢諡?蠖楢?縺ｮ莠?謇ｿ譌･縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.returndetailtype IS '霑泌刀譁ｹ蠑丞玄蛻?縺ｧ縺吶ゅ1:逶ｴ謗･霑泌刀縲2:邱城㍼霑泌刀縲3:騾夐℃霑泌刀縲';",
			"COMMENT ON COLUMN utr_returnheader.reason1 IS '霑泌刀逅?逕ｱ?ｼ代〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.reason2 IS '霑泌刀逅?逕ｱ?ｼ偵〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.returndenpmaketype IS '霑泌刀螳溽ｸｾ菴懈?仙玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.totaldeliveryqty IS '邏榊刀謨ｰ蜷郁ｨ医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.totalgnkkngk IS '霑泌刀驥鷹｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.totalgnktaxkngk IS '蜴滉ｾ｡豸郁ｲｻ遞朱｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.totalbikkngk IS '螢ｲ萓｡驥鷹｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.notes IS '繝倥ャ繝繧ｳ繝｡繝ｳ繝医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.returntype IS '霑泌刀蛹ｺ蛻?縺ｧ縺吶?00:霑泌刀縲?03:蟒?譽?';",
			"COMMENT ON COLUMN utr_returnheader.pendingtype IS '菫晉蕗蛹ｺ蛻?縺ｧ縺吶ゆｸ蠎ｦ縲∬ｿ泌刀菫晉蕗縺ｫ縺ｪ縺｣縺溘°縺ｩ縺?縺九〒縺吶?0:縺ｪ縺励?1:菫晉蕗';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar1 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar2 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ偵〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar3 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ薙〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar4 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ斐〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum1 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum2 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ偵〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum3 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ薙〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum4 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ斐〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvdate1 IS '蝓ｺ蜿門ｼ募ｹｴ譛域律縺ｧ縺吶ら匱豕ｨ蜈医?槭せ繧ｿ縺ｮ霑泌刀遞主､画峩邨碁℃譛域焚繧医ｊ蝓ｺ蜿門ｼ募ｹｴ譛域律繧堤ｮ怜?ｺ縺励∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.rsvdatetime1 IS '譌･譎ゆｺ亥ｙ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.addoperator_cd IS '譁ｰ隕丈ｽ懈?占?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.adddatetime IS '譁ｰ隕丈ｽ懈?先律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.addproc_cd IS '譁ｰ隕丈ｽ懈?仙?ｦ逅?繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.updoperator_cd IS '譛邨よ峩譁ｰ閠?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.upddatetime IS '譛邨よ峩譁ｰ譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheader.updproc_cd IS '譛邨よ峩譁ｰ蜃ｦ逅?繧ｳ繝ｼ繝峨〒縺吶?';",
			"",
			"CREATE INDEX ix1_utrreturnheader ON utr_returnheader USING btree (denpno);",
			"CREATE INDEX ix2_utrreturnheader ON utr_returnheader USING btree (store_cd);",
			"CREATE INDEX ix3_utrreturnheader ON utr_returnheader USING btree (partner_cd);",
			"CREATE INDEX ix4_utrreturnheader ON utr_returnheader USING btree (returndate, userdenptype);",
			"\n"
		],
		"description": "Defined create table pattern"
	},
	"Defined create table log pattern": {
		"prefix": "create_table_log",
		"body": [
			"\n",
			"CREATE TABLE utr_returnheaderlog (",
			"    log_id\t\t\t\t\t\t\tcharacter varying(36) not null,",
			"    logdatetime\t\t\t\t\t\ttimestamp without time zone not null,",
			"    logoperator_cd\t\t\t\t\tcharacter varying(20) not null,",
			"    logtype\t\t\t\t\t\t\tcharacter varying(1) not null,",
			"    sysdenpno\t\t\t\t\t\tnumeric(14,0) NOT NULL,",
			"    denpno\t\t\t\t\t\t\tnumeric(9,0) NOT NULL,",
			"    denpkind\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenpkind\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    denptype\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenptype\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    store_cd\t\t\t\t\t\tcharacter varying(10) NOT NULL,",
			"    floor_cd\t\t\t\t\t\tcharacter varying(5),",
			"    returndate\t\t\t\t\t\tdate NOT NULL,",
			"    deliverydate\t\t\t\t\tdate NOT NULL,",
			"    partner_cd\t\t\t\t\t\tcharacter varying(6) NOT NULL,",
			"    itemattributetype\t\t\t\tcharacter varying(3) NOT NULL,",
			"    classtype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    parentclass_cd\t\t\t\t\tcharacter varying(5) NOT NULL,",
			"    attributeclass_cd\t\t\t\tcharacter varying(5) NOT NULL,",
			"    taxtype\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    tax_cd\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscentertype\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscenter_cd\t\t\t\tcharacter varying(6),",
			"    partnerdistributionmaster_cd\tcharacter varying(6),",
			"    partnerlayouttype\t\t\t\tcharacter varying(2),",
			"    directtransfer\t\t\t\t\tcharacter varying(6),",
			"    temporarytransfer\t\t\t\tcharacter varying(6),",
			"    logisticsdistributionmaster_cd\tcharacter varying(6),",
			"    logisticslayouttype\t\t\t\tcharacter varying(2),",
			"    businessname\t\t\t\t\tcharacter varying(2),",
			"    eosmaketype\t\t\t\t\t\tcharacter varying(2),",
			"    instore_cd\t\t\t\t\t\tcharacter varying(10),",
			"    inclass_cd\t\t\t\t\t\tcharacter varying(5),",
			"    grosstype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributionstatus\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributiondatetime\t\t\ttimestamp(6) without time zone,",
			"    deliveryplanflag\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    deliveryplandate\t\t\t\tdate,",
			"    deliverydecisionflag\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    inspectdate\t\t\t\t\t\tdate,",
			"    printdatetime\t\t\t\t\ttimestamp(6) without time zone,",
			"    partneroperator\t\t\t\t\tcharacter varying(40),",
			"    partneradmitdate\t\t\t\tdate,",
			"    classoperator\t\t\t\t\tcharacter varying(40),",
			"    classadmitdate\t\t\t\t\tdate,",
			"    returndetailtype\t\t\t\tcharacter varying(5),",
			"    reason1\t\t\t\t\t\t\tcharacter varying(10),",
			"    reason2\t\t\t\t\t\t\tcharacter varying(10),",
			"    returndenpmaketype\t\t\t\tcharacter varying(1),",
			"    totaldeliveryqty\t\t\t\tnumeric(7,1) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnkkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnktaxkngk\t\t\t\t\tnumeric(11,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalbikkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    notes\t\t\t\t\t\t\tcharacter varying(200),",
			"    returntype\t\t\t\t\t\tcharacter varying(2) DEFAULT '00'::character varying NOT NULL,",
			"    pendingtype\t\t\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying NOT NULL,",
			"    rsvchar1\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar2\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar3\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar4\t\t\t\t\t\tcharacter varying(10),",
			"    rsvnum1\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum2\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum3\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum4\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvdate1\t\t\t\t\t\tdate,",
			"    rsvdatetime1\t\t\t\t\ttimestamp(6) without time zone,",
			"    addoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    adddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    addproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    updoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    upddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    updproc_cd\t\t\t\t\t\tcharacter varying(40)",
			");",
			"",
			"COMMENT ON TABLE utr_returnheaderlog IS '縲占ｿ泌刀縲題ｿ泌刀螳溽ｸｾ繝倥ャ繝繝ｭ繧ｰ縺ｧ縺吶?';",
			"",
			"COMMENT ON COLUMN utr_returnheaderlog.log_id IS '繝ｭ繧ｰ?ｼｩ?ｼ､縺ｧ縺吶５O_GUID縺ｧ逕滓?舌＆繧後◆譁?蟄怜?暦ｼ茨ｼ難ｼ悶ヰ繧､繝茨ｼ峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logdatetime IS '螟画峩繝ｭ繧ｰ譌･譎ゅ〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logoperator_cd IS '螟画峩繝ｭ繧ｰ諡?蠖楢?繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logtype IS '讓呎ｺ門､画峩繝ｭ繧ｰ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.sysdenpno IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ逡ｪ蜿ｷ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.denpno IS '霑泌刀莨晉･ｨ逡ｪ蜿ｷ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.denpkind IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ遞ｮ鬘槭〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.userdenpkind IS '繝ｦ繝ｼ繧ｶ莨晉･ｨ遞ｮ鬘槭〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.denptype IS '繧ｷ繧ｹ繝?繝?莨晉･ｨ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.userdenptype IS '繝ｦ繝ｼ繧ｶ莨晉･ｨ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.store_cd IS '蠎苓?励さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.floor_cd IS '繝輔Ο繧｢繧ｳ繝ｼ繝峨〒縺吶よ悴謖?螳壽凾縺ｾ縺溘?ｯ繝輔Ο繧｢邂｡逅?縺励※縺?縺ｪ縺?蝣ｴ蜷医?ｯ蠎苓?励さ繝ｼ繝峨→蜷後§蛟､縺悟?･繧翫∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndate IS '霑泌刀譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliverydate IS '邏榊刀譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.partner_cd IS '逋ｺ豕ｨ蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.itemattributetype IS '蝠?蜩∝ｱ樊ｧ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.classtype IS '蝠?蜩∝??鬘樣嚴螻､蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.parentclass_cd IS '莉｣陦ｨ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.attributeclass_cd IS '螻樊ｧ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.taxtype IS '遞主玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.tax_cd IS '遞守紫繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticscentertype IS '迚ｩ豬√そ繝ｳ繧ｿ繝ｼ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticscenter_cd IS '迚ｩ豬√そ繝ｳ繧ｿ繝ｼ繧ｳ繝ｼ繝峨〒縺吶ょｺ礼峩縺ｮ蝣ｴ蜷医?ｯNULL縺檎匳骭ｲ縺輔ｌ縺ｦ縺?縺ｾ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.partnerdistributionmaster_cd IS '蜿門ｼ募?亥髄縺鷹?堺ｿ｡繝槭せ繧ｿ繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.partnerlayouttype IS '蜿門ｼ募?亥髄縺鷹?堺ｿ｡繝輔ぃ繧､繝ｫ縺ｮ繝ｬ繧､繧｢繧ｦ繝亥玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.directtransfer IS '逶ｴ謗･騾∽ｿ｡蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.temporarytransfer IS '荳譎る?堺ｿ｡蜈医さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticsdistributionmaster_cd IS '迚ｩ豬∝髄縺鷹?堺ｿ｡繝槭せ繧ｿ繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticslayouttype IS '迚ｩ豬∝髄縺鷹?堺ｿ｡繝輔ぃ繧､繝ｫ縺ｮ繝ｬ繧､繧｢繧ｦ繝亥玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.businessname IS '蝟ｶ讌ｭ蛹ｺ蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.eosmaketype IS '驟堺ｿ｡菴懈?仙玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.instore_cd IS '蜈･蠎ｫ蠎苓?励さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.inclass_cd IS '蜈･蠎ｫ蛻?鬘槭さ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.grosstype IS '邱城㍼蛹ｺ蛻?縺ｧ縺吶ゑｼ?0:蠎怜挨 1:邱城㍼?ｼ?';",
			"COMMENT ON COLUMN utr_returnheaderlog.distributionstatus IS '驟堺ｿ｡繧ｹ繝?繝ｼ繧ｿ繧ｹ縺ｧ縺吶ゑｼ?0:譛ｪ驟堺ｿ｡縲?1:驟堺ｿ｡貂茨ｼ?';",
			"COMMENT ON COLUMN utr_returnheaderlog.distributiondatetime IS '驟堺ｿ｡譎ょ綾縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliveryplanflag IS '邏榊刀莠亥ｮ壹ヵ繝ｩ繧ｰ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliveryplandate IS '邏榊刀莠亥ｮ壽律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliverydecisionflag IS '邏榊刀遒ｺ螳壽律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.inspectdate IS '莨晉･ｨ險井ｸ頑律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.printdatetime IS '蜊ｰ蛻ｷ譌･譎ゅ〒縺吶よ悴蜊ｰ蛻ｷ繝?繝ｼ繧ｿ縺ｯNULL縺瑚ｨｭ螳壹＆繧後∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.partneroperator IS '逋ｺ豕ｨ蜈域球蠖楢?縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.partneradmitdate IS '逋ｺ豕ｨ蜈域球蠖楢?縺ｮ莠?謇ｿ譌･縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.classoperator IS '驛ｨ髢諡?蠖楢?蜷阪〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.classadmitdate IS '驛ｨ髢諡?蠖楢?縺ｮ莠?謇ｿ譌･縺ｧ縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndetailtype IS '霑泌刀譁ｹ蠑丞玄蛻?縺ｧ縺吶ゅ1:逶ｴ謗･霑泌刀縲2:邱城㍼霑泌刀縲3:騾夐℃霑泌刀縲';",
			"COMMENT ON COLUMN utr_returnheaderlog.reason1 IS '霑泌刀逅?逕ｱ?ｼ代〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.reason2 IS '霑泌刀逅?逕ｱ?ｼ偵〒縺吶りｿ泌刀莨晉･ｨ縺ｮ蜊ｰ蟄鈴??逶ｮ縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndenpmaketype IS '霑泌刀螳溽ｸｾ菴懈?仙玄蛻?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.totaldeliveryqty IS '邏榊刀謨ｰ蜷郁ｨ医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalgnkkngk IS '霑泌刀驥鷹｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalgnktaxkngk IS '蜴滉ｾ｡豸郁ｲｻ遞朱｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalbikkngk IS '螢ｲ萓｡驥鷹｡榊粋險医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.notes IS '繝倥ャ繝繧ｳ繝｡繝ｳ繝医〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.returntype IS '霑泌刀蛹ｺ蛻?縺ｧ縺吶?00:霑泌刀縲?03:蟒?譽?';",
			"COMMENT ON COLUMN utr_returnheaderlog.pendingtype IS '菫晉蕗蛹ｺ蛻?縺ｧ縺吶ゆｸ蠎ｦ縲∬ｿ泌刀菫晉蕗縺ｫ縺ｪ縺｣縺溘°縺ｩ縺?縺九〒縺吶?0:縺ｪ縺励?1:菫晉蕗';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar1 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar2 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ偵〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar3 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ薙〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar4 IS '譁?蟄怜?嶺ｺ亥ｙ鬆?逶ｮ?ｼ斐〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum1 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum2 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ偵〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum3 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ薙〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum4 IS '謨ｰ蛟､莠亥ｙ鬆?逶ｮ?ｼ斐〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvdate1 IS '蝓ｺ蜿門ｼ募ｹｴ譛域律縺ｧ縺吶ら匱豕ｨ蜈医?槭せ繧ｿ縺ｮ霑泌刀遞主､画峩邨碁℃譛域焚繧医ｊ蝓ｺ蜿門ｼ募ｹｴ譛域律繧堤ｮ怜?ｺ縺励∪縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvdatetime1 IS '譌･譎ゆｺ亥ｙ?ｼ代〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.addoperator_cd IS '譁ｰ隕丈ｽ懈?占?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.adddatetime IS '譁ｰ隕丈ｽ懈?先律縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.addproc_cd IS '譁ｰ隕丈ｽ懈?仙?ｦ逅?繧ｳ繝ｼ繝峨〒縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.updoperator_cd IS '譛邨よ峩譁ｰ閠?縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.upddatetime IS '譛邨よ峩譁ｰ譌･縺ｧ縺吶?';",
			"COMMENT ON COLUMN utr_returnheaderlog.updproc_cd IS '譛邨よ峩譁ｰ蜃ｦ逅?繧ｳ繝ｼ繝峨〒縺吶?';",
			"",
			"CREATE INDEX ix1_utrreturnheaderlog ON utr_returnheaderlog (log_id, logdatetime);",
			"CREATE INDEX ix2_utrreturnheaderlog ON utr_returnheaderlog (logdatetime, sysdenpno, logtype); -- 螟夜ΚIF繝√?ｼ繝?隕∵悍",
			"\n"
		],
		"description": "Defined create table pattern"
	},
	"Get purchase Gnk Bik": {
		"prefix": "getpurchasegnkbik",
		"body": [
			"",
			"CREATE OR REPLACE FUNCTION pxs_utility.f_getpurchasegnkbik(i_qty numeric, i_partnergntnk numeric, i_denpkind character varying, i_denptype character varying, i_partner_cd character varying, i_store_cd character varying, i_sku_cd character varying, i_inspectdate date, i_denpinspectdate date, i_partnergnkforceflag boolean, i_orderdenpno numeric DEFAULT NULL::numeric, i_lineno numeric DEFAULT NULL::numeric, i_orderdate date DEFAULT NULL::date, i_inputwholesalegntnk numeric DEFAULT NULL::numeric, i_syscom00011_parentcompany_cd character varying DEFAULT NULL::character varying, i_syscomd0007_plangnktype character varying DEFAULT NULL::character varying, i_syscomd0022_tokubaibiktype character varying DEFAULT NULL::character varying, i_syscomd0023_housihinbiktype character varying DEFAULT NULL::character varying, i_syscom00201_purchaseclasstype character varying DEFAULT NULL::character varying, i_costroundtype character varying DEFAULT NULL::character varying, i_eosordergntnktype character varying DEFAULT NULL::character varying, i_tegordergntnktype character varying DEFAULT NULL::character varying, i_partnercompany_cd character varying DEFAULT NULL::character varying, i_company_cd character varying DEFAULT NULL::character varying, i_ordercompany_cd character varying DEFAULT NULL::character varying, i_gntnkselecttype character varying DEFAULT NULL::character varying, i_taxtype character varying DEFAULT NULL::character varying, i_tax_cd character varying DEFAULT NULL::character varying, i_taxrate numeric DEFAULT NULL::numeric, i_orderdetailgntnk numeric DEFAULT NULL::numeric, i_orderdetailbitnk numeric DEFAULT NULL::numeric, i_partner_rsvnum1 numeric DEFAULT '-1'::integer, i_orderdetailwholesalegntnk numeric DEFAULT NULL::numeric)",
			" RETURNS type_purchasegnkbik",
			" LANGUAGE plpgsql",
			"AS $function$",
			"/*",
			"================================================================================",
			"[繧ｵ繝匁ｩ溯?ｽ  ] 蜈ｱ騾?",
			"[讖溯?ｽ?ｼｩ?ｼ､  ] 蜈ｱ騾?",
			"[讖溯?ｽ蜷咲ｧｰ  ] 繝ｦ繝ｼ繝?繧｣繝ｪ繝?繧｣繝代ャ繧ｱ繝ｼ繧ｸ",
			"[繝ｪ繝薙ず繝ｧ繝ｳ] 1",
			"[髢｢ 謨ｰ 蜷?  ] f_GetPurchaseGnkBik",
			"[菴? 謌? 譌･  ] 2022/06/07",
			"[菴? 謌? 閠?  ] UNICCS/j-nakakita",
			"[譖ｴ譁ｰ螻･豁ｴ  ]",
			"================================================================================",
			"$START",
			"$FUNCTION\\1",
			"\t莉募?･莨晉･ｨ縺ｮ蜴滉ｾ｡繝ｻ螢ｲ萓｡髢｢騾｣鬆?逶ｮ繧貞叙蠕励＠縺ｾ縺吶?",
			"$RETURN\\1",
			"\t莉募?･莨晉･ｨ蜴滉ｾ｡繝ｻ螢ｲ萓｡髢｢騾｣鬆?逶ｮ",
			"",
			"[蠢?鬆磯??逶ｮ]",
			"$PAR\\1",
			"\t謨ｰ驥?",
			"$PAR\\2",
			"\t蜿門ｼ募?井ｼ晉･ｨ蜴溷腰萓｡ 謖?螳壹〒縺阪↑縺?蝣ｴ蜷医?ｯNULL縺ｧ繧０K",
			"$PAR\\3",
			"\t莨晉･ｨ遞ｮ鬘? 10:EOS莉募?･縲?11:謇区嶌莉募?･縲?12:EOS霑泌刀縲?13:謇区嶌霑泌刀縲?14:EOS蛟､蠑輔?15:謇区嶌蛟､蠑?",
			"$PAR\\4",
			"\t莨晉･ｨ蛹ｺ蛻? UMF_DENPTYPE蜿ら?ｧ",
			"$PAR\\5",
			"\t逋ｺ豕ｨ蜈医さ繝ｼ繝?",
			"$PAR\\6",
			"\t蠎苓?励さ繝ｼ繝?",
			"$PAR\\7",
			"\t蝠?蜩√さ繝ｼ繝?",
			"$PAR\\8",
			"\t讀懷庶譌･",
			"$PAR\\9",
			"\t莨晉･ｨ讀懷庶譌･",
			"$PAR\\10",
			"\t蜿門ｼ募?亥次萓｡蠑ｷ蛻ｶ謗｡逕ｨ繝輔Λ繧ｰ",
			"\tTRUE縺ｮ蝣ｴ蜷医√ｂ繧阪ｂ繧阪?ｮ險育ｮ励ｒ縺吶∋縺ｦ辟｡隕悶＠縺ｦ蜿門ｼ募?亥次萓｡繧呈治逕ｨ縺吶ｋ縲よ焔譖ｸ莉募?･莨晉･ｨ蜈･蜉帷判髱｢縺ｧ縲悟､蠑輔↑縺励阪ｒ驕ｸ謚槭＠縺溷?ｴ蜷医↑縺ｩ繧呈Φ螳壹?",
			"$PAR\\11",
			"\t逋ｺ豕ｨ逡ｪ蜿ｷ?ｼ?EOS縺ｧ縺ｪ縺代ｌ縺ｰNULL縺ｧOK?ｼ?",
			"$PAR\\12",
			"\t陦檎分蜿ｷ?ｼ?EOS縺ｧ縺ｪ縺代ｌ縺ｰNULL縺ｧOK?ｼ?",
			"$PAR\\13",
			"\t逋ｺ豕ｨ譌･?ｼ?EOS縺ｧ縺ｪ縺代ｌ縺ｰNULL縺ｧOK?ｼ?",
			"",
			"[莉ｻ諢城??逶ｮ]",
			"$PAR\\14",
			"\t莉｣陦ｨ莨夂､ｾ繧ｳ繝ｼ繝?(繧ｷ繧ｹ繧ｳ繝?00011)",
			"$PAR\\15",
			"\t螂我ｻ募刀繝ｻ迚ｹ螢ｲ陬懷??縺ｮ蜴滉ｾ｡繧医ｊ螳夂分蜴滉ｾ｡縺ｮ譁ｹ縺悟ｮ我ｾ｡縺ｮ譎ゅ?ｮ繝槭せ繧ｿ謗｡逕ｨ蜀?螳ｹ(繧ｷ繧ｹ繧ｳ繝?D0007) 1:螳夂分縲?2:莨∫判",
			"$PAR\\16",
			"\t迚ｹ螢ｲ莨∫判驕ｩ逕ｨ譎ゅ?ｮ螢ｲ蜊倅ｾ｡(繧ｷ繧ｹ繧ｳ繝?D0022) 01:螳夂分螢ｲ萓｡縲?02:蜴溷腰萓｡縺ｨ蜷御ｸ莨∫判縺ｮ螢ｲ蜊倅ｾ｡",
			"$PAR\\17",
			"\t螂我ｻ募刀莨∫判驕ｩ逕ｨ譎ゅ?ｮ螢ｲ蜊倅ｾ｡(繧ｷ繧ｹ繧ｳ繝?D0023) 01:螳夂分螢ｲ萓｡縲?02:蜴溷腰萓｡縺ｨ蜷御ｸ莨∫判縺ｮ螢ｲ蜊倅ｾ｡",
			"$PAR\\18",
			"\t遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻? 1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡",
			"$PAR\\19",
			"\t邏榊刀EDI蜊倅ｾ｡謗｡逕ｨ蛹ｺ蛻?(EOS莉募?･) 1:逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜊倅ｾ｡ 2:EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡ 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"$PAR\\20",
			"\t邏榊刀EDI蜊倅ｾ｡謗｡逕ｨ蛹ｺ蛻?(謇区嶌莉募?･) :EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡ 2:邏榊刀譌･譎らせ縺ｮ蝠?蜩√?槭せ繧ｿ縺ｮ蜊倅ｾ｡ 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"$PAR\\21",
			"\t螂醍ｴ?莨夂､ｾ繧ｳ繝ｼ繝会ｼ育匱豕ｨ蜈医?槭せ繧ｿ?ｼ?",
			"$PAR\\22",
			"\t莨夂､ｾ繧ｳ繝ｼ繝?",
			"$PAR\\23",
			"\t蝠?蜩∬ｪｿ驕比ｼ夂､ｾ繧ｳ繝ｼ繝?",
			"$PAR\\24",
			"\t蜴滉ｾ｡謗｡逕ｨ蛹ｺ蛻? 1:蟆ゆｼ昜ｾ｡縲?2:蟄蝉ｼ夂､ｾ蜊ｸ萓｡縲?3:FC蜊ｸ萓｡",
			"$PAR\\25",
			"\t遞主玄蛻? 1:螟也ｨ弱?2:蜀?遞弱?3:髱櫁ｪｲ遞?",
			"$PAR\\26",
			"\t遞守紫繧ｳ繝ｼ繝?",
			"$PAR\\27",
			"\t遞守紫",
			"$PAR\\28",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜴溷腰萓｡",
			"$PAR\\29",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ螢ｲ蜊倅ｾ｡",
			"$PAR\\30",
			"\t逋ｺ豕ｨ蜈医?槭せ繧ｿ縺ｮ謨ｰ蛟､莠亥ｙ?ｼ?",
			"\t蝓ｺ蜿門ｼ募ｹｴ譛域律縺御ｼ晉･ｨ譌･莉倥?ｮ?ｼｮ繝ｶ譛亥燕縺具ｼ溘ｒ險ｭ螳壹?",
			"$PAR\\31",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜊ｸ蜴溷腰萓｡",
			"$END",
			"*/",
			"DECLARE",
			"\to_PurchaseGnkBik\t\t\t\t\tTYPE_PURCHASEGNKBIK;",
			"",
			"\tln_OrderDenpNo\t\t\t\t\t\tUTR_ORDERDETAIL.DENPNO%TYPE;",
			"\tln_LineNo\t\t\t\t\t\t\tUTR_ORDERDETAIL.LINENO%TYPE;",
			"\tld_OrderDate\t\t\t\t\t\tUTR_ORDERDETAIL.ORDERDATE%TYPE;",
			"\tls_Syscom00011_ParentCompany_Cd\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_SyscomD0007_PlanGnkType\t\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_SyscomD0022_TokubaiBikType\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_SyscomD0023_HousihinBikType\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_CostRoundType\t\t\t\t\tUMF_PARTNER.COSTROUNDTYPE%TYPE;",
			"\tls_EOSOrderGntnkType\t\t\t\tUMF_PARTNER.EOSORDERGNTNKTYPE%TYPE;",
			"\tls_TegOrderGnTnkType\t\t\t\tUMF_PARTNER.TEGORDERGNTNKTYPE%TYPE;",
			"\tls_PartnerCompany_Cd\t\t\t\tUMF_PARTNER.COMPANY_CD%TYPE;",
			"\tls_Company_Cd\t\t\t\t\t\tUMF_STORE.COMPANY_CD%TYPE;",
			"\tls_OrderCompany_Cd\t\t\t\t\tUMF_STORE.ORDERCOMPANY_CD%TYPE;",
			"\tls_GntnkSelectType\t\t\t\t\tUMF_COMPANY.GNTNKSELECTTYPE%TYPE;",
			"\tls_TaxType\t\t\t\t\t\t\tUMF_ITEM.TAXTYPE%TYPE;",
			"\tls_Tax_Cd\t\t\t\t\t\t\tUMF_ITEM.TAX_CD%TYPE;",
			"\tln_TaxRate\t\t\t\t\t\t\tUMF_TAX.TAXRATE%TYPE;",
			"\tln_OrderDetailGnTnk\t\t\t\t\tUTR_ORDERDETAIL.GNTNK%TYPE;",
			"\tln_OrderDetailBiTnk\t\t\t\t\tUTR_ORDERDETAIL.BITNK%TYPE;",
			"\tln_MasterGntnk\t\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_MasterBitnk\t\t\t\t\t\tUMF_ITEMSTORE.BITNK1%TYPE;",
			"\tln_WholeSaleGntnk\t\t\t\t\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tlb_IsWholeSaleGntnkFromPlan\t\t\tBOOLEAN;",
			"",
			"\tln_ItemMasterGntnk\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_ItemPOSGntnk\t\t\t\t\t\tUMF_ITEMSTORE.POSGNTNK1%TYPE;",
			"\tln_ItemWholeSaleGntnk\t\t\t\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tln_ItemNet1Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET1GNTNK1%TYPE;",
			"\tln_ItemNet2Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET2GNTNK1%TYPE;",
			"\tln_ItemBitnk\t\t\t\t\t\tUMF_ITEMSTORE.BITNK1%TYPE;",
			"\tls_ItemStore_Partner_Cd\t\t\t\tUMF_ITEMSTORE.PARTNER_CD%TYPE;",
			"\tls_Plan_Cd\t\t\t\t\t\t\tUMF_PLAN.PLAN_CD%TYPE;",
			"\tln_PlanMasterGntnk\t\t\t\t\tUMF_PLANSTOREITEM.ORDERGNTNK1%TYPE;",
			"\tln_PlanPOSGntnk\t\t\t\t\t\tUMF_PLANSTOREITEM.POSGNTNK1%TYPE;",
			"\tln_PlanWholeSaleGntnk\t\t\t\tUMF_PLANSTOREITEM.WHOLESALEGNTNK1%TYPE;",
			"\tln_PlanNet1Gntnk\t\t\t\t\tUMF_PLANSTOREITEM.NET1GNTNK1%TYPE;",
			"\tln_PlanNet2Gntnk\t\t\t\t\tUMF_PLANSTOREITEM.NET2GNTNK1%TYPE;",
			"\tln_PlanBitnk\t\t\t\t\t\tUMF_PLANSTOREITEM.BITNK1%TYPE;",
			"\tls_PlanType\t\t\t\t\t\t\tUMF_PLAN.PLANTYPE%TYPE;",
			"\tls_OrderGntnk_StFlg\t\t\t\t\tUMF_PLANSTOREITEM.ORDERGNTNK_STFLG%TYPE;",
			"\tls_POSGntnk_StFlg\t\t\t\t\tUMF_PLANSTOREITEM.POSGNTNK_STFLG%TYPE;",
			"\tls_Net1Gntnk_StFlg\t\t\t\t\tUMF_PLANSTOREITEM.NET1GNTNK_STFLG%TYPE;",
			"\tls_Net2Gntnk_StFlg\t\t\t\t\tUMF_PLANSTOREITEM.NET2GNTNK_STFLG%TYPE;",
			"\tls_WholeSaleGntnk_StFlg\t\t\t\tUMF_PLANSTOREITEM.WHOLESALEGNTNK_STFLG%TYPE;",
			"\tls_Bitnk_StFlg\t\t\t\t\t\tUMF_PLANSTOREITEM.BITNK_STFLG%TYPE;",
			"\tlb_IsMasterGntnkFromPlan\t\t\tBOOLEAN;",
			"\tls_EosPosFlag\t\t\t\t\t\tUMF_PLANSTOREITEM.EOSPOSFLAG%TYPE;",
			"",
			"\tln_WholeSaleGntnk_Teiban\t\t\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tlb_NoMasterGnkFlag\t\t\t\t\tBOOLEAN = FALSE;",
			"\tln_Count\t\t\t\t\t\t\tINTEGER;",
			"\tls_InstoreType\t\t\t\t\t\tUMF_INSTOREITEM.INSTORETYPE%TYPE;",
			"\tls_Syscom00201_PurchaseClassType\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_GntnkType\t\t\t\t\t\tUMF_ITEMSTORE.GNTNKTYPE%TYPE;",
			"",
			"\tln_QuoteGntnk\t\t\t\t\t\tUMF_ITEMGNTNKPATTERN.QUOTEGNTNK1%TYPE;",
			"\tln_MakerNetGntnk\t\t\t\t\tUMF_ITEMGNTNKPATTERN.MAKERNETGNTNK1%TYPE;",
			"",
			"\tlrec_UserInfo\t\t\t\t\t\tRECORD;",
			"",
			"\tls_OrderTaxType\t\t\t\t\t\tUMF_ITEM.TAXTYPE%TYPE;",
			"\tls_OrderTax_Cd\t\t\t\t\t\tUMF_ITEM.TAX_CD%TYPE;",
			"",
			"\tln_Partner_RsvNum1\t\t\t\t\tUMF_PARTNER.RSVNUM1%TYPE;",
			"\tld_TaxBaseDate\t\t\t\t\t\tDATE;",
			"\tls_PurchaseInfo1\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PURCHASEINFO1%TYPE;",
			"",
			"\tls_PartnerType\t\t\t\t\t\tUMF_PARTNER.PARTNERTYPE%TYPE;",
			"\tls_ChangeStore_Cd\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tln_OrderDetailWholeSaleGnTnk\t\tUTR_ORDERDETAIL.WHOLESALEGNTNK%TYPE;",
			"\tls_OrderDetailPartner_Cd\t\t\tUTR_ORDERDETAIL.PARTNER_CD%TYPE;",
			"\tln_MoveOutItemBitnk\t\t\t\t\tUMF_ITEMSTORE.BITNK1%TYPE;",
			"\tlb_MoveOutFlag\t\t\t\t\t\tBOOLEAN;",
			"BEGIN",
			"\tlrec_UserInfo := PXS_USER.p_GetUserInfo();",
			"",
			"\tIF (i_Syscom00011_ParentCompany_Cd IS NOT NULL) THEN",
			"\t\tls_Syscom00011_ParentCompany_Cd := i_Syscom00011_ParentCompany_Cd;",
			"\tELSE",
			"\t\tls_Syscom00011_ParentCompany_Cd := PXS_UTILITY.f_GetSystemConfig (",
			"\t\t\tNULL,\t\t\t\t\t\t\t-- i_User_Cd",
			"\t\t\tlrec_UserInfo.SYSTEMMODE_CD,\t-- i_SystemMode_Cd",
			"\t\t\t'00011'\t\t\t\t\t\t\t-- i_Code",
			"\t\t);",
			"\tEND IF;",
			"",
			"\tIF (i_Syscom00201_PurchaseClassType IS NOT NULL) THEN",
			"\t\tls_Syscom00201_PurchaseClassType := i_Syscom00201_PurchaseClassType;",
			"\tELSE",
			"\t\tls_Syscom00201_PurchaseClassType := PXS_UTILITY.f_GetSystemConfig (",
			"\t\t\tNULL,\t\t\t\t\t\t\t-- i_User_Cd",
			"\t\t\tlrec_UserInfo.SYSTEMMODE_CD,\t-- i_SystemMode_Cd",
			"\t\t\t'00201'\t\t\t\t\t\t\t-- i_Code",
			"\t\t);",
			"\tEND IF;",
			"",
			"\tIF (",
			"\t\ti_CostRoundType\t\tIS NOT NULL AND",
			"\t\ti_EOSOrderGntnkType\tIS NOT NULL AND",
			"\t\ti_TegOrderGnTnkType\tIS NOT NULL AND",
			"\t\ti_PartnerCompany_Cd\tIS NOT NULL AND",
			"\t\ti_Partner_RsvNum1\t<> -1",
			"\t) THEN",
			"\t\tls_CostRoundType := i_CostRoundType;",
			"\t\tls_EOSOrderGntnkType := i_EOSOrderGntnkType;",
			"\t\tls_TegOrderGnTnkType := i_TegOrderGnTnkType;",
			"\t\tls_PartnerCompany_Cd := i_PartnerCompany_Cd;",
			"\t\tln_Partner_RsvNum1 := COALESCE(i_Partner_RsvNum1, 0);",
			"\tELSE",
			"\t\tSELECT\tCOSTROUNDTYPE,\t\tEOSORDERGNTNKTYPE,\t\tTEGORDERGNTNKTYPE,\t\tCOMPANY_CD,\t\t\t\tCOALESCE(RSVNUM1, 0) -- 驕取ｸ｡譛溷ｯｾ蠢懊〒縲∵悴險ｭ螳壽凾縺ｯ莨晉･ｨ譌･莉倥?吶?ｼ繧ｹ縺ｧ遞守紫繧貞叙蠕励☆繧九ｈ縺?縲?0繝ｶ譛亥燕繧呈欠螳壹?",
			"\t\tINTO\tls_CostRoundType,\tls_EOSOrderGntnkType,\tls_TegOrderGnTnkType,\tls_PartnerCompany_Cd,\tln_Partner_RsvNum1",
			"\t\tFROM\tUMF_PARTNER",
			"\t\tWHERE\tPARTNER_CD = i_Partner_Cd;",
			"\tEND IF;",
			"",
			"\tIF (",
			"\t\ti_Company_Cd\t\tIS NOT NULL AND",
			"\t\ti_OrderCompany_Cd\tIS NOT NULL",
			"\t) THEN",
			"\t\tls_Company_Cd := i_Company_Cd;",
			"\t\tls_OrderCompany_Cd := i_OrderCompany_Cd;",
			"\tELSE",
			"\t\tSELECT\tCOMPANY_CD,\t\tORDERCOMPANY_CD",
			"\t\tINTO\tls_Company_Cd,\tls_OrderCompany_Cd",
			"\t\tFROM\tUMF_STORE",
			"\t\tWHERE\tSTORE_CD = i_Store_Cd;",
			"\tEND IF;",
			"",
			"\tIF (i_GntnkSelectType IS NOT NULL) THEN",
			"\t\tls_GntnkSelectType := i_GntnkSelectType;",
			"\tELSE",
			"\t\tSELECT\tGNTNKSELECTTYPE",
			"\t\tINTO\tls_GntnkSelectType",
			"\t\tFROM\tUMF_COMPANY",
			"\t\tWHERE\tCOMPANY_CD = ls_Company_Cd;",
			"\tEND IF;",
			"",
			"\tIF (",
			"\t\ti_OrderDetailGnTnk IS NOT NULL AND",
			"\t\ti_OrderDetailBiTnk IS NOT NULL AND",
			"\t\ti_OrderDetailWholeSaleGnTnk IS NOT NULL",
			"\t) THEN",
			"\t\tln_OrderDetailGnTnk := i_OrderDetailGnTnk;",
			"\t\tln_OrderDetailBiTnk := i_OrderDetailBiTnk;",
			"\t\tln_OrderDetailWholeSaleGnTnk := i_OrderDetailWholeSaleGnTnk;",
			"\tELSE",
			"\t\tIF (i_DenpKind IN ('10', '14')) THEN -- 10:EOS莉募?･縲?14:EOS蛟､蠑?",
			"\t\t\tSELECT\tGNTNK,\t\t\t\t\tBITNK,\t\t\t\t\tTAXTYPE,\t\t\tTAX_CD,\t\t\tWHOLESALEGNTNK,\t\t\t\t\tPARTNER_CD",
			"\t\t\tINTO\tln_OrderDetailGnTnk,\tln_OrderDetailBiTnk,\tls_OrderTaxType,\tls_OrderTax_Cd,\tln_OrderDetailWholeSaleGnTnk,\tls_OrderDetailPartner_Cd",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tDENPNO\t\t= i_OrderDenpNo",
			"\t\t\tAND\t\tLINENO\t\t= i_LineNo",
			"\t\t\tAND\t\tORDERDATE\t= i_OrderDate;",
			"",
			"\t\t\t-- 笘?遘ｻ蜍募?ｺ蠎ｫ蠎玲ュ蝣ｱ蜿門ｾ励?ｮ蝣ｴ蜷医?ｮ迚ｹ蛻･繝ｭ繧ｸ繝?繧ｯ?ｼ医％縺ｮ蝣ｴ蜷医∝?ｺ蠎ｫ蠎励?ｮ螳夂分逋ｺ豕ｨ蜈医′譚･繧九?ｮ縺ｧ縲∫匱豕ｨ螳溽ｸｾ縺ｮ逋ｺ豕ｨ蜈医→縺ｯ荳閾ｴ縺励↑縺??ｼ?",
			"\t\t\tIF (i_Partner_Cd <> ls_OrderDetailPartner_Cd) THEN",
			"\t\t\t\tSELECT\tPARTNERTYPE,\tCHANGESTORE_CD",
			"\t\t\t\tINTO\tls_PartnerType,\tls_ChangeStore_Cd",
			"\t\t\t\tFROM\tUMF_PARTNER",
			"\t\t\t\tWHERE\tPARTNER_CD\t= ls_OrderDetailPartner_Cd;",
			"",
			"\t\t\t\tIF (ls_PartnerType = '11') THEN -- 11:譛ｬ驛ｨ蛟牙ｺｫ?ｼ?DC?ｼ?",
			"\t\t\t\t\tlb_MoveOutFlag = TRUE;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tELSIF (i_DenpKind = '12') THEN -- 12:EOS霑泌刀",
			"\t\t\tSELECT\tGNTNK,\t\t\t\t\tBITNK,\t\t\t\t\tTAXTYPE,\t\t\tTAX_CD",
			"\t\t\tINTO\tln_OrderDetailGnTnk,\tln_OrderDetailBiTnk,\tls_OrderTaxType,\tls_OrderTax_Cd",
			"\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\tWHERE\tDENPNO\t\t= i_OrderDenpNo",
			"\t\t\tAND\t\tLINENO\t\t= i_LineNo",
			"\t\t\t-- WMS霑泌刀讀懷刀螳溽ｸｾ縺瑚ｿ泌刀譌･繧呈ｭ｣縺励￥繧ｻ繝?繝医＠縺ｪ縺?蜿ｯ閭ｽ諤ｧ縺後≠繧句ｯｾ蠢懊?",
			"\t\t\t--AND\t\tRETURNDATE\t= i_OrderDate;",
			"\t\t\tAND\t\tPARTNER_CD\t= i_Partner_Cd",
			"\t\t\tAND\t\tSTORE_CD\t= i_Store_Cd",
			"\t\t\tORDER BY RETURNDATE DESC",
			"\t\t\tLIMIT 1;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\tIF (i_DenpKind IN ('12', '13')) THEN -- '12':EOS霑泌刀縲?'13':謇区嶌霑泌刀",
			"\t\tld_TaxBaseDate\t\t:= i_DenpInspectDate - ('1 month'::INTERVAL * ln_Partner_RsvNum1);",
			"\t\tls_PurchaseInfo1\t:= TO_CHAR(ld_TaxBaseDate, 'YYYYMMDD');",
			"\tELSE",
			"\t\tld_TaxBaseDate\t\t:= i_DenpInspectDate;",
			"\tEND IF;",
			"",
			"\tIF (",
			"\t\ti_TaxType\tIS NOT NULL AND",
			"\t\ti_Tax_Cd\tIS NOT NULL",
			"\t) THEN",
			"\t\tls_TaxType := i_TaxType;",
			"\t\tls_Tax_Cd := i_Tax_Cd;",
			"\tELSE",
			"\t\tIF (i_DenpKind IN ('10', '12', '14')) THEN -- 10:EOS莉募?･縲?12:EOS霑泌刀縲?14:EOS蛟､蠑?",
			"\t\t\tls_TaxType\t:= ls_OrderTaxType;",
			"\t\t\tls_Tax_Cd\t:= ls_OrderTax_Cd;",
			"\t\tELSE",
			"\t\t\tSELECT\tTAXTYPE,\tTAX_CD",
			"\t\t\tINTO\tls_TaxType,\tls_Tax_Cd",
			"\t\t\tFROM\tUMF_ITEM",
			"\t\t\tWHERE\tSKU_CD = i_Sku_Cd;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\tIF (i_TaxRate IS NOT NULL) THEN",
			"\t\tln_TaxRate := i_TaxRate;",
			"\tELSE",
			"\t\tln_TaxRate := PXS_UTILITY.f_GetTaxRate(",
			"\t\t\tNULL, -- i_User_Cd",
			"\t\t\tls_Tax_Cd,",
			"\t\t\tld_TaxBaseDate,",
			"\t\t\ti_DenpKind,",
			"\t\t\ti_DenpType",
			"\t\t);",
			"\tEND IF;",
			"",
			"\t-- [螳夂分]",
			"\t-- 窶ｻi_TaxType 1:螟也ｨ弱?2:蜀?遞弱?3:髱櫁ｪｲ遞?",
			"\tSELECT\tCASE WHEN ls_TaxType = '1' THEN ORDERGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN ORDERGNTNK2\t\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN POSGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN POSGNTNK2\t\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN WHOLESALEGNTNK1\tWHEN ls_TaxType IN ('2', '3') THEN WHOLESALEGNTNK2\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN NET1GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET1GNTNK2\t\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN NET2GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET2GNTNK2\t\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN BITNK1\t\t\tWHEN ls_TaxType IN ('2', '3') THEN BITNK2\t\t\tEND,",
			"\t\t\tPARTNER_CD",
			"\tINTO\tln_ItemMasterGntnk,",
			"\t\t\tln_ItemPOSGntnk,",
			"\t\t\tln_ItemWholeSaleGntnk,",
			"\t\t\tln_ItemNet1Gntnk,",
			"\t\t\tln_ItemNet2Gntnk,",
			"\t\t\tln_ItemBitnk,",
			"\t\t\tls_ItemStore_Partner_Cd",
			"\tFROM\tPXS_UTILITY.f_GetItemStoreHistory(",
			"\t\t\t\tNULL,",
			"\t\t\t\ti_Store_Cd,",
			"\t\t\t\ti_Sku_Cd,",
			"\t\t\t\ti_DenpInspectDate,",
			"\t\t\t\t'1' -- i_LogicalDeleteIncludeFlag 隲也炊蜑企勁貂医?ｮ繝?繝ｼ繧ｿ繧ょ盾辣ｧ縺吶ｋ縲ら匱豕ｨ?ｽ樔ｻ募?･縺ｮ髢薙↓螳夂分繝槭せ繧ｿ蜑企勁縺輔ｌ縺ｦ縺?繧句?ｴ蜷医ｒ閠?諷ｮ縲?",
			"\t\t\t);",
			"",
			"\t-- 笘?遘ｻ蜍募?ｺ蠎ｫ蠎玲ュ蝣ｱ蜿門ｾ励?ｮ蝣ｴ蜷医?ｮ迚ｹ蛻･繝ｭ繧ｸ繝?繧ｯ",
			"\tIF (lb_MoveOutFlag) THEN -- [23/06/19霑ｽ蜉? 遘ｻ蜍輔↓謖ｯ繧頑崛繧上ｋ蝣ｴ蜷?]",
			"\t\tSELECT\tCASE WHEN ls_TaxType = '1' THEN BITNK1\t\t\tWHEN ls_TaxType IN ('2', '3') THEN BITNK2\t\t\tEND",
			"\t\tINTO\tln_MoveOutItemBitnk",
			"\t\tFROM\tPXS_UTILITY.f_GetItemStoreHistory(",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tls_ChangeStore_Cd,",
			"\t\t\t\t\ti_Sku_Cd,",
			"\t\t\t\t\ti_DenpInspectDate,",
			"\t\t\t\t\t'1' -- i_LogicalDeleteIncludeFlag 隲也炊蜑企勁貂医?ｮ繝?繝ｼ繧ｿ繧ょ盾辣ｧ縺吶ｋ縲ら匱豕ｨ?ｽ樔ｻ募?･縺ｮ髢薙↓螳夂分繝槭せ繧ｿ蜑企勁縺輔ｌ縺ｦ縺?繧句?ｴ蜷医ｒ閠?諷ｮ縲?",
			"\t\t\t\t);",
			"",
			"\t\t-- 螢ｲ蜊倅ｾ｡繧貞?ｺ蠎ｫ蠎励?槭せ繧ｿ諠?蝣ｱ縺ｧ鄂ｮ縺肴鋤縺医?",
			"\t\tln_ItemBitnk\t\t:= ln_MoveOutItemBitnk;",
			"\t\tln_OrderDetailBiTnk\t:= ln_MoveOutItemBitnk;",
			"\tEND IF;",
			"",
			"\tIF (i_DenpKind IN ('10', '11')) THEN",
			"\t\t-- [莨∫判]",
			"\t\t-- 驕ｩ逕ｨ蜿ｯ閭ｽ縺ｪ莨∫判縺瑚､?謨ｰ縺ゅｋ蝣ｴ蜷医∫匱豕ｨ蜊倅ｾ｡縺梧怙繧ょｮ峨＞莨∫判繧呈治逕ｨ縺吶ｋ縲?",
			"\t\t-- 蜷?遞ｮ蜴滉ｾ｡鬆?逶ｮ縺斐→縺ｫ譛螳峨ｒ蜿悶ｊ縺ｫ縺?縺上％縺ｨ縺ｯ縺励↑縺?縲?",
			"\t\t-- 縺ｾ縺溘∽ｼ∫判縺悟叙蠕励〒縺阪◆蝣ｴ蜷医ｂ縲∽ｻ･荳九?ｮ縺?縺壹ｌ縺九?ｮ蝣ｴ蜷医?ｯ螳夂分繧呈治逕ｨ縺吶ｋ縲?",
			"\t\t-- 1. 隧ｲ蠖馴??逶ｮ縺ｮSTFLG(螳夂分謗｡逕ｨ繝輔Λ繧ｰ)縺?'1'縺ｮ蝣ｴ蜷?",
			"\t\t-- 2. 螳夂分縺ｮ譁ｹ縺悟ｮ我ｾ｡縺九▽繧ｷ繧ｹ繧ｳ繝?D0007(螂我ｻ募刀繝ｻ迚ｹ螢ｲ陬懷??縺ｮ蜴滉ｾ｡繧医ｊ螳夂分蜴滉ｾ｡縺ｮ譁ｹ縺悟ｮ我ｾ｡縺ｮ譎ゅ?ｮ繝槭せ繧ｿ謗｡逕ｨ蜀?螳ｹ)縺?1:螳夂分縺ｮ蝣ｴ蜷?",
			"\t\tSELECT\tPSI.PLAN_CD,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.ORDERGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN PSI.ORDERGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.POSGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN PSI.POSGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.WHOLESALEGNTNK1\tWHEN ls_TaxType IN ('2', '3') THEN PSI.WHOLESALEGNTNK2\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.NET1GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN PSI.NET1GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.NET2GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN PSI.NET2GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN PSI.BITNK1\t\t\tWHEN ls_TaxType IN ('2', '3') THEN PSI.BITNK2\t\t\tEND,",
			"\t\t\t\tPSI.ORDERGNTNK_STFLG,",
			"\t\t\t\tPSI.POSGNTNK_STFLG,",
			"\t\t\t\tPSI.NET1GNTNK_STFLG,",
			"\t\t\t\tPSI.NET2GNTNK_STFLG,",
			"\t\t\t\tPSI.WHOLESALEGNTNK_STFLG,",
			"\t\t\t\tPSI.BITNK_STFLG,",
			"\t\t\t\tPLN.PLANTYPE,",
			"\t\t\t\tPSI.EOSPOSFLAG",
			"\t\tINTO\tls_Plan_Cd,",
			"\t\t\t\tln_PlanMasterGntnk,",
			"\t\t\t\tln_PlanPOSGntnk,",
			"\t\t\t\tln_PlanWholeSaleGntnk,",
			"\t\t\t\tln_PlanNet1Gntnk,",
			"\t\t\t\tln_PlanNet2Gntnk,",
			"\t\t\t\tln_PlanBitnk,",
			"\t\t\t\tls_OrderGntnk_StFlg,",
			"\t\t\t\tls_POSGntnk_StFlg,",
			"\t\t\t\tls_Net1Gntnk_StFlg,",
			"\t\t\t\tls_Net2Gntnk_StFlg,",
			"\t\t\t\tls_WholeSaleGntnk_StFlg,",
			"\t\t\t\tls_Bitnk_StFlg,",
			"\t\t\t\tls_PlanType,",
			"\t\t\t\tls_EosPosFlag",
			"\t\tFROM\tUMF_PLANSTOREITEM PSI",
			"\t\tJOIN\tUMF_PLAN PLN",
			"\t\t\t\tON\tPLN.PLAN_CD\t\t= PSI.PLAN_CD",
			"\t\t\t\tAND\tPLN.VALIDFLAG\t= '1'",
			"\t\tWHERE\tPSI.SKU_CD\t\t\t= i_Sku_cd",
			"\t\tAND\t\tPSI.STORE_CD\t\t= i_Store_Cd",
			"\t\tAND\t\tPSI.VALIDFLAG\t\t= '1'",
			"\t\tAND\t\tPSI.EOSPOSFLAG\t\tIN ('0', '1')",
			"\t\tAND\t\ti_DenpInspectDate\tBETWEEN PSI.DELIVERYSTARTDATE AND PSI.DELIVERYENDDATE",
			"\t\tAND\t\t(",
			"\t\t\t\t\t(",
			"\t\t\t\t\t\tPSI.PARTNER_CD = i_Partner_Cd",
			"\t\t\t\t\t)",
			"\t\t\t\tOR",
			"\t\t\t\t\t(",
			"\t\t\t\t\t\tls_ItemStore_Partner_Cd\t= i_Partner_Cd ",
			"\t\t\t\t\tAND",
			"\t\t\t\t\t\tPSI.PARTNER_CD\t= '000000'",
			"\t\t\t\t\t)",
			"\t\t\t\t)",
			"\t\tAND\t\tPSI.LOTQTY BETWEEN 0 AND 9999 -- 縺薙ｌ諢丞峙縺ｯ繧上°繧峨↑縺?縺檎匱豕ｨ繝√ぉ繝?繧ｯ蜃ｦ逅?縺ｮ莨∫判驕ｩ逕ｨ譚｡莉ｶ縺ｫ蜈･縺｣縺ｦ縺?繧九?ｮ縺ｧ蜈･繧後※縺翫￥縲?",
			"\t\tORDER BY PSI.ORDERGNTNK_STFLG, PSI.ORDERGNTNK1, PSI.DELIVERYSTARTDATE DESC, PSI.ORDERENDDATE, PSI.PLAN_CD",
			"\t\tLIMIT 1;",
			"",
			"\t\tIF (FOUND) THEN",
			"\t\t\tIF (",
			"\t\t\t\tln_ItemMasterGntnk\t\t< ln_PlanMasterGntnk\tOR",
			"\t\t\t\tln_ItemWholeSaleGntnk\t< ln_PlanWholeSaleGntnk\tOR",
			"\t\t\t\tln_ItemPOSGntnk\t\t\t< ln_PlanPOSGntnk\t\tOR",
			"\t\t\t\tln_ItemNet1Gntnk\t\t< ln_PlanNet1Gntnk\t\tOR",
			"\t\t\t\tln_ItemNet2Gntnk\t\t< ln_PlanNet2Gntnk",
			"\t\t\t) THEN",
			"\t\t\t\t-- 螳夂分縺ｮ縺ｻ縺?縺悟ｮ峨＞蝣ｴ蜷医?ｯ繧ｷ繧ｹ繧ｳ繝?縺ｫ繧医ｋ蛻､譁ｭ縺檎匱逕溘☆繧九?",
			"\t\t\t\tIF (i_SyscomD0007_PlanGnkType IS NOT NULL) THEN",
			"\t\t\t\t\tls_SyscomD0007_PlanGnkType := i_SyscomD0007_PlanGnkType;",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_SyscomD0007_PlanGnkType := PXS_UTILITY.f_GetSystemConfig (",
			"\t\t\t\t\t\tNULL,\t\t\t\t\t\t\t-- i_User_Cd",
			"\t\t\t\t\t\tlrec_UserInfo.SYSTEMMODE_CD,\t-- i_SystemMode_Cd",
			"\t\t\t\t\t\t'D0007'\t\t\t\t\t\t\t-- i_Code",
			"\t\t\t\t\t);",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- 繝槭せ繧ｿ蜴滉ｾ｡",
			"\t\t\tIF (ls_OrderGntnk_StFlg = '1') THEN -- 1:螳夂分",
			"\t\t\t\tln_MasterGntnk := ln_ItemMasterGntnk;",
			"\t\t\t\tlb_IsMasterGntnkFromPlan := FALSE;",
			"",
			"\t\t\t\tln_PlanMasterGntnk := NULL;",
			"\t\t\tELSIF (ln_ItemMasterGntnk < ln_PlanMasterGntnk) THEN",
			"\t\t\t\tIF (ls_SyscomD0007_PlanGnkType = '1') THEN -- 1:螳夂分",
			"\t\t\t\t\tln_MasterGntnk := ln_ItemMasterGntnk;",
			"\t\t\t\t\tlb_IsMasterGntnkFromPlan := FALSE;",
			"--\t\t\t\t\tln_PlanMasterGntnk := NULL;",
			"\t\t\t\tELSIF (ls_SyscomD0007_PlanGnkType = '2') THEN -- 2:莨∫判",
			"\t\t\t\t\tln_MasterGntnk := ln_PlanMasterGntnk;",
			"\t\t\t\t\tlb_IsMasterGntnkFromPlan := TRUE;",
			"\t\t\t\tEND IF;",
			"\t\t\tELSE",
			"\t\t\t\tln_MasterGntnk := ln_PlanMasterGntnk;",
			"\t\t\t\tlb_IsMasterGntnkFromPlan := TRUE;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- 蜊ｸ蜴滉ｾ｡",
			"\t\t\tIF (ls_WholeSaleGntnk_StFlg = '1') THEN -- 1:螳夂分",
			"\t\t\t\tln_WholeSaleGntnk := ln_ItemWholeSaleGntnk;",
			"\t\t\t\tlb_IsWholeSaleGntnkFromPlan := FALSE;",
			"",
			"\t\t\t\tln_PlanWholeSaleGntnk := NULL;",
			"\t\t\tELSIF (ln_ItemWholeSaleGntnk < ln_PlanWholeSaleGntnk) THEN",
			"\t\t\t\tIF (ls_SyscomD0007_PlanGnkType = '1') THEN -- 1:螳夂分",
			"\t\t\t\t\tln_WholeSaleGntnk := ln_ItemWholeSaleGntnk;",
			"\t\t\t\t\tlb_IsWholeSaleGntnkFromPlan := FALSE;",
			"--\t\t\t\t\tln_PlanWholeSaleGntnk := NULL;",
			"\t\t\t\tELSIF (ls_SyscomD0007_PlanGnkType = '2') THEN -- 2:莨∫判",
			"\t\t\t\t\tln_WholeSaleGntnk := ln_PlanWholeSaleGntnk;",
			"\t\t\t\t\tlb_IsWholeSaleGntnkFromPlan := TRUE;",
			"\t\t\t\tEND IF;",
			"\t\t\tELSE",
			"\t\t\t\tln_WholeSaleGntnk := ln_PlanWholeSaleGntnk;",
			"\t\t\t\tlb_IsWholeSaleGntnkFromPlan := TRUE;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- POS蜴滉ｾ｡",
			"\t\t\tIF (ls_POSGntnk_StFlg = '1') THEN -- 1:螳夂分",
			"\t\t\t\tln_PlanPOSGntnk := NULL;",
			"--\t\t\tELSIF (ln_ItemPOSGntnk < ln_PlanPOSGntnk) THEN",
			"--\t\t\t\tIF (ls_SyscomD0007_PlanGnkType = '1') THEN -- 1:螳夂分",
			"--\t\t\t\t\tln_PlanPOSGntnk := NULL;",
			"--\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- NET1蜴滉ｾ｡",
			"\t\t\tIF (ls_Net1Gntnk_StFlg = '1') THEN -- 1:螳夂分",
			"\t\t\t\tln_PlanNet1Gntnk := NULL;",
			"--\t\t\tELSIF (ln_ItemNet1Gntnk < ln_PlanNet1Gntnk) THEN",
			"--\t\t\t\tIF (ls_SyscomD0007_PlanGnkType = '1') THEN -- 1:螳夂分",
			"--\t\t\t\t\tln_PlanNet1Gntnk := NULL;",
			"--\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- NET2蜴滉ｾ｡",
			"\t\t\tIF (ls_Net2Gntnk_StFlg = '1') THEN -- 1:螳夂分",
			"\t\t\t\tln_PlanNet2Gntnk := NULL;",
			"--\t\t\tELSIF (ln_ItemNet2Gntnk < ln_PlanNet2Gntnk) THEN",
			"--\t\t\t\tIF (ls_SyscomD0007_PlanGnkType = '1') THEN -- 1:螳夂分",
			"--\t\t\t\t\tln_PlanNet2Gntnk := NULL;",
			"--\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- 螢ｲ萓｡",
			"\t\t\tIF (lb_IsMasterGntnkFromPlan AND ls_EosPosFlag = '0' AND ls_Bitnk_StFlg <> '1') THEN -- 螢ｲ萓｡縺ゅｊ縺ｮ莨∫判縺碁←逕ｨ縺輔ｌ縺溷?ｴ蜷医√す繧ｹ繧ｳ繝?縺ｫ繧医ｊ莨∫判螢ｲ萓｡縺ｨ螳夂分螢ｲ萓｡縺ｮ縺ｩ縺｡繧峨ｒ縺ｨ繧九°繧貞愛譁ｭ縺吶ｋ縲?",
			"\t\t\t\tIF (ls_PlanType = '1') THEN -- 1:迚ｹ螢ｲ",
			"\t\t\t\t\tIF (i_SyscomD0022_TokubaiBikType IS NOT NULL) THEN",
			"\t\t\t\t\t\tls_SyscomD0022_TokubaiBikType := i_SyscomD0022_TokubaiBikType;",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_SyscomD0022_TokubaiBikType := PXS_UTILITY.f_GetSystemConfig (",
			"\t\t\t\t\t\t\tNULL,\t\t\t\t\t\t\t-- i_User_Cd",
			"\t\t\t\t\t\t\tlrec_UserInfo.SYSTEMMODE_CD,\t-- i_SystemMode_Cd",
			"\t\t\t\t\t\t\t'D0022'\t\t\t\t\t\t\t-- i_Code",
			"\t\t\t\t\t\t);",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tIF (ls_SyscomD0022_TokubaiBikType = '02') THEN -- 02:蜴溷腰萓｡縺ｨ蜷御ｸ莨∫判縺ｮ螢ｲ蜊倅ｾ｡",
			"\t\t\t\t\t\tln_MasterBitnk := ln_PlanBitnk;",
			"\t\t\t\t\tELSIF (ls_SyscomD0022_TokubaiBikType = '01') THEN -- 01:螳夂分螢ｲ萓｡",
			"\t\t\t\t\t\tln_MasterBitnk := ln_ItemBitnk;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tELSIF (ls_PlanType = '2') THEN -- 2:螂我ｻ募刀",
			"\t\t\t\t\tIF (i_SyscomD0023_HousihinBikType IS NOT NULL) THEN",
			"\t\t\t\t\t\tls_SyscomD0023_HousihinBikType := i_SyscomD0023_HousihinBikType;",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_SyscomD0023_HousihinBikType := PXS_UTILITY.f_GetSystemConfig (",
			"\t\t\t\t\t\t\tNULL,\t\t\t\t\t\t\t-- i_User_Cd",
			"\t\t\t\t\t\t\tlrec_UserInfo.SYSTEMMODE_CD,\t-- i_SystemMode_Cd",
			"\t\t\t\t\t\t\t'D0023'\t\t\t\t\t\t\t-- i_Code",
			"\t\t\t\t\t\t);",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tIF (ls_SyscomD0023_HousihinBikType = '02') THEN -- 02:蜴溷腰萓｡縺ｨ蜷御ｸ莨∫判縺ｮ螢ｲ蜊倅ｾ｡",
			"\t\t\t\t\t\tln_MasterBitnk := ln_PlanBitnk;",
			"\t\t\t\t\tELSIF (ls_SyscomD0023_HousihinBikType = '01') THEN -- 01:螳夂分螢ｲ萓｡",
			"\t\t\t\t\t\tln_MasterBitnk := ln_ItemBitnk;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"\t\t\tELSE",
			"\t\t\t\tln_MasterBitnk := ln_ItemBitnk;",
			"\t\t\tEND IF;",
			"\t\tELSE -- 莨∫判縺檎┌縺九▲縺溷?ｴ蜷医?ｯ螳夂分繧帝←逕ｨ縲?",
			"\t\t\tln_MasterGntnk := ln_ItemMasterGntnk;",
			"\t\t\tln_MasterBitnk := ln_ItemBitnk;",
			"\t\t\tln_WholeSaleGntnk := ln_ItemWholeSaleGntnk;",
			"\t\t\tlb_IsWholeSaleGntnkFromPlan := FALSE;",
			"\t\tEND IF;",
			"\tELSE -- 莉募?･縺倥ｃ縺ｪ縺?蝣ｴ蜷医?ｯ螳夂分繧帝←逕ｨ縲?",
			"\t\tln_MasterGntnk := ln_ItemMasterGntnk;",
			"\t\tln_MasterBitnk := ln_ItemBitnk;",
			"\t\tln_WholeSaleGntnk := ln_ItemWholeSaleGntnk;",
			"\t\tlb_IsWholeSaleGntnkFromPlan := FALSE;",
			"\tEND IF;",
			"",
			"\t-- [2023/02/10霑ｽ蜉?] 蟒ｺ蛟､縲√Γ繝ｼ繧ｫ繝ｼNET",
			"\tSELECT\tCASE WHEN ls_TaxType = '1' THEN QUOTEGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN QUOTEGNTNK2\t\tEND,",
			"\t\t\tCASE WHEN ls_TaxType = '1' THEN MAKERNETGNTNK1\tWHEN ls_TaxType IN ('2', '3') THEN MAKERNETGNTNK2\tEND",
			"\tINTO\tln_QuoteGntnk,",
			"\t\t\tln_MakerNetGntnk",
			"\tFROM\tUMF_ITEMGNTNKPATTERN",
			"\tWHERE\tPATTERN_CD\t= '00000' -- 莉｣陦ｨ",
			"\tAND\t\tSKU_CD\t\t= i_Sku_cd",
			"\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t-- 繝槭せ繧ｿ蜴滉ｾ｡繧剃ｽｿ繧上↑縺?繝代ち繝ｼ繝ｳ",
			"\t-- 竭?蟋碑ｨ嶺ｻ募?･縺ｧ逋ｺ豕ｨ蜈亥挨蜴滉ｾ｡邇?繝槭せ繧ｿ逋ｻ骭ｲ縺ゅｊ",
			"\tIF (i_DenpKind IN ('10', '11') AND i_DenpType = '16') THEN",
			"\t\tSELECT\tCOUNT(*)",
			"\t\tINTO\tln_Count",
			"\t\tFROM\tUMF_PARTNERCOSTRATE",
			"\t\tWHERE\tPARTNER_CD IN ('000000', i_Partner_Cd)",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (ln_Count > 0) THEN",
			"\t\t\tlb_NoMasterGnkFlag := TRUE;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\t-- 竭｡NONPLU蝠?蜩?",
			"\tIF (NOT lb_NoMasterGnkFlag) THEN",
			"\t\tSELECT\tINSTORETYPE",
			"\t\tINTO\tls_InstoreType",
			"\t\tFROM\tUMF_INSTOREITEM",
			"\t\tWHERE\tINSTORE_CD\t= SUBSTR(i_Sku_Cd, 1, 2)",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (ls_InstoreType IN ('31', '32')) THEN",
			"\t\t\tlb_NoMasterGnkFlag := TRUE;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\t-- 竭｢蛹?諡ｬJAN",
			"\t-- 竭｢-1 U140迚ｹ蛻･繝ｫ繝ｼ繝ｫ 繝槭せ繧ｿ蜴滉ｾ｡0縺ｯ蛹?諡ｬJAN縺ｨ蜷後§",
			"\tIF (NOT lb_NoMasterGnkFlag) THEN",
			"\t\tIF (ln_MasterGntnk = 0) THEN",
			"\t\t\tlb_NoMasterGnkFlag := TRUE;",
			"\t\tELSE",
			"\t\t\t-- 竭｢-2 騾壼ｸｸ縺ｮ蛹?諡ｬJAN",
			"\t\t\tSELECT\tCOUNT(*)",
			"\t\t\tINTO\tln_Count",
			"\t\t\tFROM\tUMF_CLASS",
			"\t\t\tWHERE\tITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\tAND\t\tCLASSTYPE\t\t\t= ls_Syscom00201_PurchaseClassType",
			"\t\t\tAND\t\tINCLUDE_CD\t\t\t= i_Sku_Cd",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tIF (ln_Count > 0) THEN",
			"\t\t\t\tlb_NoMasterGnkFlag := TRUE;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\t-- 竭｣蜴滉ｾ｡邇?蝠?蜩?",
			"\t-- 笘?U140縺ｯ蜴滉ｾ｡邇?蝠?蜩√′蟄伜惠縺励↑縺?縺ｮ縺ｧ縲√ヱ繝輔か繝ｼ繝槭Φ繧ｹ驥崎ｦ悶〒繧ｳ繝｡繝ｳ繝医い繧ｦ繝医?",
			"--\tIF (NOT lb_NoMasterGnkFlag) THEN",
			"--\t\tSELECT\tGNTNKTYPE",
			"--\t\tINTO\tls_GntnkType",
			"--\t\tFROM\tUMF_ITEMSTORE",
			"--\t\tWHERE\tSTORE_CD\t= i_Store_Cd",
			"--\t\tAND\t\tSKU_CD\t\t= i_Sku_Cd;",
			"--",
			"--\t\tIF (ls_GntnkType = '1') THEN",
			"--\t\t\tlb_NoMasterGnkFlag := TRUE;",
			"--\t\tEND IF;",
			"--\tEND IF;",
			"",
			"\t-- 繝槭せ繧ｿ蜴滉ｾ｡菴ｿ繧上↑縺?繝代ち繝ｼ繝ｳ縺?縺｣縺溘ｉ貂｡縺｣縺ｦ縺阪◆蜴滉ｾ｡縺ｧ縺吶∋縺ｦ繧剃ｸ頑嶌縺阪☆繧九?",
			"\tIF (lb_NoMasterGnkFlag AND i_PartnerGntnk IS NOT NULL) THEN",
			"\t\tln_MasterGntnk\t\t:= i_PartnerGntnk;",
			"\t\tln_ItemMasterGntnk\t:= i_PartnerGntnk;",
			"\t\tln_ItemPOSGntnk\t\t:= i_PartnerGntnk;",
			"\t\tln_ItemNet1Gntnk\t:= i_PartnerGntnk;",
			"\t\tln_ItemNet2Gntnk\t:= i_PartnerGntnk;",
			"\t\tln_QuoteGntnk\t\t:= i_PartnerGntnk;",
			"\t\tln_MakerNetGntnk\t:= i_PartnerGntnk;",
			"",
			"\t\t-- 蜊ｸ蜴滉ｾ｡縺ｯ縲∵焔蜍墓欠螳壹′縺ゅｌ縺ｰ謇句虚謖?螳壹?ｮ縺ｻ縺?縺悟ｼｷ縺?縲?",
			"\t\tln_WholeSaleGntnk\t\t\t:= COALESCE(i_InputWholeSaleGntnk, i_PartnerGntnk);",
			"\t\tln_ItemWholeSaleGntnk\t\t:= COALESCE(i_InputWholeSaleGntnk, i_PartnerGntnk);",
			"\t\tlb_IsWholeSaleGntnkFromPlan\t:= FALSE;",
			"",
			"\t\t-- 莨∫判繝槭せ繧ｿ蜴滉ｾ｡縺ｮ讎ょｿｵ繧ゅ↑縺?縺ｮ縺ｧ縲¨ULL縲?",
			"\t\tln_PlanWholeSaleGntnk\t:= NULL;",
			"\t\tln_PlanNet1Gntnk\t\t:= NULL;",
			"\t\tln_PlanNet2Gntnk\t\t:= NULL;",
			"\t\tln_PlanMasterGntnk\t\t:= NULL;",
			"\t\tln_PlanPOSGntnk\t\t\t:= NULL;",
			"\tEND IF;",
			"",
			"\to_PurchaseGnkBik := PXS_UTILITY.f_GetPurchaseGnkBik (",
			"\t\ti_Qty,",
			"\t\ti_PartnerGntnk,",
			"\t\tln_MasterGntnk,",
			"\t\tln_OrderDetailGnTnk,",
			"\t\tln_WholeSaleGntnk,",
			"\t\tln_MasterBitnk,",
			"\t\tln_OrderDetailBiTnk,",
			"\t\ti_DenpKind,",
			"\t\ti_DenpType,",
			"\t\tls_EOSOrderGntnkType,",
			"\t\tls_TegOrderGnTnkType,",
			"\t\tls_TaxType,",
			"\t\tln_TaxRate,",
			"\t\tls_CostRoundType,",
			"\t\tls_GntnkSelectType,",
			"\t\tls_Syscom00011_ParentCompany_Cd,",
			"\t\tls_OrderCompany_Cd,",
			"\t\tls_PartnerCompany_Cd,",
			"\t\tlb_IsWholeSaleGntnkFromPlan,",
			"\t\tln_ItemPOSGntnk,",
			"\t\tln_ItemNet1Gntnk,",
			"\t\tln_ItemNet2Gntnk,",
			"\t\tls_Plan_Cd,",
			"\t\ti_PartnerGnkForceFlag,",
			"\t\tlb_NoMasterGnkFlag,",
			"\t\tln_ItemWholeSaleGntnk,",
			"\t\tln_ItemMasterGntnk,",
			"\t\tln_PlanWholeSaleGntnk,",
			"\t\tln_PlanNet1Gntnk,",
			"\t\tln_PlanNet2Gntnk,",
			"\t\tln_PlanMasterGntnk,",
			"\t\tln_PlanPOSGntnk,",
			"\t\tln_QuoteGntnk,",
			"\t\tln_MakerNetGntnk,",
			"\t\tls_PurchaseInfo1,",
			"\t\tln_OrderDetailWholeSaleGnTnk",
			"\t);",
			"",
			"---------------------------------------繝?繝舌ャ繧ｰ逕ｨ 蠢?隕√↓蠢懊§縺ｦ繧ｳ繝｡繝ｳ繝医ｒ螟悶☆---------------------------------------",
			"-- SP蜻ｼ蜃ｺ譁?繧貞?ｺ蜉帙?",
			"-- RAISE WARNING $debug$[pxs_utility.f_getpurchasegnkbik] select * from pxs_utility.f_getpurchasegnkbik(%, %, '%', '%', '%', '%', '%', '%', '%', '%', %, %, '%')$debug$,",
			"-- \t\t\t\ti_qty,",
			"-- \t\t\t\ti_partnergntnk,",
			"-- \t\t\t\ti_denpkind,",
			"-- \t\t\t\ti_denptype,",
			"-- \t\t\t\ti_partner_cd,",
			"-- \t\t\t\ti_store_cd,",
			"-- \t\t\t\ti_sku_cd,",
			"-- \t\t\t\ti_inspectdate,",
			"-- \t\t\t\ti_denpinspectdate,",
			"-- \t\t\t\ti_partnergnkforceflag,",
			"-- \t\t\t\ti_orderdenpno,",
			"-- \t\t\t\ti_lineno,",
			"-- \t\t\t\ti_orderdate;",
			"---------------------------------------繝?繝舌ャ繧ｰ逕ｨ 蠢?隕√↓蠢懊§縺ｦ繧ｳ繝｡繝ｳ繝医ｒ螟悶☆---------------------------------------",
			"",
			"\tRETURN o_PurchaseGnkBik;",
			"END;",
			"$function$",
			"CREATE OR REPLACE FUNCTION pxs_utility.f_getpurchasegnkbik(i_qty numeric, i_partnergntnk numeric, i_mastergntnk numeric, i_orderdetailgntnk numeric, i_wholesalegntnk numeric, i_masterbitnk numeric, i_orderdetailbitnk numeric, i_denpkind character varying, i_denptype character varying, i_eosordergntnktype character varying, i_tegordergntnktype character varying, i_taxtype character varying, i_taxrate numeric, i_costroundtype character varying, i_gntnkselecttype character varying, i_syscom00011_parentcompany_cd character varying, i_ordercompany_cd character varying, i_partnercompany_cd character varying, i_iswholesalegntnkfromplan boolean, i_itemposgntnk numeric, i_itemnet1gntnk numeric, i_itemnet2gntnk numeric, i_plan_cd character varying, i_partnergnkforceflag boolean, i_nomastergnkflag boolean, i_itemwholesalegntnk numeric, i_itemmastergntnk numeric, i_planwholesalegntnk numeric, i_plannet1gntnk numeric, i_plannet2gntnk numeric, i_planmasterordergntnk numeric, i_planposgntnk numeric, i_quotegntnk numeric, i_makernetgntnk numeric, i_purchaseinfo1 character varying, i_orderdetailwholesalegntnk numeric)",
			"RETURNS type_purchasegnkbik",
			"LANGUAGE plpgsql",
			"AS $function$",
			"/*",
			"================================================================================",
			"[繧ｵ繝匁ｩ溯?ｽ  ] 蜈ｱ騾?",
			"[讖溯?ｽ?ｼｩ?ｼ､  ] 蜈ｱ騾?",
			"[讖溯?ｽ蜷咲ｧｰ  ] 繝ｦ繝ｼ繝?繧｣繝ｪ繝?繧｣繝代ャ繧ｱ繝ｼ繧ｸ",
			"[繝ｪ繝薙ず繝ｧ繝ｳ] 1",
			"[髢｢ 謨ｰ 蜷?  ] f_GetPurchaseGnkBik",
			"[菴? 謌? 譌･  ] 2022/06/07",
			"[菴? 謌? 閠?  ] UNICCS/j-nakakita",
			"[譖ｴ譁ｰ螻･豁ｴ  ]",
			"================================================================================",
			"$START",
			"$FUNCTION\\1",
			"\t莉募?･莨晉･ｨ縺ｮ蜴滉ｾ｡繝ｻ螢ｲ萓｡髢｢騾｣鬆?逶ｮ繧貞叙蠕励＠縺ｾ縺吶?",
			"$RETURN\\1",
			"\t莉募?･莨晉･ｨ蜴滉ｾ｡繝ｻ螢ｲ萓｡髢｢騾｣鬆?逶ｮ",
			"$PAR\\1",
			"\t謨ｰ驥?",
			"$PAR\\2",
			"\t蜿門ｼ募?井ｼ晉･ｨ蜴溷腰萓｡ 譛ｪ謖?螳壹?ｮ蝣ｴ蜷?NULL",
			"$PAR\\3",
			"\t繝槭せ繧ｿ蜴溷腰萓｡(謗｡逕ｨ)",
			"$PAR\\4",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜴溷腰萓｡ 繝槭せ繧ｿ縺ｮ逋ｺ豕ｨ蜊倅ｾ｡縺ｧ縺ｯ縺ｪ縺? 謇区嶌縺ｮ蝣ｴ蜷?NULL",
			"$PAR\\5",
			"\t蜊ｸ蜴溷腰萓｡(謗｡逕ｨ)",
			"$PAR\\6",
			"\t繝槭せ繧ｿ螢ｲ蜊倅ｾ｡",
			"$PAR\\7",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ螢ｲ蜊倅ｾ｡ 謇区嶌縺ｮ蝣ｴ蜷?NULL",
			"$PAR\\8",
			"\t莨晉･ｨ遞ｮ鬘? 10:EOS莉募?･縲?11:謇区嶌莉募?･縲?12:EOS霑泌刀縲?13:謇区嶌霑泌刀縲?14:EOS蛟､蠑輔?15:謇区嶌蛟､蠑?",
			"$PAR\\9",
			"\t莨晉･ｨ蛹ｺ蛻?",
			"$PAR\\10",
			"\t邏榊刀EDI蜊倅ｾ｡謗｡逕ｨ蛹ｺ蛻?(EOS莉募?･) 1:逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜊倅ｾ｡ 2:EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡ 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"$PAR\\11",
			"\t邏榊刀EDI蜊倅ｾ｡謗｡逕ｨ蛹ｺ蛻?(謇区嶌莉募?･) :EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡ 2:邏榊刀譌･譎らせ縺ｮ蝠?蜩√?槭せ繧ｿ縺ｮ蜊倅ｾ｡ 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"$PAR\\12",
			"\t遞主玄蛻? 1:螟也ｨ弱?2:蜀?遞弱?3:髱櫁ｪｲ遞?",
			"$PAR\\13",
			"\t遞守紫",
			"$PAR\\14",
			"\t遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻? 1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡",
			"$PAR\\15",
			"\t蜴滉ｾ｡謗｡逕ｨ蛹ｺ蛻? 1:蟆ゆｼ昜ｾ｡縲?2:蟄蝉ｼ夂､ｾ蜊ｸ萓｡縲?3:FC蜊ｸ萓｡",
			"$PAR\\16",
			"\t莉｣陦ｨ莨夂､ｾ繧ｳ繝ｼ繝?(繧ｷ繧ｹ繧ｳ繝?00011)",
			"$PAR\\17",
			"\t蝠?蜩∬ｪｿ驕比ｼ夂､ｾ繧ｳ繝ｼ繝?",
			"$PAR\\18",
			"\t螂醍ｴ?莨夂､ｾ繧ｳ繝ｼ繝会ｼ育匱豕ｨ蜈医?槭せ繧ｿ?ｼ?",
			"$PAR\\19",
			"\t蜊ｸ蜴滉ｾ｡莨∫判繝輔Λ繧ｰ 蜊ｸ蜴滉ｾ｡繧剃ｼ∫判縺九ｉ蜿悶▲縺溘↑繧欝RUE縲∝ｮ夂分縺ｪ繧宇ALSE",
			"$PAR\\20",
			"\tPOS蜴溷腰萓｡(螳夂分)",
			"$PAR\\21",
			"\tNET1蜴溷腰萓｡(螳夂分)",
			"$PAR\\22",
			"\tNET2蜴溷腰萓｡(螳夂分)",
			"$PAR\\23",
			"\t莨∫判繧ｳ繝ｼ繝?",
			"$PAR\\24",
			"\t蜿門ｼ募?亥次萓｡蠑ｷ蛻ｶ謗｡逕ｨ繝輔Λ繧ｰ",
			"\tTRUE縺ｮ蝣ｴ蜷医√ｂ繧阪ｂ繧阪?ｮ險育ｮ励ｒ縺吶∋縺ｦ辟｡隕悶＠縺ｦ蜿門ｼ募?亥次萓｡繧呈治逕ｨ縺吶ｋ縲よ焔譖ｸ莉募?･莨晉･ｨ蜈･蜉帷判髱｢縺ｧ縲悟､蠑輔↑縺励阪ｒ驕ｸ謚槭＠縺溷?ｴ蜷医↑縺ｩ繧呈Φ螳壹?",
			"$PAR\\25",
			"\t繝槭せ繧ｿ蜴滉ｾ｡繧堤ｮ｡逅?縺励↑縺?繝輔Λ繧ｰ",
			"\t驛ｨ髢謇薙■縲¨ONPLU縲∝次萓｡邇?縺ｪ繧欝RUE",
			"$PAR\\26",
			"\t蜊ｸ蜴溷腰萓｡(螳夂分)",
			"$PAR\\27",
			"\t繝槭せ繧ｿ蜴溷腰萓｡(螳夂分)",
			"$PAR\\28",
			"\t蜊ｸ蜴溷腰萓｡(莨∫判)",
			"$PAR\\29",
			"\tNET1蜴溷腰萓｡(莨∫判)",
			"$PAR\\30",
			"\tNET2蜴溷腰萓｡(莨∫判)",
			"$PAR\\31",
			"\t繝槭せ繧ｿ蜴溷腰萓｡(莨∫判)",
			"$PAR\\32",
			"\tPOS蜴溷腰萓｡(莨∫判)",
			"$PAR\\33",
			"\t蟒ｺ蛟､蜴溷腰萓｡",
			"$PAR\\34",
			"\t繝｡繝ｼ繧ｫ繝ｼNET蜴溷腰萓｡",
			"$PAR\\35",
			"\t莉募?･譛滄俣諠?蝣ｱ?ｼ?",
			"\tU140縺ｮ險闡峨〒險縺?縺ｨ蝓ｺ蜿門ｼ募ｹｴ譛域律",
			"$PAR\\36",
			"\t逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜊ｸ蜴溷腰萓｡",
			"$END",
			"*/",
			"DECLARE",
			"\to_PurchaseGnkBik\tTYPE_PURCHASEGNKBIK;",
			"\tls_TaxRoundType\t\tUMF_PARTNER.COSTROUNDTYPE%TYPE;",
			"BEGIN",
			"\t----------",
			"\t-- 螢ｲ萓｡ --",
			"\t----------",
			"\tIF (i_DenpKind IN ('10', '12')) THEN -- EOS縺ｮ蝣ｴ蜷茨ｼ?10:EOS莉募?･縲?12:EOS霑泌刀?ｼ?",
			"\t\to_PurchaseGnkBik.BITNK := i_OrderDetailBiTnk;",
			"\tELSIF (i_DenpKind IN ('11', '13')) THEN -- 謇区嶌縺ｮ蝣ｴ蜷茨ｼ?11:謇区嶌莉募?･縲?13:謇区嶌霑泌刀?ｼ?",
			"\t\to_PurchaseGnkBik.BITNK := i_MasterBitnk;",
			"\tELSIF (i_DenpKind IN ('14', '15')) THEN -- 蛟､蠑輔?ｮ蝣ｴ蜷?",
			"\t\to_PurchaseGnkBik.BITNK := 0;",
			"\tEND IF;",
			"",
			"\to_PurchaseGnkBik.BIKKNGK := PXS_UTILITY.f_ConvertRoundNumberFormat(",
			"\t\to_PurchaseGnkBik.BITNK * i_Qty,\t-- i_TargetValue  蟇ｾ雎｡蛟､",
			"\t\ti_CostRoundType,\t\t\t\t-- i_RoundType    遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻??ｼ?1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡?ｼ?",
			"\t\t0\t\t\t\t\t\t\t\t-- i_DecimalPoint 遶ｯ謨ｰ蜃ｦ逅?蠕後?ｮ蟆乗焚轤ｹ譯∵焚",
			"\t);",
			"",
			"\t----------",
			"\t-- 蜴滉ｾ｡ --",
			"\t----------",
			"\tIF (i_DenpKind IN ('10', '12')) THEN -- EOS縺ｮ蝣ｴ蜷茨ｼ?10:EOS莉募?･縲?12:EOS霑泌刀縲?14:EOS蛟､蠑包ｼ?",
			"\t\tIF (i_PartnerGnkForceFlag) THEN",
			"\t\t\tIF (i_EOSOrderGntnkType = '3') THEN -- 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"\t\t\t\to_PurchaseGnkBik.GNTNK := COALESCE(i_PartnerGntnk, i_MasterGntnk);",
			"\t\t\tELSE",
			"\t\t\t\to_PurchaseGnkBik.GNTNK := COALESCE(i_PartnerGntnk, i_OrderDetailGnTnk);",
			"\t\t\tEND IF;",
			"\t\tELSIF (i_DenpKind = '10' AND i_DenpType = '17') THEN -- 莨晉･ｨ遞ｮ鬘?10 莨晉･ｨ蛹ｺ蛻?17?ｼ壹せ繝昴ャ繝育匱豕ｨ?ｼ亥次萓｡謖?螳夲ｼ?",
			"\t\t\to_PurchaseGnkBik.GNTNK := i_OrderDetailGnTnk;",
			"",
			"\t\tELSIF (i_EOSOrderGntnkType = '1') THEN -- 1:逋ｺ豕ｨ螳溽ｸｾ縺ｮ蜴滉ｾ｡",
			"\t\t\to_PurchaseGnkBik.GNTNK := i_OrderDetailGnTnk;",
			"",
			"\t\tELSIF (i_EOSOrderGntnkType = '2') THEN -- 2:EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡",
			"\t\t\to_PurchaseGnkBik.GNTNK := COALESCE(i_PartnerGntnk, i_OrderDetailGnTnk);",
			"",
			"\t\tELSIF (i_EOSOrderGntnkType = '3') THEN -- 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"\t\t\tIF (i_DenpKind = '10') THEN -- 10:EOS莉募?･ 竊? 螳我ｾ｡蜆ｪ蜈?",
			"\t\t\t\tIF (i_PartnerGntnk < i_MasterGntnk) THEN",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_PartnerGntnk;",
			"\t\t\t\tELSE",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_MasterGntnk;",
			"\t\t\t\tEND IF; ",
			"",
			"\t\t\tELSE -- 12:EOS霑泌刀 竊? 2022/12/01 鬮倅ｾ｡蜆ｪ蜈医?ｯ繧?繧√ｋ縲ゑｼ亥渕譛ｬ險ｭ險亥?阪Ξ繝薙Η繝ｼ縺ｧ遒ｺ隱搾ｼ?",
			"\t\t\t\tIF (i_PartnerGntnk IS NOT NULL) THEN",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_PartnerGntnk;",
			"\t\t\t\tELSE",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_MasterGntnk;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\tELSIF (i_DenpKind IN ('11', '13')) THEN -- 謇区嶌縺ｮ蝣ｴ蜷茨ｼ?11:謇区嶌莉募?･縲?13:謇区嶌霑泌刀縲?15:謇区嶌蛟､蠑包ｼ?",
			"\t\tIF (i_PartnerGnkForceFlag) THEN",
			"\t\t\to_PurchaseGnkBik.GNTNK :=COALESCE(i_PartnerGntnk, i_MasterGntnk);",
			"",
			"\t\tELSIF (i_TegOrderGnTnkType = '1') THEN -- 1:EDI繝?繝ｼ繧ｿ縺ｮ蜊倅ｾ｡",
			"\t\t\to_PurchaseGnkBik.GNTNK :=COALESCE(i_PartnerGntnk, i_MasterGntnk);",
			"",
			"\t\tELSIF (i_TegOrderGnTnkType = '2') THEN -- 2:邏榊刀譌･譎らせ縺ｮ蝠?蜩√?槭せ繧ｿ縺ｮ蜊倅ｾ｡",
			"\t\t\to_PurchaseGnkBik.GNTNK := i_MasterGntnk;",
			"",
			"\t\tELSIF (i_TegOrderGnTnkType = '3') THEN -- 3:邏榊刀譌･譎らせ縺ｮ譛螳牙､",
			"\t\t\tIF (i_DenpKind = '11') THEN -- 11:謇区嶌莉募?･ 竊? 螳我ｾ｡蜆ｪ蜈?",
			"\t\t\t\tIF (i_PartnerGntnk < i_MasterGntnk) THEN",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_PartnerGntnk;",
			"\t\t\t\tELSE",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_MasterGntnk;",
			"\t\t\t\tEND IF; ",
			"",
			"\t\t\tELSE -- 13:謇区嶌霑泌刀 竊? 2022/12/01 鬮倅ｾ｡蜆ｪ蜈医?ｯ繧?繧√ｋ縲ゑｼ亥渕譛ｬ險ｭ險亥?阪Ξ繝薙Η繝ｼ縺ｧ遒ｺ隱搾ｼ?",
			"\t\t\t\tIF (i_PartnerGntnk IS NOT NULL) THEN",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_PartnerGntnk;",
			"\t\t\t\tELSE",
			"\t\t\t\t\to_PurchaseGnkBik.GNTNK := i_MasterGntnk;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF; ",
			"\t\tEND IF;",
			"\tELSIF (i_DenpKind IN ('14', '15')) THEN -- 蛟､蠑輔?ｮ蝣ｴ蜷?",
			"\t\to_PurchaseGnkBik.GNTNK := i_PartnerGntnk;",
			"\tEND IF;",
			"",
			"\to_PurchaseGnkBik.GNKKNGK := PXS_UTILITY.f_ConvertRoundNumberFormat(",
			"\t\to_PurchaseGnkBik.GNTNK * i_Qty,\t-- i_TargetValue  蟇ｾ雎｡蛟､",
			"\t\ti_CostRoundType,\t\t\t\t-- i_RoundType    遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻??ｼ?1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡?ｼ?",
			"\t\t0\t\t\t\t\t\t\t\t-- i_DecimalPoint 遶ｯ謨ｰ蜃ｦ逅?蠕後?ｮ蟆乗焚轤ｹ譯∵焚",
			"\t);",
			"",
			"\t--------------------",
			"\t-- 蜿門ｼ募?井ｼ晉･ｨ蜴滉ｾ｡ --",
			"\t--------------------",
			"\to_PurchaseGnkBik.PARTNERGNTNK := COALESCE(i_PartnerGntnk, o_PurchaseGnkBik.GNTNK);",
			"\to_PurchaseGnkBik.PARTNERGNKKNGK := PXS_UTILITY.f_ConvertRoundNumberFormat(",
			"\t\to_PurchaseGnkBik.PARTNERGNTNK * i_Qty,\t-- i_TargetValue  蟇ｾ雎｡蛟､",
			"\t\ti_CostRoundType,\t\t\t\t\t\t-- i_RoundType    遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻??ｼ?1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡?ｼ?",
			"\t\t0\t\t\t\t\t\t\t\t\t\t-- i_DecimalPoint 遶ｯ謨ｰ蜃ｦ逅?蠕後?ｮ蟆乗焚轤ｹ譯∵焚",
			"\t);",
			"",
			"\t----------------",
			"\t-- 蜴滉ｾ｡蟾ｮ蛟､蠑? --",
			"\t----------------",
			"\t-- 螳我ｾ｡蜆ｪ蜈茨ｼ井ｻ募?･?ｼ峨＆繧後◆蝣ｴ蜷医?ｯ繝励Λ繧ｹ蛟､縺悟?･繧翫∪縺吶?",
			"\to_PurchaseGnkBik.GNKDISCOUNTTNK := o_PurchaseGnkBik.PARTNERGNTNK - o_PurchaseGnkBik.GNTNK;",
			"\to_PurchaseGnkBik.GNKDISCOUNTKNGK := o_PurchaseGnkBik.PARTNERGNKKNGK - o_PurchaseGnkBik.GNKKNGK;",
			"",
			"\t----------",
			"\t-- 遞朱｡? --",
			"\t----------",
			"\to_PurchaseGnkBik.GNKTAXKNGK := PXS_UTILITY.f_GetZeigaku(",
			"\t\to_PurchaseGnkBik.GNKKNGK,\t-- i_Kngk",
			"\t\ti_TaxType,\t\t\t\t\t-- i_TaxType",
			"\t\ti_TaxRate,\t\t\t\t\t-- i_TaxRate",
			"\t\ti_CostRoundType\t\t\t\t-- i_HsuType",
			"\t);",
			"",
			"\tIF (i_TaxType = '2') THEN -- 2:蜀?遞?",
			"\t\to_PurchaseGnkBik.EXCLUDETAXGNK := o_PurchaseGnkBik.GNKKNGK - o_PurchaseGnkBik.GNKTAXKNGK;",
			"\tELSIF (i_TaxType IN ('1', '3')) THEN -- 1:螟也ｨ弱?3:髱櫁ｪｲ遞?",
			"\t\to_PurchaseGnkBik.EXCLUDETAXGNK := o_PurchaseGnkBik.GNKKNGK;",
			"\tEND IF;",
			"",
			"\t--------------",
			"\t-- 蝠?邂｡蜴滉ｾ｡ --",
			"\t--------------",
			"\t-- https://uniccs.backlog.com/downloadAttachment/9560979/%E5%8D%B8%E5%8E%9F%E4%BE%A1%E3%81%AE%E5%88%A4%E5%AE%9A%E6%96%B9%E6%B3%95%E3%81%A8%E3%82%BB%E3%83%83%E3%83%88%E6%96%B9%E6%B3%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6_20220606.xlsx",
			"\tIF (i_GntnkSelectType = '1') THEN -- 1:蟆ゆｼ昜ｾ｡",
			"\t\to_PurchaseGnkBik.PROFITGNTNK := o_PurchaseGnkBik.GNTNK;",
			"\t\to_PurchaseGnkBik.PROFITGNKTYPE := '1'; -- 1:蜴滉ｾ｡",
			"",
			"\tELSIF (i_GntnkSelectType = '2') THEN -- 2:蟄蝉ｼ夂､ｾ蜊ｸ萓｡",
			"\t\tIF (i_OrderCompany_Cd = i_Syscom00011_ParentCompany_Cd) THEN",
			"\t\t\to_PurchaseGnkBik.PROFITGNTNK := COALESCE(i_WholeSaleGntnk, i_OrderDetailWholeSaleGnTnk);",
			"\t\t\tIF (i_IsWholeSaleGntnkFromPlan) THEN",
			"\t\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '4'; -- 4:蜊ｸ蜴滉ｾ｡?ｼ育音螢ｲ?ｼ?",
			"\t\t\tELSE",
			"\t\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '3'; -- 3:蜊ｸ蜴滉ｾ｡?ｼ亥ｮ夂分?ｼ?",
			"\t\t\tEND IF;",
			"",
			"\t\tELSE",
			"\t\t\tIF (i_OrderCompany_Cd = i_PartnerCompany_Cd) THEN",
			"\t\t\t\to_PurchaseGnkBik.PROFITGNTNK := o_PurchaseGnkBik.GNTNK;",
			"\t\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '1'; -- 蜴滉ｾ｡",
			"",
			"\t\t\tELSE",
			"\t\t\t\to_PurchaseGnkBik.PROFITGNTNK := COALESCE(i_WholeSaleGntnk, i_OrderDetailWholeSaleGnTnk);",
			"\t\t\t\tIF (i_IsWholeSaleGntnkFromPlan) THEN",
			"\t\t\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '4'; -- 4:蜊ｸ蜴滉ｾ｡?ｼ育音螢ｲ?ｼ?",
			"\t\t\t\tELSE",
			"\t\t\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '3'; -- 3:蜊ｸ蜴滉ｾ｡?ｼ亥ｮ夂分?ｼ?",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\tELSIF (i_GntnkSelectType = '3') THEN -- 3:FC蜊ｸ萓｡",
			"\t\to_PurchaseGnkBik.PROFITGNTNK := COALESCE(i_WholeSaleGntnk, i_OrderDetailWholeSaleGnTnk);",
			"\t\tIF (i_IsWholeSaleGntnkFromPlan) THEN",
			"\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '4'; -- 4:蜊ｸ蜴滉ｾ｡?ｼ育音螢ｲ?ｼ?",
			"\t\tELSE",
			"\t\t\to_PurchaseGnkBik.PROFITGNKTYPE := '3'; -- 3:蜊ｸ蜴滉ｾ｡?ｼ亥ｮ夂分?ｼ?",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PROFITGNTNK := i_PartnerGntnk;",
			"\tEND IF;",
			"",
			"\to_PurchaseGnkBik.PROFITGNKKNGK = PXS_UTILITY.f_ConvertRoundNumberFormat(",
			"\t\to_PurchaseGnkBik.PROFITGNTNK * i_Qty,\t-- i_TargetValue  蟇ｾ雎｡蛟､",
			"\t\ti_CostRoundType,\t\t\t\t\t\t-- i_RoundType    遶ｯ謨ｰ蜃ｦ逅?蛹ｺ蛻??ｼ?1:蝗帶昏莠泌?･ 2:蛻?繧頑昏縺ｦ 3:蛻?繧贋ｸ翫￡?ｼ?",
			"\t\t0\t\t\t\t\t\t\t\t\t\t-- i_DecimalPoint 遶ｯ謨ｰ蜃ｦ逅?蠕後?ｮ蟆乗焚轤ｹ譯∵焚",
			"\t);",
			"",
			"\t------------",
			"\t-- 蜊ｸ蜴滉ｾ｡ --",
			"\t------------",
			"\tIF (o_PurchaseGnkBik.PROFITGNKTYPE IN ('3', '4')) THEN -- 3:蜊ｸ蜴滉ｾ｡?ｼ亥ｮ夂分?ｼ峨?4:蜊ｸ蜴滉ｾ｡?ｼ育音螢ｲ?ｼ?",
			"\t\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\t\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\t\to_PurchaseGnkBik.WHOLESALEGNTNK = o_PurchaseGnkBik.PARTNERGNTNK;",
			"\t\tELSE",
			"\t\t\t-- 笘?22/12/01 縺薙?ｮ鬆?逶ｮ縺ｫ縺ｯ莨∫判繧帝←逕ｨ縺励↑縺?縲?FC隲区ｱゅ〒螳夂分縺悟ｿ?隕√↑縺ｮ縺ｧ縲?",
			"\t\t\to_PurchaseGnkBik.WHOLESALEGNTNK = COALESCE(i_ItemWholeSaleGntnk, i_OrderDetailWholeSaleGnTnk);",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\t-------------",
			"\t-- POS蜴滉ｾ｡ --",
			"\t-------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.POSGNTNK = o_PurchaseGnkBik.PARTNERGNTNK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.POSGNTNK = i_ItemPOSGntnk;",
			"\tEND IF;",
			"",
			"\t----------------",
			"\t-- 繝槭せ繧ｿ蜴滉ｾ｡ --",
			"\t----------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.MASTERORDERGNTNK = o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.MASTERORDERGNTNK = i_ItemMasterGntnk;",
			"\tEND IF;",
			"",
			"\t--------------",
			"\t-- NET1蜴滉ｾ｡ --",
			"\t--------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.NET1GNTNK = o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.NET1GNTNK = i_ItemNet1Gntnk;",
			"\tEND IF;",
			"",
			"\t--------------",
			"\t-- NET2蜴滉ｾ｡ --",
			"\t--------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.NET2GNTNK = o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.NET2GNTNK = i_ItemNet2Gntnk;",
			"\tEND IF;",
			"",
			"\t------------------",
			"\t-- 蜊ｸ蜴滉ｾ｡(莨∫判) --",
			"\t------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∽ｼ∫判縺ｮ讎ょｿｵ縺ｯ縺ｪ縺?縺ｮ縺ｧNULL縲?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PlanWholeSaleGntnk = NULL;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.PlanWholeSaleGntnk = i_PlanWholeSaleGntnk;",
			"\tEND IF;",
			"",
			"\t--------------------",
			"\t-- NET1蜴滉ｾ｡(莨∫判) --",
			"\t--------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∽ｼ∫判縺ｮ讎ょｿｵ縺ｯ縺ｪ縺?縺ｮ縺ｧNULL縲?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PlanNet1Gntnk = NULL;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.PlanNet1Gntnk = i_PlanNet1Gntnk;",
			"\tEND IF;",
			"",
			"\t--------------------",
			"\t-- NET2蜴滉ｾ｡(莨∫判) --",
			"\t--------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∽ｼ∫判縺ｮ讎ょｿｵ縺ｯ縺ｪ縺?縺ｮ縺ｧNULL縲?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PlanNet2Gntnk = NULL;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.PlanNet2Gntnk = i_PlanNet2Gntnk;",
			"\tEND IF;",
			"",
			"\t----------------------",
			"\t-- 繝槭せ繧ｿ蜴滉ｾ｡(莨∫判) --",
			"\t----------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∽ｼ∫判縺ｮ讎ょｿｵ縺ｯ縺ｪ縺?縺ｮ縺ｧNULL縲?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PlanMasterOrderGntnk = NULL;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.PlanMasterOrderGntnk = i_PlanMasterOrderGntnk;",
			"\tEND IF;",
			"",
			"\t-------------------",
			"\t-- POS蜴滉ｾ｡(莨∫判) --",
			"\t-------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∽ｼ∫判縺ｮ讎ょｿｵ縺ｯ縺ｪ縺?縺ｮ縺ｧNULL縲?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.PlanPOSGntnk = NULL;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.PlanPOSGntnk = i_PlanPOSGntnk;",
			"\tEND IF;",
			"",
			"\t----------",
			"\t-- 蟒ｺ蛟､ --",
			"\t----------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.QuoteGntnk = o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.QuoteGntnk = i_QuoteGntnk;",
			"\tEND IF;",
			"",
			"\t---------------------",
			"\t-- 繝｡繝ｼ繧ｫ繝ｼNET蜴滉ｾ｡ --",
			"\t---------------------",
			"\t-- 蛟､蠑輔?ｮ蝣ｴ蜷医∵欠螳壼次萓｡縺ｧ荳頑嶌縺阪?",
			"\tIF (i_DenpKind IN ('14', '15')) THEN",
			"\t\to_PurchaseGnkBik.MakerNetGntnk = o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"\tELSE",
			"\t\to_PurchaseGnkBik.MakerNetGntnk = i_MakerNetGntnk;",
			"\tEND IF;",
			"",
			"\t----------------",
			"\t-- 莨∫判繧ｳ繝ｼ繝? --",
			"\t----------------",
			"\to_PurchaseGnkBik.PLAN_CD := i_Plan_Cd;",
			"",
			"\t-------------------------------------------------------------",
			"\t-- [2022/12/01霑ｽ蜉?]                                        --",
			"\t-- 蜊ｸ蜴滉ｾ｡蜈･蜉帛庄閭ｽ蛹ｺ蛻?                                      --",
			"\t-- EA02.謇区嶌莉募?･莨晉･ｨ蜈･蜉帙〒蜊ｸ蜴滉ｾ｡繧呈遠縺ｦ繧九°縺ｩ縺?縺具ｼ溘?ｮ繝輔Λ繧ｰ --",
			"\t-------------------------------------------------------------",
			"\tIF (",
			"\t\ti_DenpKind NOT IN ('14', '15')\t\t\t\t\tAND -- 蛟､蠑輔?ｯ蟶ｸ縺ｫ蜈･蜉帑ｸ榊庄",
			"\t\to_PurchaseGnkBik.PROFITGNKTYPE IN ('3', '4')\tAND -- 3:蜊ｸ蜴滉ｾ｡?ｼ亥ｮ夂分?ｼ峨?4:蜊ｸ蜴滉ｾ｡?ｼ育音螢ｲ?ｼ?",
			"\t\ti_NoMasterGnkFlag",
			"\t) THEN",
			"\t\to_PurchaseGnkBik.WHOLESALEGNKINPUTTYPE\t:= '1';",
			"\tELSE",
			"\t\to_PurchaseGnkBik.WHOLESALEGNKINPUTTYPE\t:= '0';",
			"\tEND IF;",
			"",
			"\t-------------------------------------------",
			"\t-- [2023/06/11 霑泌刀繧､繝ｳ繝懊う繧ｹ蟇ｾ蠢懊〒霑ｽ蜉?] --",
			"\t-- 遞守紫縲∽ｻ募?･譛滄俣諠?蝣ｱ?ｼ托ｼ亥渕蜿門ｼ募ｹｴ譛域律?ｼ?  --",
			"\t-------------------------------------------",
			"\to_PurchaseGnkBik.TAXRATE\t\t:= i_TaxRate;",
			"\to_PurchaseGnkBik.PURCHASEINFO1\t:= i_PurchaseInfo1;",
			"",
			"\tRETURN o_PurchaseGnkBik;",
			"END;",
			"$function$",
			""
		],
		"description": "Get purchase Gnk Bik"
	}
}