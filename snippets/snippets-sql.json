{
	"Create SQL PROGRAMING": {
		"prefix": "csp",
		"body": [
			"SET CLIENT_ENCODING TO 'SJIS';\n",
			"\n/*\n\t[サブ機能  ] EX.基本マスタ\n\t[機能ＩＤ  ] EX02\n\t[機能名称  ] 分類マスタ\n\t[リビジョン] 1\n\t[関数名    ] p_Example\n\t[作 成 日  ] 2021/08/17\n\t[作 成 者  ] UNICCS/y-mano\n\t[更新履歴  ] \n*/\n\n",
			"CREATE OR REPLACE FUNCTION PXC_Example_001.p_Example (\n\ti_Example\tIN\tVARCHAR\n) RETURNS REFCURSOR AS $$",
			"\n/*",
			"\n$START\n",
			"$FUNCTION\\1\n\t分類マスタ（第２分類）を検索します。\n$PAR\\1\n\t第２分類コード\n$RETURN\\1\n\t結果セット\n$END\n*/\n",
			"DECLARE\n\tls_SqlErrMsg\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE := '';\n\tls_SqlState\t\tVARCHAR(5);\n\nBEGIN\n\n\nEXCEPTION\n\tWHEN OTHERS THEN\n\t\tSELECT  SQLSTATE\tINTO ls_SqlState;\n\t\tSELECT  SQLERRM\t\tINTO ls_SqlErrMsg;\n\t\tPERFORM PXS_STANDARD.p_NoticeError(\n\t\t\t'PXC_Example_001.p_Example.SYSTEMERROR',\n\t\t\tls_SqlState,\n\t\t\tls_SqlErrMsg\n\t\t);\nEND;\n$$ LANGUAGE 'plpgsql';\n\nRESET CLIENT_ENCODING;"
		],
		"description": "Create SQL PROGRAMING"
	},

	"Get User Info": {
		"prefix": "gui",
		"body": [
			"\tlrec_UserInfo\t\t\tRECORD;",
			"\tlrec_UserInfo\t:= PXS_USER.p_GetUserInfo();"
		],
		"description": "Get User Info"
	},

	"Convert DateTime To Character": {
		"prefix": "cdtc",
		"body": [
			"TO_CHAR(lrec_CheckDataNow.UPDDATETIME, 'YYYY/MM/DD HH24:MI:SS')"
		],
		"description": "Convert DateTime To Character"
	},

	"Convert Date To Character": {
		"prefix": "cdc",
		"body": [
			"TO_CHAR(lrec_CheckDataNow.DATE 'YYYY/MM/DD')"
		],
		"description": "Convert Date To Character"
	},

	"Convert String To Date": {
		"prefix": "csd",
		"body": [
			"fx_ConvertStringToDate(i_Reflectdate, 'YYYY/MM/DD');"
		],
		"description": "Convert String To Date"
	},

	"EXCEPTION SQL PROGRAMING": {
		"prefix": "exc",
		"body": [
			"EXCEPTION\n\tWHEN RAISE_EXCEPTION THEN\n\t\tSELECT\tSQLERRM\tINTO ls_SqlErrMsg;\n\t\tPERFORM PXS_STANDARD.p_NoticeErrorExpansion(\n\t\t\t'ERROR',\n\t\t\t'',\n\t\t\tls_SqlErrMsg\n\t\t);\n\tWHEN OTHERS THEN\n\t\tSELECT\tSQLSTATE\tINTO ls_SqlState;\n\t\tSELECT\tSQLERRM\t\tINTO ls_SqlErrMsg;\n\t\tPERFORM PXS_STANDARD.p_NoticeError(\n\t\t\t'PXC_EXAMPLE_001.p_Example.SYSTEMERROR',\n\t\t\tls_SqlState,\n\t\t\tls_SqlErrMsg\n\t\t);"
		],
		"description": "EXCEPTION SQL PROGRAMING"
	},

	"Exception Message": {
		"prefix": "excm",
		"body": [
			"\t\t\tls_ExceptionMessage := PXS_STANDARD.f_GetResourceVal(\n\t\t\t\t'PXC_EXAMPLE_001.p_EXAMPLE.NAME_RESOURCE',\n\t\t\t\ti_Params1,\n\t\t\t\ti_Params2\n\t\t\t);\n\t\t\tRAISE '%', ls_ExceptionMessage USING ERRCODE = 'raise_exception';"
		],
		"description": "Exception Message"
	},

	"Get Resource Value": {
		"prefix": "grv",
		"body": [
			"PXS_STANDARD.f_GetResourceVal('PXC_EXAMPLE_001.p_Example.NAME_RESOURCE', i_Params1, i_Params2);"
		],
		"description": "Get Resource Value"
	},

	"Create Cursor": {
		"prefix": "fetch",
		"body": [
			"\tlrec_Example\t\t\tTABLE_EXAMPLE%ROWTYPE;",
			"\tlcur_Example CURSOR FOR\n\t\tSELECT\t*\n\t\tFROM\tTABLE_EXAMPLE\n\t\tWHERE\\CONDITION_1\t= CONDITION_OTHER\n\t\tAND\t\\CONDITION_2\t\t\t= CONDITION_OTHER\n\t\tFOR UPDATE;",
			"\t\tOPEN lcur_Example;\n\t\tFETCH lcur_Example INTO lrec_Example;\n\t\t\t-- TO DO\n\t\t\t\n\t\tCLOSE lcur_Example;"
		],
		"description": "Create Cursor"
	},

	"Create pxs builder sql": {
		"prefix": "createbuilder",
		"body": [
			"",
			"\treturnCursor\tREFCURSOR;",
			"",
			"PERFORM PXS_PLSBUILDER.Initialize();",
			"",
			"",
			"PERFORM PXS_PLSBUILDER.Append('\tSELECT\t*');",
			"",
			"",
			"",
			"\tOPEN returnCursor FOR EXECUTE PXS_PLSBUILDER.Get();",
			"",
			"\tPERFORM PXS_PLSBUILDER.Drop();",
			"",
			"\tRETURN returnCursor;",
			""
		],
		"description": "Create pxs builder sql"
	},

	"Create pxs builder append sql": {
		"prefix": "createbuilder.append",
		"body": [
			"PERFORM PXS_PLSBUILDER.Append('\tSELECT\t*');"
		],
		"description": "Create pxs builder append sql"
	},

	"Add params sp": {
		"prefix": "i_",
		"body": [
			"i_$1\t\tIN\tVARCHAR,"
		],
		"description": "Add params sp"
	},

	"declare string sp": {
		"prefix": "ls_",
		"body": [
			"ls_$1\t\tVARCHAR;"
		],
		"description": "declare string sp"
	},

	"declare record sp": {
		"prefix": "lrec_",
		"body": [
			"lrec_$1\t\tRECORD;"
		],
		"description": "declare record sp"
	},

	"declare boolean sp": {
		"prefix": "lb_",
		"body": [
			"lb_$1\t\tBOOLEAN := FALSE;"
		],
		"description": "declare boolean sp"
	},

	"declare string config sp": {
		"prefix": "lsconfig",
		"body": [
			"ls_Config_$1\t\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;"
		],
		"description": "declare string config sp"
	},

	"declare number sp": {
		"prefix": "ln_",
		"body": [
			"ln_$1\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;"
		],
		"description": "declare number sp"
	},

	"declare date sp": {
		"prefix": "ld_",
		"body": [
			"ld_$1\t\t\t\t\t\tDATE;"
		],
		"description": "declare number sp"
	},

	"declare date time sp": {
		"prefix": "ldt_",
		"body": [
			"ldt_$1\t\t\t\t\t\\TIMESTAMP;"
		],
		"description": "declare date time sp"
	},

	"declare refcursor sp": {
		"prefix": "lcur_",
		"body": [
			"\tlcur_$1\t\t\t\t\tREFCURSOR;"
		],
		"description": "declare refcursor sp"
	},

	"declare type sp": {
		"prefix": "o_",
		"body": [
			"o_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;"
		],
		"description": "declare type sp"
	},

	"declare contant sp": {
		"prefix": "constant",
		"body": [
			"C_ARRAY_DELIMITER\t\t\t\t\t\tCONSTANT VARCHAR\t\t\t\t\t\t\t\t:= ',';"
		],
		"description": "declare contant sp"
	},

	"declare string code sp": {
		"prefix": "lscode",
		"body": [
			"ls_$1_Cd\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.STORE_CD%TYPE\t\t\t:= '';"
		],
		"description": "declare string code sp"
	},

	"declare array sp": {
		"prefix": "la_",
		"body": [
			"\tla_$1\t\t\t\tVARCHAR[];"
		],
		"description": "declare array sp"
	},

	"declare function sp": {
		"prefix": "lf_",
		"body": [
			"\tlf_FuncAuthSetting\tTYPE_FUNCAUTHSETTING;"
		],
		"description": "declare array sp"
	},

	"For Loop From Cursor": {
		"prefix": "For...Loop",
		"body": [
			"\tlrec_Example\t\t\tRECORD;",
			"\tlcur_Example CURSOR FOR\n\t\tSELECT\tCOLUMN_EXAMPLE\n\t\tFROM\tTABLE_NAME\n\t\tWHERE\tCONDITION_1\t\t= CONDITION_OTHER;\n",
			"\tFOR lrec_Example IN lcur_Example LOOP\n\t\t-- TO DO LIST\n\tEND LOOP;"
		],
		"description": "LOOP DATA"
	},

	"For Loop Direction": {
		"prefix": "For",
		"body": [
			"\tlrec_Example\t\t\t\t\t\t\tRECORD;",
			"\tFOR lrec_ReservePartner IN (\n\t\tSELECT\t*\n\t\tFROM\tTABLE_NAME\n\t\tWHERE\tCONDITION_1\t= CONDITION_1\n\t\tAND\t\tCONDITION_2\t= CONDITION_2\n\t\tORDER BY COLUM_NAME\n\t) LOOP",
			"\tEND LOOP;"
		],
		"description": "LOOP DATA"
	},

	"Create Reference Cursor": {
		"prefix": "refcursor",
		"body": [
			"\treturnCursor\tREFCURSOR;",
			"\tOPEN returnCursor FOR\n\t\tSELECT\tCOLUMN1_EXAMPLE\n\t\tFROM\tUMF_CLASS4 CLASS\n\t\tWHERE\tCONDITION_1\t= CONDITION_OTHER\n\t\tAND\t\tCONDITION_1\t= CONDITION_OTHER;\n\n\tRETURN returnCursor;"
		],
		"description": "Create Reference Cursor"
	},

	"IF": {
		"prefix": "if",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF"
	},

	"IF... ELSE": {
		"prefix": "if...else",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tELSE\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF... ELSE"
	},

	"IF... ELSEIF...ELSE": {
		"prefix": "if...elseif...else",
		"body": [
			"\n",
			"\tIF ($1) THEN\n",
			"\tELSIF\n",
			"\tELSE\n",
			"\tEND IF;",
			"\n"
		],
		"description": "IF... ELSEIF...ELSE"
	},

	"Switch...Case...multi": {
		"prefix": "case...when...multi",
		"body": [
			"",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN\n\t\t\t\t\tls_DenpKind\t:= '10';\n\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;\n",
			"\t\t\t\tWHEN ('2') THEN\n\t\t\t\t\tls_DenpKind\t:= '12';\n\t\t\t\t\tls_DenpType\t:= lrec_ReturnHeader.DENPTYPE;\n",
			"\t\t\t\tELSE\n\t\t\t\t\tls_DenpKind\t:= '10';\n\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;\n",
			"\t\t\tEND;\n"
		],
		"description": "Switch...Case...multi"
	},

	"Switch...Case...single": {
		"prefix": "case...when...single",
		"body": [
			"CASE WHEN COLUMNDATA.EXAMPLE = '0' THEN COLUMNDATA.EXAMPLE ELSE COLUMNDATA.EXAMPLE2 END"
		],
		"description": "Switch...Case...single"
	},

	"Delete Query Format": {
		"prefix": "delete",
		"body": [
			"DELETE\tFROM TABLE_NAME PPN",
			"WHERE\tEXISTS (\tSELECT\t1\n\t\t\t\t\tFROM\tTMP_TABLE_NAME COLUMNDATA\n\t\t\t\t\tWHERE\tCOLUMNDATA.COLUMN1\t\t\t= PPN.COLUMN_1\n\t\t\t\t\tAND\t\tCOLUMNDATA.VALIDFLAG\t\t= '0'\n\t\t);"
		],
		"description": "Delete Query Format"
	},

	"Update Query Format": {
		"prefix": "update",
		"body": [
			"\n",
			"\t\t\t\t\tUPDATE\tTABLE_NAME PTN",
			"\t\t\t\t\tSET\t\tCOLUMN1\t\t\t\t\t= DATA.COLUMN1,",
			"\t\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\t\tFROM\tTMP_TABLE_NAME COLUMNDATA",
			"\t\t\t\t\tWHERE\tPTN.PARTNER_CD\t= COLUMNDATA.COLUMN1;",
			"\n"
		],
		"description": "Update Query Format"
	},

	"Insert Query Format": {
		"prefix": "insert",
		"body": [
			"\n",
			"\t\t\t\t\tINSERT INTO TABLE_NAME (",
			"\t\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\t\tRSVCHAR2,",
			"\t\t\t\t\t\t\tRSVCHAR3,",
			"\t\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t\t)",
			"\t\t\t\t\tSELECT\tCOLUMN1,",
			"\t\t\t\t\t\t\tCOLUMN2,",
			"\t\t\t\t\t\t\tCOLUMN3,",
			"\t\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\t\tFROM\tTMP_EXAMPLE_COLUMNDATA COLUMNDATA",
			"\t\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\t\tFROM\tTABLE_NAME PTN",
			"\t\t\t\t\t\t\t\tWHERE\tPTN.EXAMPLE_CD\t= COLUMNDATA.COLUMN1",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Insert Query Format"
	},

	"Get System Config Format": {
		"prefix": "gsc",
		"body": [
			"\n",
			"\tla_ConfigList\t\t\t\tTEXT[];",
			"\tln_SysItemClass1Length\t\tINTEGER;",
			"\tln_SysItemClass2Length\t\tINTEGER;",
			"\tln_SysItemClass3Length\t\tINTEGER;",
			"",
			"\t-- システムコンフィグ取得",
			"\t-- プロシージャ内で使用するシステムコンフィグ一覧",
			"\tla_ConfigList := ARRAY ['ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH'];",
			"",
			"\t-- 定義したシステムコンフィグの値をデータベースより取得",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig (NULL, la_ConfigList);",
			"",
			"\t-- 第１分類コードの桁数",
			"\tln_SysItemClass1Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INTEGER);",
			"",
			"\t-- 第２分類コードの桁数",
			"\tln_SysItemClass2Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INTEGER);",
			"",
			"\t-- 第３分類コードの桁数",
			"\tln_SysItemClass3Length := CAST(PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INTEGER);",
			"\n"
		],
		"description": "Get System Config Format"
	},

	"Create temporary table by defined column": {
		"prefix": "ctt1",
		"body": [
			"\n",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_TABLE_NAME (",
			"\t\tUSER_CD\t\t\t\t\tVARCHAR(05),",
			"\t\tSERVER_CD\t\t\t\tVARCHAR(10) NOT NULL,",
			"\t\tIMPORTBATCHKEY\t\t\tNUMERIC(10, 0) NOT NULL,",
			"\t\tCSVLINENO\t\t\t\tNUMERIC(10, 0) NOT NULL,",
			"\t\tCOLUMN1\t\t\t\t\tVARCHAR(10) NOT NULL,",
			"\t\tCOLUMN4\t\t\t\t\tVARCHAR(01) NOT NULL,",
			"\t\tCOLUMN5\t\t\t\t\tVARCHAR(10) NOT NULL",
			"\t);",
			"",
			"\tTRUNCATE TABLE TMP_TABLE_NAME;",
			"",
			"\tINSERT INTO TMP_TABLE_NAME",
			"\t\tSELECT\tUSER_CD,",
			"\t\t\t\tMAKER_CD,",
			"\t\t\t\tVALIDFLAG,",
			"\t\t\t\tNAME,",
			"\t\t\t\tANAME,",
			"\t\t\t\tMAKERTYPE,",
			"\t\t\t\tPARENTMAKER_CD",
			"\t\tFROM\tUMF_TABLE_NAME;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_TABLE_NAME ON TMP_TABLE_NAME (MAKER_CD, USER_CD);",
			"\n"
		],
		"description": "Create temporary table by defined column"
	},

	"Create temporary table from table other": {
		"prefix": "ctt2",
		"body": [
			"\n",
			"\t-- 更新用テンポラリテーブル（拡張)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tCOMPANY_CD,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tFLOOR_CD,",
			"\t\t\t\tREDECORATION_CD,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\tCLASSTYPE,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tPAYSCHDATE,",
			"\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\tTRADETYPE,",
			"\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\tTOTALQTY,",
			"\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\tORDERDATE,",
			"\t\t\t\tDELIVERYDATE,",
			"\t\t\t\tORDERMETHOD,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tDELIVERYNO,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPHEADER ON TMP_EA25_DENPHEADER (SYSDENPNO);",
			"\n"
		],
		"description": "Create temporary table by defined column"
	},

	"Get Inspect Date": {
		"prefix": "gid",
		"body": [
			"\n",
			"\tld_InspectDateCheck\t\t\t\t\t\tDATE;",
			"",
			"\t\t\tld_InspectDateCheck\t:= PXS_UTILITY.f_GetDenpAccountDate (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, --STOREFLOOR_CD",
			"\t\t\t\t\t\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\tls_DenpKind,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3, --PARTNER_CD",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\t\t\tls_Config_00201,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4, --CLASS_CD",
			"\t\t\t\t\t\t\t\t\tls_Config_00009,",
			"\t\t\t\t\t\t\t\t\tls_Config_00204",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Inspect Date"
	},

	"Check Error Import Pattern": {
		"prefix": "erp",
		"body": [
			"\n",
			"\t\t-- 発注実績物流センター不整合チェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '50108') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 発注実績と異なる物流センターコードです。",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"\n"
		],
		"description": "Check Error Import Pattern"
	},

	"Accept CSV Update Error Data": {
		"prefix": "err",
		"body": [
			"\n",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 発注実績と異なる物流センターコードです。",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Accept CSV Update Error Data"
	},

	"Get Master Item": {
		"prefix": "gmi",
		"body": [
			"\n",
			"\tls_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"",
			"",
			"\t\tls_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\tlrec_MasterItem\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, --STOREFLOOR_CD",
			"\t\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\tls_CLASS1_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS2_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS3_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS4_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS5_CD",
			"\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Master Item"
	},

	"Get Purchase GnkBik": {
		"prefix": "gpg",
		"body": [
			"\n",
			"\to_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;",
			"",
			"\t\to_PurchaseGnkBik := PXS_UTILITY.f_GetPurchaseGnkBik (",
			"\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC), -- QTY",
			"\t\t\t\tln_TmpPartnerGntnk,",
			"\t\t\t\tls_DenpKind,",
			"\t\t\t\tls_DenpType,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN3, -- PARTNER_CD",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- STOREFLOOR_CD",
			"\t\t\t\tls_Sku_Cd,",
			"\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), -- DENPINSPECTDATE",
			"\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN17 = '1' THEN TRUE ELSE FALSE END, -- WHOLESALEGNTNK",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\tfx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9), -- LINENO",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\tCAST(NULLIF(lrec_CSVUploadColumnData.COLUMN18, '') AS NUMERIC) -- 'PARTNERGNKFORCEFLAG",
			"\t\t);",
			"\n"
		],
		"description": "Get Purchase GnkBik"
	},

	"Get Attribute Class By Item Store": {
		"prefix": "gsc",
		"body": [
			"\n",
			"\tls_ItemAttributeType\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ITEMATTRIBUTETYPE%TYPE;",
			"\tls_ParentClass1_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS1_CD%TYPE;",
			"\tls_AttributeClass1_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS1_CD%TYPE;",
			"\tls_ParentClass2_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS2_CD%TYPE;",
			"\tls_AttributeClass2_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS2_CD%TYPE;",
			"\tls_ParentClass3_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS3_CD%TYPE;",
			"\tls_AttributeClass3_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS3_CD%TYPE;",
			"\tls_ParentClass4_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS4_CD%TYPE;",
			"\tls_AttributeClass4_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS4_CD%TYPE;",
			"\tls_ParentClass5_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS5_CD%TYPE;",
			"\tls_AttributeClass5_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS5_CD%TYPE;",
			"",
			"\t\t\t\tSELECT\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD",
			"\t\t\t\tINTO\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_ParentClass1_Cd,",
			"\t\t\t\t\t\tls_AttributeClass1_Cd,",
			"\t\t\t\t\t\tls_ParentClass2_Cd,",
			"\t\t\t\t\t\tls_AttributeClass2_Cd,",
			"\t\t\t\t\t\tls_ParentClass3_Cd,",
			"\t\t\t\t\t\tls_AttributeClass3_Cd,",
			"\t\t\t\t\t\tls_ParentClass4_Cd,",
			"\t\t\t\t\t\tls_AttributeClass4_Cd,",
			"\t\t\t\t\t\tls_ParentClass5_Cd,",
			"\t\t\t\t\t\tls_AttributeClass5_Cd",
			"\t\t\t\tFROM\tPXS_UTILITY.f_GetAttributeClassByItemStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- STOREFLOOR_CD",
			"\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\tld_InspectDateCheck",
			"\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Attribute Class By Item Store"
	},

	"To Date Format": {
		"prefix": "to_date",
		"body": [
			"\n",
			"TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\n"
		],
		"description": "To Date Format"
	},

	"Get Tax Rate": {
		"prefix": "gtr",
		"body": [
			"\n",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\n"
		],
		"description": "Get Tax Rate"
	},

	"Select Query Normal": {
		"prefix": "sqn",
		"body": [
			"\n",
			"SELECT * FROM $1 WHERE CONDITION_1 = CONDITION_OTHER",
			"\n"
		],
		"description": "Select Query Normal"
	},

	"Select Query Format": {
		"prefix": "sqf",
		"body": [
			"\n",
			"\t\tSELECT  PXS_USER.p_GetOperatorName(NULL, CLASS2.ADDOPERATOR_CD)\tAS ADDOPERATOR_CD,",
			"\t\t\t\tPXS_USER.p_GetOperatorName(NULL, CLASS2.UPDOPERATOR_CD)\tAS UPDOPERATOR_CD,",
			"\t\t\t\tTO_CHAR(CLASS2.ADDDATETIME, 'YYYY/MM/DD HH24:MI:SS')\tAS ADDDATETIME,",
			"\t\t\t\tTO_CHAR(CLASS2.UPDDATETIME, 'YYYY/MM/DD HH24:MI:SS')\tAS UPDDATETIME,",
			"\t\t\t\tCLASS2.ADDPROC_CD,",
			"\t\t\t\tCLASS2.UPDPROC_CD",
			"\t\tFROM\tUMF_CLASS CLASS2",
			"\t\t\t\tLEFT OUTER JOIN UMF_RESERVECLASS RESRVCLASS2",
			"\t\t\t\t\tON  RESRVCLASS2.ITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\t\t\tAND RESRVCLASS2.CLASS_CD\t\t\t= CLASS2.CLASS_CD",
			"\t\t\t\t\tAND RESRVCLASS2.CLASSTYPE\t\t\t= CLASS2.CLASSTYPE",
			"\t\t\t\t\tAND RESRVCLASS2.REFLECTDATE\t\t\t> CAST(CURRENT_TIMESTAMP AS DATE)",
			"\t\tWHERE\tCLASS2.ITEMATTRIBUTETYPE\t\t\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\tAND\t\tCLASS2.CLASSTYPE\t\t\t\t\t= '2';",
			"\n"
		],
		"description": "Select Query Format"
	},

	"Get Operator Name": {
		"prefix": "gon",
		"body": [
			"\n",
			"PXS_USER.p_GetOperatorName(NULL, OPERATOR_CD)",
			"\n"
		],
		"description": "Get Operator Name"
	},

	"Array Format": {
		"prefix": "array",
		"body": [
			"\n",
			"ARRAY ['ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH']",
			"\n"
		],
		"description": "Array Format"
	},

	"Get Account Pay Date": {
		"prefix": "getaccountpaydate",
		"body": [
			"\n",
			"\t\t\t\t\t\tSELECT\tPAYDATE,",
			"\t\t\t\t\t\t\t\tDELIMITDATE",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.PAYSCHDATE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.APCLOSINGDATE",
			"\t\t\t\t\t\tFROM\tPXS_UTILITY.f_GetAccountPayDate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t'0'",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Account Pay Date"
	},

	"Check Exist Session Array Company": {
		"prefix": "checksessioncompany",
		"body": [
			"\n",
			"\tlb_existsCompany\tBOOLEAN;",
			"",
			"\tlb_existsCompany\t:= PXS_UTILITY.f_ExistsArrayCompany();",
			"\n"
		],
		"description": "Check Exist Session Array Company"
	},

	"Check Session Array Store": {
		"prefix": "checksessionstore",
		"body": [
			"\n",
			"\tlb_existsStore\t\tBOOLEAN;",
			"",
			"\t\tlb_existsStore\t\t:= PXS_UTILITY.f_ExistsArrayStore();",
			"\n"
		],
		"description": "Check Session Array Store"
	},

	"Check Session Array Update Operator": {
		"prefix": "checksessionstore",
		"body": [
			"\n",
			"\tlb_ExistsArrayUpdOperator\t\tBOOLEAN\t\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\t\tlb_ExistsArrayUpdOperator\t\t:= PXS_UTILITY.f_ExistsArrayUpdOperator();",
			"\n"
		],
		"description": "Check Session Array Update Operator"
	},

	"Check Session Array Floor": {
		"prefix": "checksessionfloor",
		"body": [
			"\n",
			"\tlb_existsFloor\t\tBOOLEAN;",
			"",
			"\tlb_existsFloor\t\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Array Floor"
	},

	"Check Session Array Class2": {
		"prefix": "checksessionclass2",
		"body": [
			"\n",
			"\tlb_ExistsArrayClass2\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass2();",
			"\n"
		],
		"description": "Check Session Array Class2"
	},

	"Check Session Array Class3": {
		"prefix": "checksessionclass3",
		"body": [
			"\n",
			"lb_ExistsArrayClass3\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass3();",
			"\n"
		],
		"description": "Check Session Array Class3"
	},

	"Check Session Array Class4": {
		"prefix": "checksessionclass4",
		"body": [
			"\n",
			"lb_ExistsArrayClass4\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass4();",
			"\n"
		],
		"description": "Check Session Array Class4"
	},

	"Check Session Array Class5": {
		"prefix": "checksessionclass5",
		"body": [
			"\n",
			"lb_ExistsArrayClass5\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayClass5();",
			"\n"
		],
		"description": "Check Session Array Class5"
	},

	"Check Session Array Sku": {
		"prefix": "checksessionsku",
		"body": [
			"\n",
			"lb_ExistsArraySku\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArraySku();",
			"\n"
		],
		"description": "Check Session Array Sku"
	},

	"Check Session Array StoreFloor": {
		"prefix": "checksessionstorefloor",
		"body": [
			"\n",
			"lb_ExistsArrayStoreFloor\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Array StoreFloor"
	},

	"Check Session Array Logistics": {
		"prefix": "checksessionlogistics",
		"body": [
			"\n",
			"lb_ExistsArrayClass3\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsStoreFloor();",
			"\n"
		],
		"description": "Check Session Array Logistics"
	},

	"Check Session Array Partner": {
		"prefix": "checksessionpartner",
		"body": [
			"\n",
			"\tlb_ExistsPartner\tBOOLEAN := FALSE;",
			"",
			"\tlb_ExistsPartner\t:= PXS_UTILITY.f_ExistsArrayPartner();",
			"\n"
		],
		"description": "Check Session Array Partner"
	},

	"Check Session Array PayPartner": {
		"prefix": "checksessionpaypartner",
		"body": [
			"\n",
			"\tlb_ExistsArrayPayPartner\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsArrayPayPartner();",
			"\n"
		],
		"description": "Check Session Array PayPartner"
	},

	"Check Session Array Ingredient": {
		"prefix": "checksessioningredient",
		"body": [
			"\n",
			"\tlb_ExistsIngredient\t\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsIngredient();",
			"\n"
		],
		"description": "Check Session Array PayPartner"
	},

	"Check Session Array SuibaiType": {
		"prefix": "checksessionsuibaitype",
		"body": [
			"\n",
			"\tlb_ExistsSuibaiType\t\tBOOLEAN\t\t\t\t\t\t\t\t:= PXS_UTILITY.f_ExistsArraySuibaiType();",
			"\n"
		],
		"description": "Check Session Array SuibaiType"
	},

	"Check Session Array Operator": {
		"prefix": "checksessionoperator",
		"body": [
			"\n",
			"\tlb_existsOperator\t\t\t\tBOOLEAN := PXS_UTILITY.f_ExistsArrayOperator();",
			"\n"
		],
		"description": "Check Session Array Operator"
	},

	"Check Session Array Plan No": {
		"prefix": "checksessionplanno",
		"body": [
			"\n",
			"\tlb_ExistsArrayPlanNo\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayPlanNo();",
			"\n"
		],
		"description": "Check Session Array Plan No"
	},

	"Check Session Array Plan Code": {
		"prefix": "checksessionplancd",
		"body": [
			"\n",
			"\tlb_ExistsPlan\t\t\t\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayPlanCode();",
			"\n"
		],
		"description": "Check Session Array Plan Code"
	},

	"Check Session Array Error Code": {
		"prefix": "checksessionerrorcode",
		"body": [
			"\n",
			"\tlb_ExistsArrayErrorCode\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayErrorCode();",
			"\n"
		],
		"description": "Check Session Array Error Code"
	},

	"Check Session Array Attribute Pattern": {
		"prefix": "checksessionattributepattern",
		"body": [
			"\n",
			"\tlb_ExistsPattern\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsPattern\t\t\t= PXS_UTILITY.f_ExistsArrayAttributePattern();",
			"\n"
		],
		"description": "Check Session Array Attribute Pattern"
	},

	"Check Session Array Attribute Group": {
		"prefix": "checksessionattibutegroup",
		"body": [
			"\n",
			"\tlb_ExistsGroup\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsGroup\t\t\t\t= PXS_UTILITY.f_ExistsArrayAttributeGroup();",
			"\n"
		],
		"description": "Check Session Array Attribute Group"
	},

	"Check Session Array OffsetCategory": {
		"prefix": "checksessionoffsetcategory",
		"body": [
			"\n",
			"\tlb_ExistsArrayOffsetCategory\tBOOLEAN;",
			"",
			"\tlb_ExistsArrayOffsetCategory\t:= PXS_UTILITY.f_ExistsArrayOffsetCategory();",
			"\n"
		],
		"description": "Check Session Array OffsetCategory"
	},

	"Check Session Array Contract Company": {
		"prefix": "checksessioncontractcompany",
		"body": [
			"\n",
			"\tlb_ExistsArrayContractCompany\tBOOLEAN;",
			"",
			"\tlb_ExistsArrayContractCompany\t:= PXS_UTILITY.f_ExistsArrayContractCompany();",
			"\n"
		],
		"description": "Check Session Contract Company"
	},

	"Check Session Array StoreGroup": {
		"prefix": "checksessionstoregroup",
		"body": [
			"\n",
			"\tlb_ExistsArraystoreGroup\tBOOLEAN;",
			"",
			"\t-- 複数選択時のグループコードを取得",
			"\tlb_ExistsArraystoreGroup\t:= PXS_UTILITY.f_ExistsArrayStoreGroup();",
			"\n"
		],
		"description": "Check Session Array StoreGroup"
	},

	"Check Session Array RackDisplayUse": {
		"prefix": "checksessionrachdisplayuse",
		"body": [
			"\n",
			"\tlb_ExistsRackDisplayUse\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsRackDisplayUse\t\t\t\t= PXS_UTILITY.f_ExistsRackDisplayUse();",
			"\n"
		],
		"description": "Check Session Array RackDisplayUse"
	},

	"Check Session Array RackDisplayGroup": {
		"prefix": "checksessionrackdisplaygroup",
		"body": [
			"\n",
			"\tlb_ExistsRackDisplayGroup\t\t\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsRackDisplayGroup\t\t\t\t= PXS_UTILITY.f_ExistsRackDisplayGroup();",
			"\n"
		],
		"description": "Check Session Array RackDisplayGroup"
	},

	"Check Session Array CombiGroupCode": {
		"prefix": "checksessioncombigroupcode",
		"body": [
			"\n",
			"\tlb_ExistsArrayCombiGroup\tBOOLEAN\t:= PXS_UTILITY.f_ExistsArrayCombiGroupCode();",
			"\n"
		],
		"description": "Check Session Array CombiGroupCode"
	},

	"Check Session Array Order Operator": {
		"prefix": "checksessionorderoperator",
		"body": [
			"\n",
			"\tlb_ExistsArrayOrderOperator\tBOOLEAN\t:= PXS_UTILITY.PXS_UTILITY.f_ExistsArrayOrderOperator();",
			"\n"
		],
		"description": "Check Session Array Order Operator"
	},

	"Check Session Array Maker": {
		"prefix": "checksesionmaker",
		"body": [
			"\n",
			"\tlb_ExistsMaker\t\t\tBOOLEAN;",
			"",
			"\tlb_ExistsMaker\t\t\t:= PXS_UTILITY.f_ExistsArrayMaker();",
			"\n"
		],
		"description": "Check Session Array Maker"
	},

	"Check Session Array Auth Store": {
		"prefix": "checksessionstoregroup",
		"body": [
			"\n",
			"\tlb_ExistsAuthStore\t\t\tBOOLEAN;",
			"",
			"\t-- 店舗権限を取得",
			"\tlb_ExistsAuthStore\t:= PXS_AUTH.p_Initilize_Store(NULL, NULL, FALSE);",
			"\n"
		],
		"description": "Check Session Array Auth Store"
	},

	"Check Session Array In Company": {
		"prefix": "checksessionincompany",
		"body": [
			"\n",
			"\tlb_ExistsArrayInCompany\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayInCompany\t\t:= PXS_UTILITY.f_ExistsArrayInCompany();",
			"\n"
		],
		"description": "Check Session Array In Company"
	},

	"Check Session Array Out Company": {
		"prefix": "checksessionoutcompany",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutCompany\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutCompany\t:= PXS_UTILITY.f_ExistsArrayOutCompany();",
			"\n"
		],
		"description": "Check Session Array Out Company"
	},

	"Check Session Array In Store": {
		"prefix": "checksessioninstore",
		"body": [
			"\n",
			"\tlb_ExistsArrayInStore\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= false;",
			"",
			"\tlb_ExistsArrayInStore\t\t:= PXS_UTILITY.f_ExistsArrayInStore();",
			"\n"
		],
		"description": "Check Session Array In Store"
	},

	"Check Session Array Out Store": {
		"prefix": "checksessionoutstore",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutStore\t\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutStore\t\t:= PXS_UTILITY.f_ExistsArrayOutStore();",
			"\n"
		],
		"description": "Check Session Array Out Store"
	},

	"Check Session Array In Store Floor": {
		"prefix": "checksessioninstorefloor",
		"body": [
			"\n",
			"\tlb_ExistsArrayInStoreFloor\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayInStoreFloor\t:= PXS_UTILITY.f_ExistsArrayInStoreFloor();",
			"\n"
		],
		"description": "Check Session Array In Store Floor"
	},

	"Check Session Array Out Store Floor": {
		"prefix": "checksessionoutstorefloor",
		"body": [
			"\n",
			"\tlb_ExistsArrayOutStoreFloor\t\tBOOLEAN\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tlb_ExistsArrayOutStoreFloor\t:= PXS_UTILITY.f_ExistsArrayOutStoreFloor();",
			"\n"
		],
		"description": "Check Session Array Out Store Floor"
	},

	"Check Session Array Tenant Name": {
		"prefix": "checksessiontenantname",
		"body": [
			"\n",
			"\tlb_ExistArrayTenantName\t\tBOOLEAN DEFAULT FALSE;",
			"",
			"\tlb_ExistArrayTenantName\t\t:= PXS_UTILITY.f_ExistsArrayTenantName();",
			"\n"
		],
		"description": "Check Session Array Out Store Floor"
	},

	"Check Error Code import csv": {
		"prefix": "checkerrorcode",
		"body": [
			"\n",
			"\tls_ErrorCheck\t\t\t\t\t\t\tVARCHAR;",
			"",
			"ls_ErrorCheck\t\t:= PXS_FILEUPLOAD.f_GetCheckErrorCode(i_CSVFile_Cd, i_CheckType);",
			"\n"
		],
		"description": "Check Error Code import csv"
	},

	"Check csv file type import csv": {
		"prefix": "checkiscsvfiletype",
		"body": [
			"\n",
			"\tlb_IsCSVFileType\t\t\t\t\t\tBOOLEAN DEFAULT FALSE;",
			"",
			"\tlb_IsCSVFileType\t:= PXS_FILEUPLOAD.f_CheckIsCSVFileType(i_Server_Cd, i_ImportBatchKey);",
			"\n"
		],
		"description": "Check Error Code import csv"
	},

	"Set Select Store List": {
		"prefix": "setselectstorelist",
		"body": [
			"\n",
			"\t-- 店舗検索条件で指定されたコードより、店舗一覧を作成",
			"\tPERFORM PXS_UTILITY.f_SetSelectStoreList(NULL, i_StoreSelect, i_Store_Cd);",
			"\n"
		],
		"description": "Set Select Store List"
	},

	"Get Money Hontai": {
		"prefix": "getmoneyhontai",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneyHontai (",
			"\t\t\t\t\t\t\t\tSIT.BITNK1,",
			"\t\t\t\t\t\t\t\tUIT.TAXTYPE,",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (NULL, UIT.TAX_CD, COALESCE(SIT.SALESTARTDATE, UPL.SALESTARTDATE)),",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t0",
			"\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Money Hontai"
	},

	"Get Make Sku Code": {
		"prefix": "getmakeskucode",
		"body": [
			"\n",
			"\tlrec_GetMakeSkuCd\tRECORD;",
			"",
			"\t\tlrec_GetMakeSkuCd\t\t:= PXS_UTILITY.f_GetMakeSkuCd(i_Sku_Cd);",
			"\n"
		],
		"description": "Get Make Sku Code"
	},

	"Get Sku Code CM": {
		"prefix": "getskucodeCM",
		"body": [
			"\n",
			"\tlrec_GetSkuCdRec\tRECORD;",
			"",
			"\t\tlrec_GetSkuCdRec\t:= PXS_UTILITY.f_GetSkuCdCM(ls_Sku_Cd, i_UPCE_Flag);",
			"\n"
		],
		"description": "Get Sku Code CM"
	},

	"Get Money Sougaku": {
		"prefix": "getmoneysougaku",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneySougaku\t(",
			"\t\t\t\t\t\t\t\t\tORDERGNTNK1,",
			"\t\t\t\t\t\t\t\t\ti_TaxType,",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (NULL, i_Tax_Cd, CURRENT_DATE),",
			"\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\tCAST(ls_Config_00113 AS NUMERIC)",
			"\t\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Money Sougaku"
	},

	"Check Item Exist In UMF_PLANITEMSTORE": {
		"prefix": "checkreserveitem",
		"body": [
			"\n",
			"PXS_UTILITY.f_CheckReserveItem ( NULL , i_Sku_Cd, i_Store_Cd, NULL )",
			"\n"
		],
		"description": "Check Item Exist In UMF_PLANITEMSTORE"
	},

	"Check String Irregular Chars": {
		"prefix": "checkstrirregularchars",
		"body": [
			"\n",
			"\t-- 摘要の入力チェック",
			"\tOPEN returnCursor FOR",
			"\t\tSelect CASE PXS_UTILITY.f_CheckStrIrregularChars(i_CommentValue) WHEN TRUE THEN 'TRUE'",
			"\t\t       ELSE 'FALSE' END AS RESULT;",
			"",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Check String Irregular Chars"
	},

	"Check reverse Item For Plan": {
		"prefix": "checkreserveitemforplan",
		"body": [
			"\n",
			"\tls_Plan_Check_Flag\t\tVARCHAR(1)\t:= '0';",
			"",
			"\t\tls_Plan_Check_Flag := PXS_UTILITY.f_CheckReserveItemForPlan(NULL, i_Sku_Cd, NULL, i_Plan_Cd);",
			"\n"
		],
		"description": "Check reverse Item For Plan"
	},

	"Check Caset Bitnk": {
		"prefix": "checkcasetbitnk",
		"body": [
			"\n",
			"PXS_UTILITY.f_CheckCaseSetBitnk (",
			"\t\t\t\t\t\t\t\t\tld_CurrentDate,",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.STORE_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN6, -- SKU_CD",
			"\t\t\t\t\t\t\t\t\tln_Bitnk,",
			"\t\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC) -- QTY",
			"\t\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Check Caset Bitnk"
	},


	"Get Operator Data": {
		"prefix": "getoperatordata",
		"body": [
			"\n",
			"\tPERFORM PXS_UTILITY.p_GetOperatorData(i_Operator_Cd, i_Company_Cd);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_CALENDARDATELIST;",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Operator Data"
	},

	"Get Adopt Price": {
		"prefix": "getadoptprice",
		"body": [
			"\n",
			"\t--------------------------",
			"\t-- 本日採用 売価、発注単価、POS原価",
			"\t--------------------------",
			"\t-- 指定日時点の採用売価、POS原価",
			"\tlrec_GetAdoptPrice\t\t:= PXS_UTILITY.f_GetAdoptPrice(",
			"\t\t\t\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(i_FixedDate, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\t\t\t\ti_Sku_Cd",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Adopt Price"
	},

	"Get Gnk Column List": {
		"prefix": "getgnkcolumnlist",
		"body": [
			"\n",
			"\treturnCursor\tREFCURSOR;",
			"",
			"\tPERFORM PXS_UTILITY.f_GetGnkColumnList(i_ProfitType);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_GNKCOLUMN;",
			"",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Gnk Column List"
	},

	"Get Last Year Date": {
		"prefix": "getlastyeardate",
		"body": [
			"\n",
			"PXS_UTILITY.F_GETLASTYEARDATE(TMP_IB04_STOREINFO.SALESDATE)",
			"\n"
		],
		"description": "Get Last Year Date"
	},

	"Get Dispensing Floor Code": {
		"prefix": "getdispensingfloorcd",
		"body": [
			"\n",
			"\tls_Floor_Cd_Check\t\t\t\t\tVARCHAR\t\t\t\t\t\t\t\t\t\t:= '';",
			"\tls_SysConfigDispensingClass\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tlrec_UserInfo\t\t\t\t:= PXS_USER.p_GetUserInfo();",
			"\tla_ConfigList\t\t\t\t:= ARRAY[C_CONFIG_IB004];",
			"",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig(NULL, la_ConfigList);",
			"",
			"\tls_SysConfigDispensingClass\t:= PXS_UTILITY.F_GETSYSTEMCONFIG(lrec_UserInfo.SYSTEMMODE_CD, C_CONFIG_IB004);",
			"\tls_Floor_Cd_Check\t\t\t:= PXS_UTILITY.F_GETDISPENSINGFLOORCD(i_Store_Cd, i_Floor_Cd, i_Class_Cd, ls_SysConfigDispensingClass);",
			"",
			"\tOPEN returnCursor FOR",
			"\t\tSELECT\tls_Floor_Cd_Check\t\tAS RESULT_CHECK_FLOOR_CD;",
			"\tRETURN returnCursor;",
			"\n"
		],
		"description": "Get Dispensing Floor Code"
	},

	"Get Item Store History": {
		"prefix": "getitemstorehistory",
		"body": [
			"\n",
			"\tln_ItemMasterGntnk\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_ItemPOSGntnk\t\t\t\t\t\tUMF_ITEMSTORE.POSGNTNK1%TYPE;",
			"\tln_ItemWholeSaleGntnk\t\t\t\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tln_ItemNet1Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET1GNTNK1%TYPE;",
			"\tln_ItemNet2Gntnk\t\t\t\t\tUMF_ITEMSTORE.NET2GNTNK1%TYPE;",
			"\tln_ItemBitnk\t\t\t\t\t\tUMF_ITEMSTORE.BITNK1%TYPE;",
			"\tls_ItemStore_Partner_Cd\t\t\t\tUMF_ITEMSTORE.PARTNER_CD%TYPE;",
			"",
			"\t\tSELECT\tCASE WHEN ls_TaxType = '1' THEN ORDERGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN ORDERGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN POSGNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN POSGNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN WHOLESALEGNTNK1\tWHEN ls_TaxType IN ('2', '3') THEN WHOLESALEGNTNK2\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN NET1GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET1GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN NET2GNTNK1\t\tWHEN ls_TaxType IN ('2', '3') THEN NET2GNTNK2\t\tEND,",
			"\t\t\t\tCASE WHEN ls_TaxType = '1' THEN BITNK1\t\t\tWHEN ls_TaxType IN ('2', '3') THEN BITNK2\t\t\tEND,",
			"\t\t\t\tPARTNER_CD",
			"\t\tINTO\tln_ItemMasterGntnk,",
			"\t\t\t\tln_ItemPOSGntnk,",
			"\t\t\t\tln_ItemWholeSaleGntnk,",
			"\t\t\t\tln_ItemNet1Gntnk,",
			"\t\t\t\tln_ItemNet2Gntnk,",
			"\t\t\t\tln_ItemBitnk,",
			"\t\t\t\tls_ItemStore_Partner_Cd",
			"\t\tFROM\tPXS_UTILITY.f_GetItemStoreHistory(",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\ti_Sku_Cd,",
			"\t\t\t\t\ti_DenpInspectDate",
			"\t\t\t\t);",
			"\n"
		],
		"description": "Get Item Store History"
	},

	"Get Tenant PayDate": {
		"prefix": "gettenantpaydate",
		"body": [
			"\n",
			"\tld_PayDate\t\t\tDATE;",
			"",
			"\tld_PayDate\t:= PXS_UTILITY.f_GetTenantPayDate(NULL, i_Store_Cd, ls_Class5_Cd, '2', CAST(i_DelimitDate AS DATE));",
			"\n"
		],
		"description": "Get Tenant PayDate"
	},

	"Get Order Stock Qty": {
		"prefix": "getorderstockqty",
		"body": [
			"\n",
			"\tln_StockQty\t\t\tBIGINT := NULL;\t\t\t\t\t\t\t\t\t-- 発注用理論在庫数",
			"",
			"\t\t\tln_StockQty := CAST(PXS_UTILITY.f_GetOrderStockQty(i_Store_Cd, ls_Sku_Cd) AS BIGINT);",
			"\n"
		],
		"description": "Get Order S"
	},

	"Get Item Store History Profit Gntnk": {
		"prefix": "getitemstorehistoryprofitgntnk",
		"body": [
			"\n",
			"\tln_PosGntnk_His\t\t\tUMF_ITEMSTORE.POSGNTNK1%TYPE;",
			"\tln_OrderGntnk_His\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_WholeSaleGntnk1_His\tUMF_ITEMSTORE.WHOLESALEGNTNK1%TYPE;",
			"\tln_Net1Gntnk1_His\t\tUMF_ITEMSTORE.NET1GNTNK1%TYPE;",
			"\tln_Net2Gntnk1_His\t\tUMF_ITEMSTORE.NET2GNTNK1%TYPE;",
			"\tln_ProfitGntnk_His\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"",
			"\tSELECT\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN ORDERGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN ORDERGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN POSGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN POSGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN WHOLESALEGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN WHOLESALEGNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN NET1GNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN NET1GNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN NET2GNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN NET2GNTNK2",
			"\t\t\tEND,",
			"\t\t\tCASE",
			"\t\t\t\tWHEN i_TaxType = '1' THEN PROFITGNTNK1",
			"\t\t\t\tWHEN i_TaxType IN ('2', '3') THEN PROFITGNTNK2",
			"\t\t\tEND",
			"\tINTO\tln_OrderGntnk_His,",
			"\t\t\tln_PosGntnk_His,",
			"\t\t\tln_WholeSaleGntnk1_His,",
			"\t\t\tln_Net1Gntnk1_His,",
			"\t\t\tln_Net2Gntnk1_His,",
			"\t\t\tln_ProfitGntnk_His",
			"\tFROM\tPXS_UTILITY.f_GetItemStoreHistoryProfitGntnk(NULL, i_Store_Cd, i_Sku_Cd, i_InDate);",
			"\n"
		],
		"description": "Get Item Store History Profit Gntnk"
	},

	"Get Order Gntnk": {
		"prefix": "getordergntnk",
		"body": [
			"\n",
			"\t-- 指定日時点の発注単価",
			"\tlrec_GetOrderGntnk\t\t:= PXS_UTILITY.f_GetOrderGntnk(",
			"\t\t\t\t\t\t\t\t\tnull,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(i_FixedDate, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\t\t\t\ti_Sku_Cd",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Order Gntnk"
	},

	"Get CombiGroupCd": {
		"prefix": "getcombigroupcd",
		"body": [
			"\n",
			"\tlrec_GetCombiGroupCd\tRECORD;",
			"",
			"\t\tlrec_GetCombiGroupCd\t:= PXS_UTILITY.f_GetCombiGroupCd(ls_EntryStore_Cd, '2');",
			"\n"
		],
		"description": "Get CombiGroupCd"
	},

	"Get SkuCd can pass include_cd": {
		"prefix": "getskucd",
		"body": [
			"\n",
			"\tla_GetSkuCd\t\tRECORD;",
			"",
			"\t-- 商品区分等取得",
			"\tla_GetSkuCd\t:= PXS_UTILITY.f_GetSkuCd(i_Sku_Cd);",
			"\n"
		],
		"description": "Get SkuCd can pass include_cd"
	},

	"Get Reserve Item Gntnk Pattern": {
		"prefix": "getreserveitemgntnkpattern",
		"body": [
			"\n",
			"\tlrec_GetReserveItemGntnkPattern\tRECORD;",
			"",
			"\t\t\t\t-- 予約商品原価パターン情報取得(反映日時点までの予約商品原価パターン情報)",
			"\t\t\t\tlrec_GetReserveItemGntnkPattern\t:= PXS_UTILITY.f_GetReserveItemGntnkPattern(i_Sku_Cd, lrec_TmpReserveItemGntnkPattern.PATTERN_CD, lrec_TmpReserveItemGntnkPattern.GROUP_CD, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Gntnk Pattern"
	},

	"Check is Whole Sale": {
		"prefix": "checkiswholesale",
		"body": [
			"\n",
			"\tlb_IsWholeSale\t\t\t\tBOOLEAN := FALSE;",
			"",
			"\tlb_IsWholeSale := PXS_UTILITY.f_IsWholeSale (",
			"\t\t\t\t\t\ti_Store_Cd,",
			"\t\t\t\t\t\ti_Partner_Cd,",
			"\t\t\t\t\t\tTO_DATE(i_InspectDate, 'YYYY/MM/DD')",
			"\t\t\t\t\t);",
			"\n"
		],
		"description": "Check is Whole Sale"
	},

	"Check Double Number": {
		"prefix": "checkdoublenumber",
		"body": [
			"\n",
			"PXS_UTILITY.f_checkDoubleNumber(i_Qty)",
			"\n"
		],
		"description": "Check Double Number"
	},

	"Get Reserve Item Bitnk Pattern": {
		"prefix": "getreserveitembitnkpattern",
		"body": [
			"\n",
			"\tlrec_GetReserveItemBitnkPattern\tRECORD;",
			"",
			"\t\t\t\t-- 予約商品売価パターン情報取得",
			"\t\t\t\tlrec_GetReserveItemBitnkPattern\t:= PXS_UTILITY.f_GetReserveItemBitnkPattern(i_Sku_Cd, lrec_TmpReserveItemBitnkPattern.PATTERN_CD, lrec_TmpReserveItemBitnkPattern.GROUP_CD, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Bitnk Pattern"
	},

	"Get Reserve Item Class": {
		"prefix": "getreserveitemclass",
		"body": [
			"\n",
			"\tlrec_GetReserveItemClass\tRECORD;",
			"",
			"\t-- 予約分類商品情報取得",
			"\tlrec_GetReserveItemClass\t:= PXS_UTILITY.f_GetReserveItemClass(i_Sku_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Class"
	},

	"Get Reserve Item Store": {
		"prefix": "getreserveitemstore",
		"body": [
			"\n",
			"\tlrec_GetReserveItemStore\tRECORD;",
			"",
			"\t-- 予約店舗商品情報取得",
			"\tlrec_GetReserveItemStore\t:= PXS_UTILITY.f_GetReserveItemStore(i_Sku_Cd, i_Store_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Store"
	},

	"Get Reserve Item Pop": {
		"prefix": "getreserveitempop",
		"body": [
			"\n",
			"\tlrec_GetReserveItemPop\t\tRECORD;",
			"",
			"\t-- 予約商品POP情報",
			"\tlrec_GetReserveItemPop\t\t:= PXS_UTILITY.f_GetReserveItemPop(i_Sku_Cd, i_ReflectDate);",
			"\n"
		],
		"description": "Get Reserve Item Pop"
	},

	"Get Operator Whole Sale Type": {
		"prefix": "getoperatorwholesaletype",
		"body": [
			"\n",
			"\tls_WholeSalesType\t\tVARCHAR;",
			"",
			"\tls_WholeSalesType\t:= PXS_UTILITY.f_GetOperatorWholeSaleType(lrec_UserInfo.OPERATOR_CD, NULL);",
			"\n"
		],
		"description": "Get Operator Whole Sale Type"
	},

	"Convert Round Number Format": {
		"prefix": "convertroundnumberformat",
		"body": [
			"\n",
			"PXS_UTILITY.f_ConvertRoundNumberFormat(targetvaluenum, i_Config_00104, 0)",
			"\n"
		],
		"description": "Convert Round Number Format"
	},

	"Get Money Hontai Item Master": {
		"prefix": "getmoneyhontaiitemmaster",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetMoneyHontaiItemMaster (",
			"\t\tCAST(COLUMNDATA.COLUMN29 AS NUMERIC), -- MONEYSOUGAKU",
			"\t\tCOLUMNDATA.COLUMN15, -- TAXTYPE",
			"\t\tPXS_UTILITY.f_GetTaxrate(",
			"\t\t\t\tNULL,",
			"\t\t\t\tCOLUMNDATA.COLUMN16, -- TAX_CD",
			"\t\t\t\ti_ReflectDate),",
			"\t\tls_Config_00112,",
			"\t\tCAST(ls_Config_00113 AS NUMERIC)",
			")",
			"\n"
		],
		"description": "Get Money Hontai Item Master"
	},

	"Get InStore_Cd": {
		"prefix": "getinstorecd",
		"body": [
			"\n",
			"\tla_GetInstoreCd\t\tRECORD;",
			"",
			"\t-- インストア発番",
			"\tla_GetInstoreCd\t\t:= PXS_UTILITY.f_GetInStoreCd(i_IssuenoType);",
			"\n"
		],
		"description": "Get InStore_Cd"
	},

	"Get Plan_Cd": {
		"prefix": "getplancd",
		"body": [
			"\n",
			"\tlrec_GetPlanCd\t\tRECORD;",
			"",
			"\t\tlrec_GetPlanCd\t\t:= PXS_UTILITY.f_GetPlanCd();",
			"\n"
		],
		"description": "Get Plan_Cd"
	},

	"Get Hontai": {
		"prefix": "gethontai",
		"body": [
			"\n",
			"\tln_OrderGntnk\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"",
			"\t\t\t\tln_OrderGntnk := PXS_UTILITY.F_GETHONTAI(i_OrderGntnk, i_TaxType, ld_Taxrate, i_Config_B0001, 2);",
			"\n"
		],
		"description": "Get Hontai"
	},

	"Get zero remove skuCd": {
		"prefix": "getzeroremoveskucd",
		"body": [
			"\n",
			"PXS_UTILITY.f_getzeroremoveskucd(SKU_CD)",
			"\n"
		],
		"description": "Get zero remove skuCd"
	},

	"Get Append Check Digit": {
		"prefix": "getappendcheckdigit",
		"body": [
			"\n",
			"\tls_Plan_Cd\t\t\tUMF_PLAN.PLAN_CD%TYPE;",
			"",
			"\t\t\t-- チェックデジット付加",
			"\t\t\tls_Plan_Cd := PXS_UTILITY.f_AppendCheckdigit(LEFT(ls_Plan_Cd, 7));",
			"\n"
		],
		"description": "Get Append Check Digit"
	},

	"Get Check Digit": {
		"prefix": "getcheckdigit",
		"body": [
			"\n",
			"\tln_Denpno\t\t\tAS NUMERIC;",
			"",
			"\t\t\t\tln_Denpno := PXS_UTILITY.f_GetCheckdigit(CAST(DENPNO + ln_OldBaseDenpNo AS VARCHAR)) AS NUMERIC);",
			"\n"
		],
		"description": "Get Check Digit"
	},

	"Get Delivery Store Code": {
		"prefix": "getdeliverystorecd",
		"body": [
			"\n",
			"\tlrec_DeliveryStore\t\t\t\t\t\tRECORD;",
			"",
			"\t\tlrec_DeliveryStore := PXS_UTILITY.f_GetDeliveryStoreCd (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2, -- FINALDESTINATION_CD ",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN NULL",
			"\t\t\t\t\t\t\t\t\t\tELSE COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\tEND, -- ORDERDATE",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\tEND -- RETURNDATE",
			"\t\t\t\t\t\t\t\t);",
			"\n"
		],
		"description": "Get Delivery Store Code"
	},

	"Get Zeigaku": {
		"prefix": "getzeigaku",
		"body": [
			"\n",
			"\t----------",
			"\t-- 税額 --",
			"\t----------",
			"\to_PurchaseGnkBik.GNKTAXKNGK := PXS_UTILITY.f_GetZeigaku(",
			"\t\to_PurchaseGnkBik.GNKKNGK,\t-- i_Kngk",
			"\t\ti_TaxType,\t\t\t\t\t-- i_TaxType",
			"\t\ti_TaxRate,\t\t\t\t\t-- i_TaxRate",
			"\t\ti_CostRoundType\t\t\t\t-- i_HsuType",
			"\t);",
			"\n"
		],
		"description": "Get Zeigaku"
	},

	"Get Item Class": {
		"prefix": "getitemclass",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetItemClass(",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\t\t\tlrec_DeliveryDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\tla_OutRec.INSPECTDATE",
			"\t\t\t\t\t\t\t)",
			"\n"
		],
		"description": "Get Item Class"
	},

	"Get Nsw DenpType Purchase": {
		"prefix": "getnswdenptypepurchase",
		"body": [
			"\n",
			"\t\t\t\tPXS_UTILITY.f_GetNswDenpTypePurchase(",
			"\t\t\t\t\tC_OHD.STORE_CD,",
			"\t\t\t\t\tC_OHD.PARTNER_CD,",
			"\t\t\t\t\tC_OHD.LOGISTICSCENTER_CD,",
			"\t\t\t\t\tLGC.CENTERKIND,",
			"\t\t\t\t\tC_OHD.TAXTYPE,",
			"\t\t\t\t\tC_OHD.TAXRATE,",
			"\t\t\t\t\tC_OHD.INSPECTDATE,",
			"\t\t\t\t\tC_OHD.DENPKIND",
			"\t\t\t\t)",
			"\n"
		],
		"description": "Get Nsw DenpType Purchase"
	},

	"Get Nsw DenpType Move": {
		"prefix": "getnswdenptypemove",
		"body": [
			"\n",
			"\t\t\tPXS_UTILITY.f_GetNswDenpTypeMove(",
			"\t\t\t\tHD.INSTORE_CD,",
			"\t\t\t\tHD.OUTSTORE_CD,",
			"\t\t\t\t'1',\t-- 入出庫区分(0:入庫、1:出庫)",
			"\t\t\t\tDT.TAXTYPE,",
			"\t\t\t\tDT.TAXRATE,",
			"\t\t\t\tHD.INSPECTDATE",
			"\t\t\t),",
			"\n"
		],
		"description": "Get Nsw DenpType Move"
	},

	"Get ShelLifeCycle": {
		"prefix": "getshelLifecycle",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetShelfLifeCycle(",
			"\tITEM.SHELFLIFE,",
			"\tCLASS2.CLASS_CD",
			")",
			"\n"
		],
		"description": "Get ShelLifeCycle"
	},

	"Get store history": {
		"prefix": "getstorehistory",
		"body": [
			"\n",
			"\tls_Company_Cd\t\t\t\tUTR_PURCHASEDENPHEADER.COMPANY_CD%TYPE;",
			"\tls_Store\t\t\t\t\tUTR_RETURN.STORE_CD%TYPE;",
			"\tld_ReturnDate\t\t\t\tUTR_RETURN.RETURNDATE%TYPE;",
			"",
			"",
			"\t\t\t\t\t-- 会社コード",
			"\t\t\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\t\t\tINTO\tls_Company_Cd",
			"\t\t\t\t\tFROM\tPXS_UTILITY.f_GetStoreHistory(ls_Store, ld_ReturnDate);",
			"\n"
		],
		"description": "Get store history"
	},

	"Get Delimit Date": {
		"prefix": "getdelimitdate",
		"body": [
			"\n",
			"PXS_UTILITY.f_GetDelimitDate(NULL, PSD.PAYPARTNER_CD, ld_ApclosingDate, ld_ApclosingDate)",
			"\n"
		],
		"description": "Get Delimit Date"
	},

	"Get Class History": {
		"prefix": "getclasshistory",
		"body": [
			"\n",
			"\tSELECT\tPARENTCLASS_CD",
			"\tFROM\tPXS_UTILITY.f_GetClassHistory(NULL, CLS3.ItemAttributeType, CLS3.ClassType, CLS3.Class_Cd, SSch.InventoryDate)",
			"\n"
		],
		"description": "Get Class History"
	},

	"Update System Config": {
		"prefix": "getclasshistory",
		"body": [
			"\n",
			"\tlb_UpdSystemConfig\t\tBOOLEAN;",
			"",
			"\t\tlb_UpdSystemConfig\t:= PXS_UTILITY.f_UpdSystemConfig(lrec_UserInfo.User_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.SystemMode_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'HG002',",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ls_MaxAccountsMonth,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.Operator_Cd,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t CAST(CURRENT_TIMESTAMP AS TIMESTAMP WITHOUT TIME ZONE),",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t lrec_UserInfo.Proc_Cd);",
			"\n"
		],
		"description": "Get Class History"
	},

	"Lpad format": {
		"prefix": "lpad",
		"body": [
			"LPAD('PostgreSQL', 15, '*')"
		],
		"description": "Lpad format"
	},

	"Rpad format": {
		"prefix": "rpad",
		"body": [
			"RPAD('w3r', 10, '*')"
		],
		"description": "Rpad format"
	},

	"Coalesce format": {
		"prefix": "rpad",
		"body": [
			"COALESCE(COLUMN5, '')"
		],
		"description": "Coalesce format: nếu tham số thứ nhất là NULL thì sẽ sử dụng tham số thứ 2"
	},

	"NULLIF format": {
		"prefix": "nullif",
		"body": [
			"NULLIF(i_ImportBatchKey, '')"
		],
		"description": "NULLIF format: nếu tham số thứ nhất bằng tham số thứ 2 thì trả về NULL"
	},

	"GREATEST format": {
		"prefix": "greatest",
		"body": [
			"GREATEST(25, 6, 7, 10, 20, 54);  --  returns 54"
		],
		"description": "GREATEST format: trả về giá trị lớn nhất trong các giá trị truyền vào"
	},

	"LEAST format": {
		"prefix": "least",
		"body": [
			"LEAST(20, 30, 60, 10); -- 10"
		],
		"description": "LEAST format: trả về giá trị nhỏ nhất trong các giá trị truyền vào"
	},

	"Unnest format": {
		"prefix": "unnest",
		"body": [
			"unnest(ARRAY[1,2])",
			"",
			"--  unnest",
			"-- --------",
			"--       1",
			"--       2",
			"-- (2 rows)"
		],
		"description": "Unnest format: convert array to set of rows"
	},

	"distinct on format": {
		"prefix": "distinct...on",
		"body": [
			"\n",
			"SELECT\tDISTINCT ON(UPDDATA.SKU_CD)",
			"\t\tUPDDATA.SKU_CD,",
			"\t\tUPDDATA.APPLY_DATE,",
			"\t\tUPDDATA.TAXTYPE,",
			"\t\tUPDDATA.TAX_CD",
			"FROM\tTMP_BA32_PROCESSDATA UPDDATA",
			"WHERE\tUPDDATA.EDIT_TYPE\t\t= '2'",
			"AND\t\tUPDDATA.APPLY_DATE\t\t= CURRENT_DATE",
			"AND\t\tUPDDATA.TAX_CD_FLAG\t\t= '0';",
			"\n"
		],
		"description": "distinct on format: distinct theo cột"
	},

	"RANK format": {
		"prefix": "rank",
		"body": [
			"RANK() OVER(ORDER BY SUM_AMOUNT DESC)"
		],
		"description": "RANK format : RANK sắp xếp thứ hạng, đồng hạng thì hạng kế tiếp sẽ bị mất, có thể dùng với OVER()"
	},

	"DENSE_RANK format": {
		"prefix": "dense_rank",
		"body": [
			"DENSE_RANK() OVER(PARTITION BY SKU_CD ORDER BY GNTNK_STORECOUNT\t\t DESC, GNTNK)"
		],
		"description": "DENSE_RANK format : xếp hạng, đồng hạng thì hạng kế tiếp vẫn được hiển thị, có thể dùng với OVER()."
	},

	"GENERATE_SERIES format": {
		"prefix": "generate_series",
		"body": [
			"GENERATE_SERIES(1, 5)"
		],
		"description": "GENERATE_SERIES format: trả về to - from + 1 dòng có giá trị từ from đến to và bước nhảy là step (tạo số liên tiếp từ -> đến.), có thể dùng với OVER()"
	},

	"repeat format": {
		"prefix": "repeat",
		"body": [
			"REPEAT('i', 5)"
		],
		"description": "repeat format: lặp lại, có thể dùng với OVER()"
	},

	"trim format": {
		"prefix": "trim",
		"body": [
			"TRIM('  PostgreSQL TRIM  ')"
		],
		"description": "trim format: xóa all space đầu và cuối string {TRIM(LEADING FROM string)}"
	},

	"ltrim format": {
		"prefix": "ltrim",
		"body": [
			"LTRIM('enterprise', 'e') -- nterprise"
		],
		"description": "ltrim format: xóa ký tự bên trái {LTRIM(string, [character]);}"
	},

	"rtrim format": {
		"prefix": "rtrim",
		"body": [
			"RTRIM('enterprise', 'e') -- enterpris"
		],
		"description": "rtrim forma: xóa ký tự bên phải {RTRIM(string, [character]);}"
	},

	"btrim format": {
		"prefix": "btrim",
		"body": [
			"BTRIM('enterprise', 'e') -- nterpris"
		],
		"description": "btrim format: xóa ký tự bên trái và phải {RTRIM(string, [character]);}"
	},

	"concat format": {
		"prefix": "concat",
		"body": [
			"CONCAT(IT.SNAME, '　', IT.STANDARDNAME)"
		],
		"description": "concat format: nối chuỗi nếu chuỗi bằng rỗng thì vẫn hiện những char khác rỗng {CONCAT(str_1, str_2, ...)}"
	},

	"concentratate format": {
		"prefix": "||",
		"body": [
			"'Concatenation' || ' ' || 'Operator'"
		],
		"description": "concentratate format: nối chuỗi nếu chuỗi bằng rỗng thì chuỗi trả về là rỗng(NULL) {CONCAT(str_1, str_2, ...)}"
	},

	"insert log": {
		"prefix": "vulog",
		"body": [
			"INSERT INTO VU_LOG VALUES(CONCAT('TEST:', TEST));"
		],
		"description": "insert log"
	},

	"create vu log": {
		"prefix": "createvulog",
		"body": [
			"CREATE TABLE VU_LOG (TEST\tVARCHAR);"
		],
		"description": "create vu log"
	},

	"vu log select": {
		"prefix": "vulogselect",
		"body": [
			"SELECT * FROM VU_LOG;"
		],
		"description": "query vu log"
	},

	"regexp_split_to_table": {
		"prefix": "regexp_split_to_table",
		"body": [
			"REGEXP_SPLIT_TO_TABLE(i_SystemMode_Cd, ',')"
		],
		"description": "regexp_split_to_table ( string text, pattern text [, flags text ] ) → text[] is a system function for splitting a string into a table using a POSIX regular expression as the delimiter."
	},

	"regexp_split_to_array": {
		"prefix": "regexp_split_to_array",
		"body": [
			"REGEXP_SPLIT_TO_ARRAY(COLUMN3, '-')"
		],
		"description": "regexp_split_to_array ( string text, pattern text [, flags text ] ) → text[] is a system function for splitting a string into an array using a POSIX regular expression as the delimiter."
	},

	"regexp_matches": {
		"prefix": "regexp_matches",
		"body": [
			"REGEXP_MATCHES(NOTES, '\\$[0-9A-Z_:]+', 'g')"
		],
		"description": "REGEXP_MATCHES(source_string, pattern [, flags]) function matches a regular expression against a string and returns matched substrings."
	},

	"regexp_replace": {
		"prefix": "regexp_replace",
		"body": [
			"REGEXP_REPLACE(i_BoxInput, '[^0-9,]', '', 'g'), ',')"
		],
		"description": "REGEXP_REPLACE(source, pattern, replacement_string,[, flags]) function replaces substrings that match a POSIX regular expression by a new substring."
	},

	"ROUND format": {
		"prefix": "round",
		"body": [
			"ROUND(FEE.EOSFEERATE, 2)"
		],
		"description": "ROUND format: làm tròn số bao nhiêu số sau 0 { ROUND (source [ , n ] ) }"
	},

	"Average format": {
		"prefix": "avg",
		"body": [
			"AVG(POINTAWARDRATE)"
		],
		"description": "Average format: tính trung bình theo cột có thể dùng với OVER()"
	},

	"Sum format": {
		"prefix": "SUM",
		"body": [
			"SUM(AMOUNT)"
		],
		"description": "Sum format: tính tổng theo cột có thể dùng với OVER()"
	},

	"ROW_NUMBER format": {
		"prefix": "row_number",
		"body": [
			"ROW_NUMBER() OVER(PARTITION BY STORE_CD ORDER BY STORE_CD, SALESDATE, CLASS_CD)"
		],
		"description": "ROW_NUMBER format: đánh số thứ tự, có thể dùng với OVER()"
	},

	"count format": {
		"prefix": "count",
		"body": [
			"COUNT(*)"
		],
		"description": "count format: đếm phần tử trong table count(1) thì null vẫn tính, còn count(column) thì null không tính, có thể dùng với OVER()"
	},

	"min format": {
		"prefix": "min",
		"body": [
			"MIN(AMOUNT) OVER(PARTITION BY SALESDATE, STORE_CD)"
		],
		"description": "min format: lấy giá trị nhỏ nhất theo cột, có thể dùng với OVER()"
	},

	"max format": {
		"prefix": "max",
		"body": [
			"MAX(CLASS_CD) OVER(PARTITION BY SALESDATE, STORE_CD) AS CLASS_CD"
		],
		"description": "max format: lấy giá trị lớn nhất theo cột, có thể dùng với OVER()"
	},

	"FIRST_VALUE format": {
		"prefix": "first_value",
		"body": [
			"FIRST_VALUE(CLASS_CD) OVER(PARTITION BY SALESDATE, STORE_CD)"
		],
		"description": "FIRST_VALUE format: lấy giá trị đầu tiên theo group partition by theo cột, có thể dùng với OVER()"
	},

	"ARRAY_AGG format": {
		"prefix": "array_agg",
		"body": [
			"ARRAY_AGG(BYTELENGTH ORDER BY ROWNUMBER)"
		],
		"description": "ARRAY_AGG format: nối các phần tử lại thành 1 mảng{ ARRAY_AGG(expression [ORDER BY [sort_expression {ASC | DESC}], [...]) }"
	},

	"STRING_AGG format": {
		"prefix": "string_agg",
		"body": [
			"STRING_AGG(TMP.COL2, '<br>')"
		],
		"description": "STRING_AGG format: nối column thành 1 chuỗi cách nhau theo ký hiệu phía sau.{ STRING_AGG ( expression, separator [order_by_clause] ) }"
	},

	"ARRAY_TO_STRING format": {
		"prefix": "array_to_string",
		"body": [
			"ARRAY_TO_STRING(ARRAY_AGG(BYTELENGTH ORDER BY ROWNUMBER), ',')"
		],
		"description": "ARRAY_TO_STRING format: convert array to string {array_to_string(anyarray, text [, text])}"
	},

	"sum from previous row to current row format": {
		"prefix": "unbounded...preceding",
		"body": [
			"SUM(AMOUNT) OVER(ORDER BY STORE_CD, SALESDATE, AMOUNT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)"
		],
		"description": "sum from previous row to current row format : tính tổng từ dòng trước đó đến dòng hiện tại"
	},

	"Over format": {
		"prefix": "over",
		"body": [
			"OVER($1)"
		],
		"description": "Over format : OVER([PARTITION BY tên_cột] [ORDER BY tên_cột] [ROWS/RANGE BETWEEN from AND to) \n from/to có thể là UNBOUNDED PRECEDING hoặc N PRECEDING hoặc CURRENT ROW hoặc UNBOUNDED FOLLOWING hoặc N FOLLOWING"
	},

	"Set Authority Store": {
		"prefix": "auth.initilize_store",
		"body": [
			"",
			"\t-- 店舗権限のテンポラリテーブルをセット",
			"\tPERFORM PXS_AUTH.p_Initilize_Store();",
			""
		],
		"description": "Set Authority Store"
	},

	"Set Authority Class": {
		"prefix": "auth.initilize_class",
		"body": [
			"",
			"\t-- 分類権限のテンポラリテーブルをセット",
			"\tPERFORM PXS_AUTH.p_Initilize_Class();",
			""
		],
		"description": "Set Authority Class"
	},

	"Set Authority Partner": {
		"prefix": "auth.initilize_partner",
		"body": [
			"",
			"\t-- パートナー権限のテンポラリテーブルをセット（全パートナーの場合は作成しない）",
			"\tIF (lrec_UserInfo.ParentPartner_Cd <> '000000') THEN",
			"\t\tPERFORM PXS_AUTH.p_Initilize_Partner();",
			"\tEND IF;",
			""
		],
		"description": "Set Authority Class"
	},

	"Set Authority Function Auth setting": {
		"prefix": "auth.funcauthsetting",
		"body": [
			"",
			"\tlf_FuncAuthSetting\tTYPE_FUNCAUTHSETTING;",
			"",
			"\tlf_FuncAuthSetting\t:= PXS_AUTH.P_GETFUNCAUTHSETTING (NULL, lrec_UserInfo.OPERATOR_CD, 'BB01');",
			""
		],
		"description": "Set Authority Function Auth setting"
	},

	"Set Authority Company": {
		"prefix": "auth.initilize_company",
		"body": [
			"",
			"\tlb_ExistsCompanyAuth\t\t\tBOOLEAN;",
			"",
			"\t-- 会社権限取得",
			"\tlb_ExistsCompanyAuth\t:=  PXS_AUTH.p_Initilize_Company();",
			""
		],
		"description": "Set Authority Company"
	},

	"Set Authority Company contract": {
		"prefix": "auth.initilize_contractcompany",
		"body": [
			"",
			"\tlb_ExistsContractAuth\t\tBOOLEAN;",
			"",
			"\tlb_ExistsContractAuth\t\t:= PXS_AUTH.p_Initilize_ContractCompany(NULL, '2');",
			""
		],
		"description": "Set Authority Company contract"
	},


	"Pattern check error 00010": {
		"prefix": "checkerror_00010_pattern",
		"body": [
			"",
			"\tln_ExistsCount\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t:= 0;",
			"\tla_ColumnName\t\t\t\tVARCHAR[];",
			"",
			"\t\tln_ExistsCount\t\t\t\t:= 0;",
			"",
			"",
			"",
			"\t\t-- キー項目で更新マスタ存在チェック",
			"\t\tSELECT\tCOUNT(*)",
			"\t\tINTO\tln_ExistsCount",
			"\t\tFROM\tUMF_STOREBRAND",
			"\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN1",
			"\t\tAND\t\tBRAND_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tSERIES_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '00010') > 0) THEN",
			"\t\t\t----------------------------------------------------------------------",
			"\t\t\t-- 更新マスタに存在しない場合、ＣＳＶ取込タイプが【2:総入替】の場合  -",
			"\t\t\t-- 項目必須チェック（使用するカラムをすべて記載する）                -",
			"\t\t\t-- カラムフラグ詳細---------------------------------------------------",
			"\t\t\t-- 0：ＣＳＶ取込データがセットされている                             -",
			"\t\t\t-- 1：デフォルト値がセットされている                                 -",
			"\t\t\t-- 8：NULLがセットされている                                         -",
			"\t\t\t-- 9：必須項目にNULLがセットされている                               -",
			"\t\t\t----------------------------------------------------------------------",
			"\t\t\tIF (ln_ExistsCount = 0 OR i_UploadType = '2') THEN",
			"\t\t\t\t-- 必須項目のNULLチェック",
			"\t\t\t\tIF (   lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\t\t\t-- ★使用するカラムをすべて記載する。",
			"\t\t\t\t\tOR lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'",
			"\t\t\t\t\tOR lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'",
			"\t\t\t\t) THEN",
			"\t\t\t\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t\t\t\tls_ColumnName\t:=\tCASE",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\tTHEN 'COLUMN1'",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'\tTHEN 'COLUMN2'",
			"\t\t\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'\tTHEN 'COLUMN3'",
			"\t\t\t\t\t\t\t\t\t\t\t\tELSE ''",
			"\t\t\t\t\t\t\t\t\t\t\tEND;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_ColumnName\t:=\tCASE WHEN lrec_CSVUploadColumnData.COLUMN1_FLAG = '9'\t\tTHEN 'COLUMN1'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN2_FLAG = '9'\t\tTHEN 'COLUMN2'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN3_FLAG = '9'\t\tTHEN 'COLUMN3'\t\t|| C_ARRAY_DELIMITER ELSE '' END;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tla_ColumnName\t:= STRING_TO_ARRAY(TRIM(ls_ColumnName, C_ARRAY_DELIMITER), C_ARRAY_DELIMITER);",
			"",
			"\t\t\t\t\t-- エラーテーブルへINSERT",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.P_ACCEPTCSVUPDATEERRORDATA(",
			"\t\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'00010',",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00010'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\tla_ColumnName",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\t-- 新規登録件数のカウントアップ",
			"\t\t\t\tln_InsCount\t\t\t:= ln_InsCount + 1;",
			"\t\t\t\tlb_RegistFlag\t\t:= TRUE;",
			"\t\t\tELSE",
			"\t\t\t\t-- 更新登録件数のカウントアップ",
			"\t\t\t\tln_UpdCount\t\t\t:= ln_UpdCount + 1;",
			"\t\t\t\tlb_RegistFlag\t\t:= FALSE;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			""
		],
		"description": "Pattern check error 00010"
	},

	"Pattern check error 00011": {
		"prefix": "checkerror_00011_pattern",
		"body": [
			"",
			"\tIF (INSTR(ls_ErrorCheck, '00011') > 0) THEN",
			"\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t-- エラーテーブルへINSERT",
			"\t\t\tINSERT INTO UWK_CSVUPDATEERRORDATA (",
			"\t\t\t\t\t\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\tCHECKTYPE,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tERROR_CD,",
			"\t\t\t\t\t\tERRORTYPE,",
			"\t\t\t\t\t\tERROR_NOTES,",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t)",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\tMAX(USER_CD)\t\tAS USER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMN1,COLUMN2,COLUMN3;",
			"",
			"\t\tELSE",
			"\t\t\tINSERT INTO UWK_EXCELUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tEXCELTAGINDEX,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(EXCELTAGINDEX)\tAS EXCELTAGINDEX,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMN1,COLUMN2,COLUMN3;",
			"\t\tEND IF;",
			"\tEND IF;",
			""
		],
		"description": "Pattern check error 00011"
	},

	"CSV Import Check Pattern": {
		"prefix": "importcheckpattern",
		"body": [
			"\n",
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"/*",
			"\t[サブ機能  ] EA.仕入",
			"\t[機能ＩＤ  ] EA25",
			"\t[機能名称  ] 仕入伝票取込",
			"\t[リビジョン] 1",
			"\t[関数名    ] p_CSVImportCheck",
			"\t[作 成 日  ] 2022/08/30",
			"\t[作 成 者  ] UNICCS/d-vu",
			"\t[更新履歴  ] ",
			"*/",
			"",
			"CREATE OR REPLACE FUNCTION PXC_EA25_001.p_CSVImportCheck (",
			"\ti_User_Cd\t\t\tIN\tUTR_CSVUPLOADOBSERVER.USER_CD%TYPE,",
			"\ti_Server_Cd\t\t\tIN\tUWK_CSVUPLOADCOLUMNDATA.SERVER_CD%TYPE,",
			"\ti_ImportBatchKey\tIN\tUWK_CSVUPLOADCOLUMNDATA.IMPORTBATCHKEY%TYPE,",
			"\ti_CSVFile_Cd\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVFILE_CD%TYPE,",
			"\ti_CheckType\t\t\tIN\tUWK_CSVUPDATEERRORDATA.CHECKTYPE%TYPE,",
			"\ti_UploadType\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVUPLOADTYPE%TYPE",
			") RETURNS VOID AS $$",
			"/*",
			"$START",
			"$FUNCTION\\1",
			"\tＣＳＶ取込データのチェックを行ないます。",
			"\tＣＳＶ取込形式：ＭＯＤ（追加・上書き）",
			"\t\t\t\t\tＲＥＰ（総入れ替え）",
			"$PAR\\1",
			"\tユーザコード",
			"$PAR\\2",
			"\tサーバーコード",
			"$PAR\\3",
			"\tＣＳＶ取込バッチキー",
			"$PAR\\4",
			"\tＣＳＶファイルコード",
			"$PAR\\5",
			"\tチェックタイプ（1:更新前チェック、2:更新後チェック）",
			"$PAR\\6",
			"\tＣＳＶ取込タイプ（1:追加/更新、2:総入替、3:削除）",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/",
			"DECLARE",
			"\tC_ARRAY_DELIMITER\t\t\t\t\t\tCONSTANT VARCHAR\t\t\t\t\t\t\t\t:= ',';",
			"",
			"\tls_SqlErrMsg\t\t\t\t\t\t\tUMF_RESOURCEDEF.RESOURCEVAL%TYPE\t\t\t\t:= '';",
			"\tls_SqlState\t\t\t\t\t\t\t\tVARCHAR(5);",
			"",
			"\tlb_IsCSVFileType\t\t\t\t\t\tBOOLEAN DEFAULT FALSE;",
			"\tls_ErrorCheck\t\t\t\t\t\t\tVARCHAR;",
			"\tls_ColumnName\t\t\t\t\t\t\tVARCHAR;",
			"\tla_ColumnName\t\t\t\t\t\t\tVARCHAR[];",
			"",
			"\t-- システムコンフィグ用",
			"\tlarr_ConfigList\t\t\t\t\t\t\tTEXT[];",
			"\tls_Config_00102\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00103\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00104\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00106\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00108\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00112\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00200\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_EA016\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00201\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_00204\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_Config_HA014\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tls_Config_00009\t\t\t\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"",
			"\tls_Config_ItemClass_Length\t\t\t\tUMF_SYSTEMMODECONFIG.VALUE%TYPE;",
			"\tls_EA020_ExcludeTaxCalcType\t\t\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"\tls_EA021_IncludeTaxCalcType\t\t\t\tUMF_SYSTEMCONFIG.VALUE%TYPE;",
			"",
			"\tls_Out_CLASS1_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS2_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS3_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS4_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Out_CLASS5_CD\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_In_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS1_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS2_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS3_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS4_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_CLASS5_CD\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"",
			"\tls_LineNoCheck\t\t\t\t\t\t\tVARCHAR(5)\t\t\t\t\t\t\t\t\t\t:= '0';",
			"\tln_LineNo\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"\tln_LineNoRe\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"\tln_ErrorCount\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_ErrorCountBk\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"",
			"\tlb_StoreError\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_PartnerError\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_SkuError\t\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_ExistsOrder\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"\tlb_ExistsReturn\t\t\t\t\t\t\tBOOLEAN\t\t\t\t\t\t\t\t\t\t\t:= FALSE;",
			"",
			"\tln_SysDenpno\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_CountCostRate\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tls_Sku_Cd_Check\t\t\t\t\t\t\tVARCHAR;",
			"",
			"\tls_InspectDate\t\t\t\t\t\t\tUWK_CSVUPLOADCOLUMNDATA.COLUMN1%TYPE\t\t\t:= '';",
			"\tld_InspectDateCheck\t\t\t\t\t\tDATE;",
			"\tls_Store_Cd\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.STORE_CD%TYPE\t\t\t:= '';",
			"\tls_Partner_Cd\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.PARTNER_CD%TYPE\t\t\t:= '';",
			"\tls_LogisticsCenter\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.LOGISTICSCENTER_CD%TYPE\t:= '';",
			"\tls_LogisticsCenterCheck\t\t\t\t\tUTR_PURCHASEDENPHEADER.LOGISTICSCENTER_CD%TYPE\t:= '';",
			"\tls_DenpKind\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPKIND%TYPE\t\t\t:= '';",
			"\tls_DenpKindCsv\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPKIND%TYPE\t\t\t:= '';",
			"\tln_Denpno\t\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.DENPNO%TYPE\t\t\t\t:= 0;",
			"\tls_Company_Cd\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.COMPANY_CD%TYPE\t\t\t:= '';",
			"\tln_MoveDenpno\t\t\t\t\t\t\tUTR_MOVEDENPHEADER.DENPNO%TYPE\t\t\t\t\t:= 0;",
			"\tls_SkuName\t\t\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.SKUSNAME%TYPE;",
			"\tls_StandardName\t\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.STANDARDNAME%TYPE;",
			"\tln_SingleQty\t\t\t\t\t\t\tUTR_ORDERDETAIL.SINGLEQTY%TYPE;",
			"",
			"\tln_SystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tls_PartnerType\t\t\t\t\t\t\tUMF_PARTNER.PARTNERTYPE%TYPE;",
			"\tls_PayPartner_Cd\t\t\t\t\t\tUMF_PARTNER.PAYPARTNER_CD%TYPE;",
			"\tls_UserDenpkind\t\t\t\t\t\t\tUMF_DENPKIND.USERDENPKIND%TYPE;",
			"\tls_UserDenptype\t\t\t\t\t\t\tUMF_DENPTYPE.USERDENPTYPE%TYPE;",
			"\tls_DenpType\t\t\t\t\t\t\t\tUMF_DENPTYPE.DENPTYPE%TYPE;",
			"\tls_HeaderNotes\t\t\t\t\t\t\tUTR_PURCHASEDENPHEADER.NOTES%TYPE\t\t\t\t:= '';",
			"\tls_ItemAttributeType\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ITEMATTRIBUTETYPE%TYPE;",
			"\tls_ParentClass1_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS1_CD%TYPE;",
			"\tls_AttributeClass1_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS1_CD%TYPE;",
			"\tls_ParentClass2_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS2_CD%TYPE;",
			"\tls_AttributeClass2_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS2_CD%TYPE;",
			"\tls_ParentClass3_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS3_CD%TYPE;",
			"\tls_AttributeClass3_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS3_CD%TYPE;",
			"\tls_ParentClass4_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS4_CD%TYPE;",
			"\tls_AttributeClass4_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS4_CD%TYPE;",
			"\tls_ParentClass5_Cd\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARENTCLASS5_CD%TYPE;",
			"\tls_AttributeClass5_Cd\t\t\t\t\tUTR_PURCHASEDENPDETAIL.ATTRIBUTECLASS5_CD%TYPE;",
			"",
			"\tls_OutStore_Cd\t\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tls_InStore_Cd\t\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tls_ChangeStore_Cd\t\t\t\t\t\tUMF_PARTNER.CHANGESTORE_CD%TYPE;",
			"\tln_InsCount\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_UpdCount\t\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_LoopIndex\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 1;",
			"",
			"\tls_EOSType\t\t\t\t\t\t\t\tVARCHAR(1);",
			"\tln_CountDeliveryDecisionFlag\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count_LineNo\t\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tln_Count_DBLineNo\t\t\t\t\t\tNUMERIC\t\t\t\t\t\t\t\t\t\t\t:= 0;",
			"\tls_Company_Cd_Chk\t\t\t\t\t\tUMF_STORE.COMPANY_CD%TYPE\t\t\t\t\t\t:= '';",
			"\tls_GntnktType\t\t\t\t\t\t\tVARCHAR;",
			"\tln_CostRate\t\t\t\t\t\t\t\tNUMERIC(5, 2);",
			"\tln_TmpPartnerGntnk\t\t\t\t\t\tUTR_PURCHASEDENPDETAIL.PARTNERGNTNK%TYPE;",
			"",
			"\tln_OrderGntnk1\t\t\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK1%TYPE;",
			"\tln_OrderGntnk2\t\t\t\t\t\t\tUMF_ITEMSTORE.ORDERGNTNK2%TYPE;",
			"",
			"\to_Store\t\t\t\t\t\t\t\t\tTYPE_STORE;",
			"\to_PurchaseGnkBik\t\t\t\t\t\tTYPE_PURCHASEGNKBIK;",
			"",
			"\tlrec_ReturnHeader\t\t\t\t\t\tUTR_RETURNHEADER%ROWTYPE;",
			"\tlrec_OrderHeader\t\t\t\t\t\tUTR_ORDERHEADER%ROWTYPE;",
			"",
			"\tln_OutSystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tln_InSystemMode_Cd\t\t\t\t\t\tUMF_STORE.SYSTEMMODE_CD%TYPE;",
			"\tlrec_MasterItemIn\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"\tlrec_MasterItemOut\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"\tlrec_MasterItem\t\t\t\t\t\t\tPXC_EA25_001.MASTER_DATA_RECORD;",
			"",
			"\tls_Zero\t\t\t\t\t\t\t\t\tVARCHAR(1)\t:= '0';",
			"\tls_SkuClass\t\t\t\t\t\t\t\tUMF_CLASS.CLASS_CD%TYPE;",
			"\tls_Sku_Cd\t\t\t\t\t\t\t\tUMF_ITEM.SKU_CD%TYPE;",
			"\tln_OrderBitnk\t\t\t\t\t\t\tUTR_ORDERDETAIL.BITNK%TYPE;",
			"",
			"\t-- 商品マスタ取込取込条件取得変数",
			"\tls_ImportCondition1\t\t\t\t\t\tUWK_IMPORTCONDITION.CONDITION1%TYPE\t\t\t\t:= NULL;\t\t\t\t-- 取込条件1",
			"\tls_ImportCondition2_Server\t\t\t\tUWK_IMPORTCONDITION.CONDITION2%TYPE\t\t\t\t:= NULL;\t\t\t\t-- 取込条件2",
			"\tls_CompanyCd\t\t\t\t\t\t\tVARCHAR;",
			"\tld_RegistStoreDelayDate\t\t\t\t\tDATE;",
			"",
			"\tls_IncludeFlag\t\t\t\t\t\t\tVARCHAR;",
			"\tls_SuppliesType\t\t\t\t\t\t\tVARCHAR;",
			"\tls_ConsignItemType\t\t\t\t\t\tVARCHAR;",
			"\tls_GntnkType\t\t\t\t\t\t\tVARCHAR;",
			"\tls_CurrentDate\t\t\t\t\t\t\tVARCHAR;",
			"",
			"\t-- 変数定義",
			"\tlrec_UserInfo\t\t\t\t\t\t\tRECORD;",
			"\tlrec_UtrPurchaseDenpHeader\t\t\t\tUTR_PURCHASEDENPHEADER%ROWTYPE;",
			"\tlrec_UtrPurchaseDenpDetail\t\t\t\tUTR_PURCHASEDENPDETAIL%ROWTYPE;",
			"\tlrec_UtrMoveDenpHeader\t\t\t\t\tUTR_MOVEDENPHEADER%ROWTYPE;",
			"\tlrec_UtrMoveDenpDetail\t\t\t\t\tUTR_MOVEDENPDETAIL%ROWTYPE;",
			"",
			"\tlcur_EA25_TAXTYPE_GROUP\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXTYPE_GROUP\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXRATE_GROUP\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXRATE_GROUP\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXTYPE_ITEM\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXTYPE_ITEM\t\t\t\t\tRECORD;",
			"\tlcur_EA25_TAXRATE_ITEM\t\t\t\t\tREFCURSOR;",
			"\tlrec_EA25_TAXRATE_ITEM\t\t\t\t\tRECORD;",
			"\tlrec_EA25_ORDER_RETURN\t\t\t\t\tRECORD;",
			"\tlrec_DeliveryStore\t\t\t\t\t\tRECORD;",
			"",
			"\t-- カラムチェック用カーソル",
			"\tlcur_CSVUploadColumnData CURSOR FOR",
			"\t\tSELECT\t*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\tORDER BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN5;",
			"BEGIN",
			"\tlrec_UserInfo\t\t:= PXS_USER.p_GetUserInfo();",
			"\tls_ErrorCheck\t\t:= PXS_FILEUPLOAD.f_GetCheckErrorCode(i_CSVFile_Cd, i_CheckType);",
			"\tlb_IsCSVFileType\t:= PXS_FILEUPLOAD.f_CheckIsCSVFileType(i_Server_Cd, i_ImportBatchKey);",
			"\tls_CurrentDate\t\t:= CAST(CURRENT_DATE AS VARCHAR);",
			"",
			"\t-- 取込条件を取得",
			"\tSELECT\tCONDITION1,",
			"\t\t\tCONDITION2",
			"\tINTO\tls_ImportCondition1,\t\t-- 取込条件1",
			"\t\t\tls_ImportCondition2_Server\t-- 取込条件2",
			"\tFROM\tUWK_IMPORTCONDITION",
			"\tWHERE\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\tLIMIT 1 OFFSET 0;",
			"",
			"\tlarr_ConfigList\t\t:= ARRAY['00009', '00102', '00103', '00104', '00106', '00108', '00112', '00200', '00201', '00204', 'EA016', 'ITEMCLASS1_LENGTH', 'ITEMCLASS2_LENGTH', 'ITEMCLASS3_LENGTH', 'ITEMCLASS4_LENGTH', 'ITEMCLASS5_LENGTH', 'EA020', 'EA021', 'HA014'];",
			"",
			"\tPERFORM PXS_UTILITY.f_SetSystemConfig(NULL, larr_ConfigList);",
			"",
			"\tls_Config_00102\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00102');",
			"\tls_Config_00103\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00103');",
			"\tls_Config_00104\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00104');",
			"\tls_Config_00106\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00106');",
			"\tls_Config_00108\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00108');",
			"\tls_Config_00112\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00112');",
			"\tls_Config_00200\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00200');",
			"\tls_Config_EA016\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'EA016');",
			"\tls_Config_00201\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00201');",
			"\tls_Config_00204\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00204');",
			"\tls_Config_HA014\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'HA014');",
			"",
			"\tls_Config_00009\t\t:= PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, '00009');",
			"\tls_EA020_ExcludeTaxCalcType\t:= PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'EA020');\t-- シスコムEA020：外税の仕入原価税抜管理方法（1:それぞれ管理、2:明細に合わせる、3:ヘッダに合わせる）",
			"\tls_EA021_IncludeTaxCalcType\t:= PXS_UTILITY.f_GetSystemConfig (lrec_UserInfo.SYSTEMMODE_CD, 'EA021');\t-- シスコムEA021：内税の仕入原価税抜管理方法（1:それぞれ管理、2:明細に合わせる、3:ヘッダに合わせる）",
			"",
			"",
			"\t-- 在庫管理分類（2:第２分類　3:第３分類）を取得",
			"\tIF (ls_Config_00201 = '2') THEN",
			"\t\tls_Config_ItemClass_Length := PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH');",
			"",
			"\tELSIF (ls_Config_00201 = '3') THEN",
			"\t\tls_Config_ItemClass_Length := PXS_UTILITY.f_GetSystemConfig(lrec_UserInfo.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH');",
			"",
			"\tELSIF (ls_Config_00201 IS NULL) THEN",
			"\t\tls_Config_ItemClass_Length := '0';",
			"\tEND IF;",
			"",
			"\tIF (INSTR(ls_ErrorCheck, '00011') > 0) THEN",
			"\t\tIF (lb_IsCSVFileType = TRUE) THEN",
			"\t\t\t-- エラーテーブルへＩＮＳＥＲＴ",
			"\t\t\tINSERT INTO UWK_CSVUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\tUSER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA TMP_DATA",
			"\t\t\t\tWHERE\tTMP_DATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tTMP_DATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= TMP_DATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= TMP_DATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= TMP_DATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\tMAX(USER_CD)\t\tAS USER_CD",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN11;",
			"",
			"\t\tELSE",
			"\t\t\tINSERT INTO UWK_EXCELUPDATEERRORDATA",
			"\t\t\t\tSELECT\tSERVER_CD,",
			"\t\t\t\t\t\tIMPORTBATCHKEY,",
			"\t\t\t\t\t\tEXCELTAGINDEX,",
			"\t\t\t\t\t\tCSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA TMP_DATA",
			"\t\t\t\tWHERE\tTMP_DATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tTMP_DATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= TMP_DATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= TMP_DATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= TMP_DATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tEXCEPT",
			"\t\t\t\tSELECT\tMAX(COLUMNDATA.SERVER_CD)\t\tAS SERVER_CD,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.IMPORTBATCHKEY)\tAS IMPORTBATCHKEY,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.EXCELTAGINDEX)\tAS EXCELTAGINDEX,",
			"\t\t\t\t\t\tMAX(COLUMNDATA.CSVLINENO)\t\tAS CSVLINENO,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'00011',",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(null, i_CSVFile_Cd, '00011'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN1,COLUMN2,COLUMN3,COLUMN7,COLUMN8,COLUMN9,COLUMN11',",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'1',",
			"\t\t\t\t\t\tnull",
			"\t\t\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t\t\t)",
			"\t\t\t\tGROUP BY COLUMNDATA.COLUMN1, COLUMNDATA.COLUMN2, COLUMNDATA.COLUMN3, COLUMNDATA.COLUMN7, COLUMNDATA.COLUMN8, COLUMNDATA.COLUMN9, COLUMNDATA.COLUMN11;",
			"\t\tEND IF;",
			"\tEND IF;",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_COLUMNDATA_SOURCE AS",
			"\t\tSELECT\tCAST('0000000000000' AS VARCHAR) AS SKUCLASS_CD,",
			"\t\t\t\t*",
			"\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_COLUMNDATA_SOURCE;",
			"",
			"\tINSERT INTO TMP_EA25_COLUMNDATA_SOURCE",
			"\t\tSELECT\tSUBSTR(COLUMNDATA.COLUMN11, LENGTH(COLUMNDATA.COLUMN11) - CAST(ls_Config_ItemClass_Length AS INTEGER) + 1, CAST(ls_Config_ItemClass_Length AS INTEGER))\tAS SKUCLASS_CD,",
			"\t\t\t\tCOLUMNDATA.*",
			"\t\tFROM\tUWK_CSVUPLOADCOLUMNDATA COLUMNDATA",
			"\t\tWHERE\tCOLUMNDATA.SERVER_CD\t\t= i_Server_Cd",
			"\t\tAND\t\tCOLUMNDATA.IMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t)",
			"\t\tAND\t\tNOT EXISTS (",
			"\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA ERRORDATA",
			"\t\t\t\t\tWHERE\tERRORDATA.SERVER_CD\t\t\t= COLUMNDATA.SERVER_CD",
			"\t\t\t\t\tAND\t\tERRORDATA.IMPORTBATCHKEY\t= COLUMNDATA.IMPORTBATCHKEY",
			"\t\t\t\t\tAND\t\tERRORDATA.CSVLINENO\t\t\t= COLUMNDATA.CSVLINENO",
			"\t\t\t\t\tAND\t\tERRORDATA.CHECKTYPE\t\t\t= i_CheckType",
			"\t\t\t\t);",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_COLUMNDATA_SOURCE ON TMP_EA25_COLUMNDATA_SOURCE (COLUMN1, COLUMN2, COLUMN3, COLUMN7, COLUMN8, COLUMN9, COLUMN11, COLUMN12);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_COLUMNDATA AS",
			"\t\tSELECT\tCAST('0000000000000' AS VARCHAR) AS SKU_CD,",
			"\t\t\t\t*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA_SOURCE",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_COLUMNDATA;",
			"",
			"\tINSERT INTO TMP_EA25_COLUMNDATA",
			"\t\tSELECT\tCASE",
			"\t\t\t\t\tWHEN CLS.INCLUDE_CD IS NOT NULL THEN CLS.INCLUDE_CD",
			"\t\t\t\t\tELSE TMP.COLUMN11",
			"\t\t\t\tEND\t\t\t\t\t\tAS SKU_CD,",
			"\t\t\t\tTMP.*",
			"\t\tFROM\tTMP_EA25_COLUMNDATA_SOURCE TMP",
			"\t\t\t\tLEFT OUTER JOIN UMF_CLASS CLS",
			"\t\t\t\t\tON\tCLS.ITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\t\t\tAND\tCLS.CLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\t\t\tAND\tCLS.CLASS_CD\t\t\t=\tCASE",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN TMP.COLUMN11 = LPAD(TMP.SKUCLASS_CD, 13, '0') THEN TMP.SKUCLASS_CD",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tEND;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_COLUMNDATA ON TMP_EA25_COLUMNDATA (COLUMN1, COLUMN2, COLUMN3, COLUMN7, COLUMN8, COLUMN9, COLUMN11, COLUMN12);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_HEADERTAXCAL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_HEADERTAXCAL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IDX_TMP_EA25_HEADERTAXCAL ON TMP_EA25_HEADERTAXCAL (SYSDENPNO);",
			"",
			"\t-- 取込ファイルの同一伝票番号チェック用テンポラリテーブル",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER_CHECK (",
			"\t\tDENPNO\t\t\t\tNUMERIC(9, 0),",
			"\t\tSTORE_CD\t\t\tVARCHAR(5),",
			"\t\tPARTNER_CD\t\t\tVARCHAR(6),",
			"\t\tDENPINSPECTDATE\t\tDATE,",
			"\t\tCSVDENPKIND\t\t\tVARCHAR,",
			"\t\tCSVLINENO\t\t\tNUMERIC",
			"\t);",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER_CHECK;",
			"",
			"\tCREATE INDEX IX1_TMP_EA25_DENPHEADER_CHECK ON TMP_EA25_DENPHEADER_CHECK (DENPNO);",
			"",
			"\t-- 更新用テンポラリテーブル（拡張)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tSKU_CD,",
			"\t\t\t\tSKUSNAME,",
			"\t\t\t\tSTANDARDNAME,",
			"\t\t\t\tQTY,",
			"\t\t\t\tGNTNK,",
			"\t\t\t\tGNKKNGK,",
			"\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\tPROFITGNTNK,",
			"\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\tNET1GNTNK,",
			"\t\t\t\tNET2GNTNK,",
			"\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\tPOSGNTNK,",
			"\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\tBITNK,",
			"\t\t\t\tBIKKNGK,",
			"\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tLOTSIZE,",
			"\t\t\t\tORDERGNTNK,",
			"\t\t\t\tORDERBITNK,",
			"\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\tNOTES,",
			"\t\t\t\tREASON_CD,",
			"\t\t\t\tIDNUMBER,",
			"\t\t\t\tGROSSDENPNO,",
			"\t\t\t\tGROSSLINENO",
			"\t\tFROM\tUTR_PURCHASEDENPDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPDETAIL ON TMP_EA25_DENPDETAIL (SYSDENPNO, LINENO);",
			"",
			"\t-- 更新用テンポラリテーブル（拡張)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_DENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tCOMPANY_CD,",
			"\t\t\t\tSTORE_CD,",
			"\t\t\t\tFLOOR_CD,",
			"\t\t\t\tREDECORATION_CD,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\tCLASSTYPE,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tPAYSCHDATE,",
			"\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\tTRADETYPE,",
			"\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\tTOTALQTY,",
			"\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\tORDERDATE,",
			"\t\t\t\tDELIVERYDATE,",
			"\t\t\t\tORDERMETHOD,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tDELIVERYNO,",
			"\t\t\t\tORDERLOTQTY,",
			"\t\t\t\tORDERQTY,",
			"\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_DENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_DENPHEADER ON TMP_EA25_DENPHEADER (SYSDENPNO);",
			"",
			"\t-- 更新用テンポラリテーブル（拡張)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_MOVEDENPDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tEFFECTTYPE,",
			"\t\t\t\tMOVESTATUS,",
			"\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\tINSTORE_CD,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tOUTDATE,",
			"\t\t\t\tINDATE,",
			"\t\t\t\tSKU_CD,",
			"\t\t\t\tSKUSNAME,",
			"\t\t\t\tSTANDARDNAME,",
			"\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\tOUTQTY,",
			"\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\tOUTGNTNK,",
			"\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\tOUTBITNK,",
			"\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\tINQTY,",
			"\t\t\t\tINPOSGNTNK,",
			"\t\t\t\tINGNTNK,",
			"\t\t\t\tINGNKKNGK,",
			"\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\tINNET1GNTNK,",
			"\t\t\t\tINNET2GNTNK,",
			"\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\tINBITNK,",
			"\t\t\t\tINBIKKNGK,",
			"\t\t\t\tINLOSSQTY,",
			"\t\t\t\tTAXTYPE,",
			"\t\t\t\tTAXRATE,",
			"\t\t\t\tNOTES,",
			"\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\tINSTOREITEMCOPYFLAG",
			"\t\tFROM\tUTR_MOVEDENPDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_MOVEDENPDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_MOVEDENPDETAIL ON TMP_EA25_MOVEDENPDETAIL (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_ORDERHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDELIVERYDECISIONFLAG,",
			"\t\t\t\tINSPECTDATE",
			"\t\tFROM\tUTR_ORDERHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_ORDERHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_ORDERHEADER ON TMP_EA25_ORDERHEADER (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_RETURNHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDELIVERYDECISIONFLAG,",
			"\t\t\t\tINSPECTDATE",
			"\t\tFROM\tUTR_RETURNHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_RETURNHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_RETURNHEADER ON TMP_EA25_RETURNHEADER (SYSDENPNO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_ORDERDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDELIVERYQTY",
			"\t\tFROM\tUTR_ORDERDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_ORDERDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_ORDERDETAIL ON TMP_EA25_ORDERDETAIL (SYSDENPNO, LINENO);",
			"",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_RETURNDETAIL AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tLINENO,",
			"\t\t\t\tDELIVERYQTY",
			"\t\tFROM\tUTR_RETURNDETAIL",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_RETURNDETAIL;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_RETURNDETAIL ON TMP_EA25_RETURNDETAIL (SYSDENPNO, LINENO);",
			"",
			"\t-- 更新用テンポラリテーブル（拡張)",
			"\tCREATE TEMPORARY TABLE IF NOT EXISTS TMP_EA25_MOVEDENPHEADER AS",
			"\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\tDENPNO,",
			"\t\t\t\tDENPKIND,",
			"\t\t\t\tUSERDENPKIND,",
			"\t\t\t\tDENPTYPE,",
			"\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\tRBFLAG,",
			"\t\t\t\tEFFECTTYPE,",
			"\t\t\t\tMOVESTATUS,",
			"\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\tREGISTERDATE,",
			"\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\tINSTORE_CD,",
			"\t\t\t\tINFLOOR_CD,",
			"\t\t\t\tINSPECTDATE,",
			"\t\t\t\tOUTDATE,",
			"\t\t\t\tINDATE,",
			"\t\t\t\tINPLANDATE,",
			"\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\tORDERDENPNO,",
			"\t\t\t\tREVERSETYPE,",
			"\t\t\t\tBOXESSEQNO,",
			"\t\t\t\tBOXESQTY,",
			"\t\t\t\tBOXESNO,",
			"\t\t\t\tPARTNER_CD,",
			"\t\t\t\tNOTES",
			"\t\tFROM\tUTR_MOVEDENPHEADER",
			"\t\tWITH NO DATA;",
			"",
			"\tTRUNCATE TABLE TMP_EA25_MOVEDENPHEADER;",
			"",
			"\tCREATE INDEX IF NOT EXISTS IX1_TMP_EA25_MOVEDENPHEADER ON TMP_EA25_MOVEDENPHEADER (SYSDENPNO);",
			"",
			"\tFOR lrec_CSVUploadColumnData IN lcur_CSVUploadColumnData LOOP",
			"\t\tSELECT\tMAX(LINENO) + 1",
			"\t\tINTO\tln_LineNo",
			"\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\tWHERE\tSERVER_CD\t\t= lrec_CSVUploadColumnData.SERVER_CD",
			"\t\tAND\t\tIMPORTBATCHKEY\t= lrec_CSVUploadColumnData.IMPORTBATCHKEY",
			"\t\tAND\t\tCSVLINENO\t\t= lrec_CSVUploadColumnData.CSVLINENO",
			"\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\tINTO\tln_LineNo",
			"\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\tWHERE\tSERVER_CD\t\t= lrec_CSVUploadColumnData.SERVER_CD",
			"\t\t\tAND\t\tIMPORTBATCHKEY\t= lrec_CSVUploadColumnData.IMPORTBATCHKEY",
			"\t\t\tAND\t\tCSVLINENO\t\t= lrec_CSVUploadColumnData.CSVLINENO",
			"\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\tEND IF;",
			"",
			"\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\tln_LineNo\t:= 1;",
			"\t\tEND IF;",
			"",
			"\t\t-- 更新マスタに存在しない場合、ＣＳＶ取込タイプが【2:総入替】の場合",
			"\t\t-- 項目必須チェック（使用するカラムをすべて記載する）",
			"\t\tIF (INSTR(ls_ErrorCheck, '00010') > 0) THEN",
			"\t\t\tIF (\tlrec_CSVUploadColumnData.COLUMN1_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN2_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN3_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN4_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN5_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN6_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN7_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN8_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN9_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN10_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN11_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN12_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN13_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN14_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN15_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN16_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN17_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN18_FLAG = '9'",
			"\t\t\t\tOR\tlrec_CSVUploadColumnData.COLUMN19_FLAG = '9'",
			"\t\t\t\t) THEN",
			"\t\t\t\tls_ColumnName\t:=\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN1_FLAG = '9') THEN 'COLUMN1'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN2_FLAG = '9') THEN 'COLUMN2'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN3_FLAG = '9') THEN 'COLUMN3'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN4_FLAG = '9') THEN 'COLUMN4'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN5_FLAG = '9') THEN 'COLUMN5'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN6_FLAG = '9') THEN 'COLUMN6'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN7_FLAG = '9') THEN 'COLUMN7'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN8_FLAG = '9') THEN 'COLUMN8'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN9_FLAG = '9') THEN 'COLUMN9'\t\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN10_FLAG = '9') THEN 'COLUMN10'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN11_FLAG = '9') THEN 'COLUMN11'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN12_FLAG = '9') THEN 'COLUMN12'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN13_FLAG = '9') THEN 'COLUMN13'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN14_FLAG = '9') THEN 'COLUMN14'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN15_FLAG = '9') THEN 'COLUMN15'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN16_FLAG = '9') THEN 'COLUMN16'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN17_FLAG = '9') THEN 'COLUMN17'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN18_FLAG = '9') THEN 'COLUMN18'\t|| C_ARRAY_DELIMITER ELSE '' END ||",
			"\t\t\t\t\t\t\t\t\tCASE WHEN (lrec_CSVUploadColumnData.COLUMN19_FLAG = '9') THEN 'COLUMN19'\t|| C_ARRAY_DELIMITER ELSE '' END;",
			"",
			"\t\t\t\tla_ColumnName\t\t:= STRING_TO_ARRAY(TRIM(ls_ColumnName, C_ARRAY_DELIMITER), C_ARRAY_DELIMITER);",
			"",
			"\t\t\t\t-- エラーテーブルへINSERT",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.P_ACCEPTCSVUPDATEERRORDATA (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'00010',",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(i_User_Cd, i_CSVFile_Cd, '00010'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\tla_ColumnName",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + ARRAY_LENGTH(la_ColumnName, 1);",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tls_EOSType\t\t:= lrec_CSVUploadColumnData.COLUMN6;",
			"\t\tlb_ExistsOrder\t:= FALSE;",
			"\t\tlb_ExistsReturn\t:= FALSE;",
			"",
			"\t\tlrec_DeliveryStore := PXS_UTILITY.f_GetDeliveryStoreCd (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN NULL",
			"\t\t\t\t\t\t\t\t\t\tELSE COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\tEND,",
			"\t\t\t\t\t\t\t\t\tCASE",
			"\t\t\t\t\t\t\t\t\t\tWHEN lrec_CSVUploadColumnData.COLUMN7 = '2' THEN COALESCE(lrec_CSVUploadColumnData.COLUMN15, lrec_CSVUploadColumnData.COLUMN1, ls_CurrentDate)",
			"\t\t\t\t\t\t\t\t\t\tELSE NULL",
			"\t\t\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\tlrec_CSVUploadColumnData.COLUMN2 := lrec_DeliveryStore.STORE_CD;",
			"",
			"\t\t-- 取込レイアウト.EOS区分を0:自動判別もしくは1:EOSとした場合は、以下の条件で発注実績もしくは返品実績を参照し、EOS／手書の判別やチェック処理、納品確定フラグなどの更新を行います。",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '0' OR lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN7 = '2') THEN",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tlrec_ReturnHeader",
			"\t\t\t\tFROM\tUTR_RETURNHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tORDER BY DELIVERYDECISIONFLAG, RETURNDATE DESC",
			"\t\t\t\tLIMIT 1;",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50200') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50200',\t\t-- 返品実績が存在しません。",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50200'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN6,COLUMN7'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_EOSType\t:= '2';",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\t\tlb_ExistsReturn\t:= FALSE;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tlb_ExistsReturn\t:= TRUE;",
			"\t\t\t\t\tls_EOSType\t\t:= '1';",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tSELECT\t*",
			"\t\t\t\tINTO\tlrec_OrderHeader",
			"\t\t\t\tFROM\tUTR_ORDERHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tORDER BY DELIVERYDECISIONFLAG, ORDERDATE DESC",
			"\t\t\t\tLIMIT 1;",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN6 = '1') THEN",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50100') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50100',\t\t-- 発注実績が存在しません。",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50100'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN6,COLUMN7'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tls_EOSType := '2';",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\t\tlb_ExistsOrder\t:= FALSE;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tlb_ExistsOrder\t:= TRUE;",
			"\t\t\t\t\tls_EOSType\t\t:= '1';",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '50004') > 0) THEN",
			"\t\t\tIF (TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD') > CURRENT_DATE) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50004',\t\t\t\t-- 伝票日付に未来日付は入力できません。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '50004'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 伝票締日マスタチェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '60004') > 0 AND ls_ImportCondition2_Server = 'AEOS') THEN",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN1 IS NOT NULL) THEN",
			"\t\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\t\tINTO\tls_CompanyCd",
			"\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\tls_CompanyCd\t:= COALESCE(ls_CompanyCd, '');",
			"",
			"\t\t\t\tSELECT\tSTOREDELAYDATE",
			"\t\t\t\tINTO\tld_RegistStoreDelayDate",
			"\t\t\t\tFROM\tUMF_COMPANYDELAYDAY",
			"\t\t\t\tWHERE\tSETTYPE\t\t\t= '2'",
			"\t\t\t\tAND\t\tCOMPANY_CD\t\t= ls_CompanyCd",
			"\t\t\t\tAND\t\tVALIDFLAG\t\t= '1'",
			"\t\t\t\tAND\t\tACCOUNTSMONTH\t= TO_CHAR(TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), 'YYYYMM');",
			"",
			"\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\tSELECT\tSTOREDELAYDATE",
			"\t\t\t\t\tINTO\tld_RegistStoreDelayDate",
			"\t\t\t\t\tFROM\tUMF_COMPANYDELAYDAY",
			"\t\t\t\t\tWHERE\tSETTYPE\t\t\t= '1'",
			"\t\t\t\t\tAND\t\tCOMPANY_CD\t\t= '00000'",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t\t= '1'",
			"\t\t\t\t\tAND\t\tACCOUNTSMONTH\t= TO_CHAR(TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'), 'YYYYMM');",
			"",
			"\t\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\t\tld_RegistStoreDelayDate\t\t:= NULL;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (ld_RegistStoreDelayDate IS NOT NULL) THEN",
			"\t\t\t\t\tIF (ld_RegistStoreDelayDate < CURRENT_DATE) THEN",
			"\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60004',\t\t\t\t-- 伝票ロック日を過ぎているため登録できません。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '60004'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- マスタ存在チェック(●共通チェック)",
			"\t\tSELECT\tSYSTEMMODE_CD",
			"\t\tINTO\tln_SystemMode_Cd",
			"\t\tFROM\tUMF_STORE",
			"\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tIF (NOT FOUND) THEN",
			"\t\t\tln_SystemMode_Cd := '001';",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk\t\t:= ln_ErrorCount;",
			"",
			"\t\t-- 店舗コードのマスタ存在チェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '10000') > 0 OR INSTR(ls_ErrorCheck, '10010') > 0 AND lrec_CSVUploadColumnData.COLUMN2 IS NOT NULL) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFSTORE (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN2'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- 店舗コードエラー",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_StoreError\t:= TRUE;",
			"\t\tEND IF;",
			"",
			"\t\tls_SkuClass := SUBSTR(lrec_CSVUploadColumnData.COLUMN11, LENGTH(lrec_CSVUploadColumnData.COLUMN11) - CAST(ls_Config_ItemClass_Length AS INTEGER) + 1, CAST(ls_Config_ItemClass_Length AS INTEGER));",
			"",
			"\t\tls_IncludeFlag\t:= '0';",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN11 = LPAD(ls_SkuClass, 13, '0')) THEN",
			"\t\t\tSELECT\tINCLUDE_CD",
			"\t\t\tINTO\tls_Sku_Cd",
			"\t\t\tFROM\tUMF_CLASS",
			"\t\t\tWHERE\tITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\tAND\t\tCLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\tAND\t\tCLASS_CD\t\t\t= ls_SkuClass;",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tls_Sku_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN11;",
			"\t\t\tELSE",
			"\t\t\t\tls_IncludeFlag\t:= '1';",
			"\t\t\tEND IF;",
			"",
			"\t\tELSE",
			"\t\t\tSELECT\tINCLUDE_CD",
			"\t\t\tINTO\tls_Sku_Cd",
			"\t\t\tFROM\tUMF_CLASS",
			"\t\t\tWHERE\tITEMATTRIBUTETYPE\t= lrec_UserInfo.ITEMATTRIBUTETYPE",
			"\t\t\tAND\t\tCLASSTYPE\t\t\t= ls_Config_00201",
			"\t\t\tAND\t\tINCLUDE_CD\t\t\t= lrec_CSVUploadColumnData.COLUMN11;",
			"",
			"\t\t\tIF (FOUND) THEN",
			"\t\t\t\tls_IncludeFlag\t:= '1';",
			"\t\t\tELSE",
			"\t\t\t\tls_Sku_Cd := lrec_CSVUploadColumnData.COLUMN11;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 包括コードの場合、原単価と売単価が指定されていない場合エラー",
			"\t\tIF(ls_IncludeFlag <> '0' AND (lrec_CSVUploadColumnData.COLUMN13 IS NULL OR lrec_CSVUploadColumnData.COLUMN14 IS NULL) ) THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60005') > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60005',\t\t-- 分類入力の為原単価と売単価必須です。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60005'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN13,COLUMN14'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tSELECT\tSUPPLIESTYPE,",
			"\t\t\t\tCONSIGNITEMTYPE",
			"\t\tINTO\tls_SuppliesType,",
			"\t\t\t\tls_ConsignItemType",
			"\t\tFROM\tUMF_ITEM",
			"\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\tSELECT\tGNTNKTYPE,",
			"\t\t\t\tORDERGNTNK1,",
			"\t\t\t\tORDERGNTNK2",
			"\t\tINTO\tls_GntnkType,",
			"\t\t\t\tln_OrderGntnk1,",
			"\t\t\t\tln_OrderGntnk2",
			"\t\tFROM\tUMF_ITEMSTORE",
			"\t\tWHERE\tSTORE_CD\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\tAND\t\tSKU_CD\t\t\t= ls_Sku_Cd",
			"\t\tAND\t\tVALIDFLAG\t\t= '1';",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN7 <> '5' AND lrec_CSVUploadColumnData.COLUMN7 <> '6') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60012') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType <> '0' AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60012',\t\t-- 用度品・委託伝票区分チェックです。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60012'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tELSIF (INSTR(ls_ErrorCheck, '60006') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType <> '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60006',\t\t-- 用度品伝票区分チェックです。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60006'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"",
			"\t\t\tELSIF (INSTR(ls_ErrorCheck, '60010') > 0 AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60010',\t\t-- 委託伝票区分チェックです。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60010'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN7 = '5') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60007') > 0 AND ls_SuppliesType IS NOT NULL AND ls_SuppliesType = '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60007',\t\t-- 用度品伝票区分チェックです。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60007'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN7 = '6') THEN",
			"\t\t\tSELECT\tPARTNERTYPE",
			"\t\t\tINTO\tls_PartnerType",
			"\t\t\tFROM\tUMF_PARTNER",
			"\t\t\tWHERE\tPARTNER_CD = lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG = '1';",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60011') > 0 AND ls_ConsignItemType IS NOT NULL AND ls_ConsignItemType <> '1' AND ls_PartnerType IS NOT NULL AND ls_PartnerType <> '12') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60011',\t\t-- 委託伝票区分チェックです。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60011'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_GntnkType = '1') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60013') > 0 AND lrec_CSVUploadColumnData.COLUMN13 IS NOT NULL) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60013',",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60013'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN13'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60014') > 0 AND lrec_CSVUploadColumnData.COLUMN13 IS NULL) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60014',",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60014'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN13'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60016') > 0) THEN",
			"\t\t\to_Store := PXS_UTILITY.f_GetStoreHistory(lrec_CSVUploadColumnData.COLUMN2, TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'));",
			"",
			"\t\t\tSELECT\tCOMPANY_CD",
			"\t\t\tINTO\tls_Company_Cd_Chk",
			"\t\t\tFROM\tUMF_STORE",
			"\t\t\tWHERE\tSTORE_CD\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tIF (o_Store.COMPANY_CD <> ls_Company_Cd_Chk) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60016',\t\t\t\t\t\t\t-- 伝票日付時点の旧会社コードを設定しました。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60016'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN1,COLUMN2'",
			"\t\t\t\t);",
			"\t\t\tEND IF;",
			"",
			"\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_EOSType = '2' AND lrec_CSVUploadColumnData.COLUMN6 = '0') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60017') > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\tNULL,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t'60017',\t\t\t\t\t-- 手書伝票と判別されました。",
			"\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60017'),",
			"\t\t\t\t\t'',",
			"\t\t\t\t\t'COLUMN6'",
			"\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk := ln_ErrorCount;",
			"",
			"\t\t-- 商品コードのマスタ存在チェック",
			"\t\tIF (lb_SkuError = FALSE AND (INSTR(ls_ErrorCheck, '10001') > 0 OR INSTR(ls_ErrorCheck, '10011') > 0)) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFItem (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- 商品コードエラー",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_SkuError := TRUE;",
			"\t\tEND IF;",
			"",
			"\t\t-- 商品店舗コードのマスタ存在チェック(包括コードの場合存在チェックを行わない。",
			"\t\tIF ((lb_SkuError = FALSE AND lb_StoreError = FALSE) AND (INSTR(ls_ErrorCheck, '10002') > 0 OR INSTR(ls_ErrorCheck, '10012') > 0) AND ls_IncludeFlag <> '1') THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFItemStore (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN2,COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\tSELECT\tITEMATTRIBUTETYPE",
			"\t\tINTO\tls_ItemAttributeType",
			"\t\tFROM\tUMF_SYSTEMMODE",
			"\t\tWHERE\tSYSTEMMODE_CD\t= ln_SystemMode_Cd",
			"\t\tAND\t\tVALIDFLAG\t\t= '1';",
			"",
			"\t\tIF (NOT FOUND) THEN",
			"\t\t\tls_ItemAttributeType := '001';",
			"\t\tEND IF;",
			"",
			"\t\tIF (lb_SkuError = FALSE AND (INSTR(ls_ErrorCheck, '10006') > 0 OR INSTR(ls_ErrorCheck, '10007') > 0)) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUmfItemClass (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCountBk := ln_ErrorCount;",
			"",
			"\t\t-- パートナーコードのマスタ存在チェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '10004') > 0 OR INSTR(ls_ErrorCheck, '10014') > 0) THEN",
			"\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\tio_ErrorCount",
			"\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\tln_ErrorCount",
			"\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFPARTNER (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t);",
			"\t\tEND IF;",
			"",
			"\t\t-- パートナーコードエラー",
			"\t\tIF (ln_ErrorCount > ln_ErrorCountBk) THEN",
			"\t\t\tlb_PartnerError := TRUE;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_EOSType = '1') THEN",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '12';",
			"\t\t\t\t\tls_DenpType\t:= lrec_ReturnHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '14';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"",
			"\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '14';",
			"",
			"\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '81';",
			"",
			"\t\t\t\tWHEN ('6') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= '16';",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_DenpKind\t:= '10';",
			"\t\t\t\t\tls_DenpType\t:= lrec_OrderHeader.DENPTYPE;",
			"\t\t\tEND CASE;",
			"",
			"\t\tELSE",
			"\t\t\tCASE (lrec_CSVUploadColumnData.COLUMN7)",
			"\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '13';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '15';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"",
			"\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '14';",
			"",
			"\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '81';",
			"",
			"\t\t\t\tWHEN ('6') THEN",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '16';",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_DenpKind\t:= '11';",
			"\t\t\t\t\tls_DenpType\t:= '01';",
			"\t\t\tEND CASE;",
			"\t\tEND IF;",
			"",
			"\t\t-- 店舗コードとパートナーコードはエラーがない場合、検収日を取得します。",
			"\t\tIF (lb_StoreError = FALSE AND lb_PartnerError = FALSE) THEN",
			"\t\t\tld_InspectDateCheck\t:= PXS_UTILITY.f_GetDenpAccountDate (",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\t\t\t\t\t\tls_DenpKind,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\t\t\t\t\t\tlrec_UserInfo.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\t\t\tls_Config_00201,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN4,",
			"\t\t\t\t\t\t\t\t\tls_Config_00009,",
			"\t\t\t\t\t\t\t\t\tls_Config_00204",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50005') > 0) THEN",
			"\t\t\t\tIF (TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD') <> ld_InspectDateCheck) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50005',\t\t\t-- 入力された伝票日付は算出の伝票日付が異なっています。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50005'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- パートナーコードより、仕入か移動か判別する。",
			"\t\tSELECT\tPARTNERTYPE,",
			"\t\t\t\tCHANGESTORE_CD",
			"\t\tINTO\tls_PartnerType,",
			"\t\t\t\tls_ChangeStore_Cd",
			"\t\tFROM\tUMF_PARTNER",
			"\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t-- 発注先区分がDCの場合エラー",
			"\t\tIF (INSTR(ls_ErrorCheck, '50009') > 0 AND ls_EOSType = '2') THEN",
			"\t\t\tIF (ls_PartnerType = '11') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50009',\t\t\t-- 発注先が物流センターとなっています。移動伝票として登録してください。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50009'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN3'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"\t\t\tSELECT\tCOALESCE(PAYPARTNER_CD, '')",
			"\t\t\tINTO\tls_PayPartner_Cd",
			"\t\t\tFROM\tUMF_PARTNER",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\tEND IF;",
			"",
			"\t\t-- 物流センターのマスタ存在チェック",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL AND lrec_CSVUploadColumnData.COLUMN5 <> '000000') THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '10026') > 0 OR INSTR(ls_ErrorCheck, '10027') > 0) THEN",
			"\t\t\t\tSELECT\tio_LineNo,",
			"\t\t\t\t\t\tio_ErrorCount",
			"\t\t\t\tINTO\tln_LineNo,",
			"\t\t\t\t\t\tln_ErrorCount",
			"\t\t\t\tFROM\tPXS_CSVUPLOADCOMMONCHECK.f_CheckExistUMFLogisticsCenter (",
			"\t\t\t\t\t\t\ti_User_Cd,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CSVFile_Cd,",
			"\t\t\t\t\t\t\tCAST(i_CheckType AS VARCHAR),",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN5,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\tln_ErrorCount,",
			"\t\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t\t);",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '50007') > 0) THEN",
			"\t\t\tSELECT\tCOUNT(1)",
			"\t\t\tINTO\tln_Count",
			"\t\t\tFROM\tUTR_PURCHASEDENPHEADER",
			"\t\t\tWHERE\tDENPNO\t\t\t\t\t\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\tAND\t\tSTORE_CD\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tTO_CHAR(INSPECTDATE, 'YYYYMM')\t\t= TO_CHAR(ld_InspectDateCheck, 'YYYYMM')",
			"\t\t\tAND\t\t(\t(lrec_CSVUploadColumnData.COLUMN7 = '1' AND DENPKIND IN ('10', '11') AND DENPTYPE NOT IN ('71', '81', '16', '14'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '2' AND DENPKIND IN ('12', '13'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '3' AND DENPKIND IN ('14', '15'))",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '4' AND DENPKIND IN ('10', '11') AND DENPTYPE = '14')",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '5' AND DENPKIND IN ('10', '11') AND DENPTYPE = '81')",
			"\t\t\t\t\tOR\t(lrec_CSVUploadColumnData.COLUMN7 = '6' AND DENPKIND IN ('10', '11') AND DENPTYPE = '16')",
			"\t\t\t\t\t);",
			"",
			"\t\t\tIF (ln_Count > 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50007',\t\t-- 伝票番号が計上済みです。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50007'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN2,COLUMN3,COLUMN8'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- EOS(※)かつ取込レイアウト.伝票種別が1:仕入もしくは3:値引の場合のみチェックを行う",
			"\t\tIF (ls_EOSType = '1' AND (lrec_CSVUploadColumnData.COLUMN7 = '1' OR lrec_CSVUploadColumnData.COLUMN7 = '3') AND lb_ExistsOrder) THEN",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50101') > 0 AND COALESCE(lrec_OrderHeader.DELIVERYDECISIONFLAG, '0') = '1') THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50101',\t\t-- 仕入伝票が計上済です。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50101'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tSELECT\tSKU_CD,",
			"\t\t\t\t\tSINGLEQTY",
			"\t\t\tINTO\tls_Sku_Cd_Check,",
			"\t\t\t\t\tln_SingleQty",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50105') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50105',\t\t-- 発注実績に存在しない行番号です。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50105'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ls_Sku_Cd_Check <> lrec_CSVUploadColumnData.COLUMN11) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50104') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50104',\t\t-- 発注実績と異なる商品コードです。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50104'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ln_SingleQty < CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '60019') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'60019',\t\t-- 仕入数が発注数を超えています。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60019'),",
			"\t\t\t\t\t\t\t\t'(発注数：' || CAST(ln_SingleQty AS INT) || ')',",
			"\t\t\t\t\t\t\t\t'COLUMN12'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50106') > 0) THEN",
			"\t\t\t\t--該当する発注実績に存在する行番号と一致する取込レイアウト.行番号のデータが存在しない場合",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_DBLineNo",
			"\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO;",
			"",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_LineNo",
			"\t\t\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tEXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERHEADER HEADER",
			"\t\t\t\t\t\t\t\t\tINNER JOIN UTR_ORDERDETAIL DETAIL",
			"\t\t\t\t\t\t\t\t\t\tON\tDETAIL.SYSDENPNO\t= HEADER.SYSDENPNO",
			"\t\t\t\t\t\t\tWHERE\tHEADER.STORE_CD\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\t\t\tAND\t\tHEADER.PARTNER_CD\t\t\t\t\t\t\t\t\t= COLUMNDATA.COLUMN3",
			"\t\t\t\t\t\t\tAND\t\tHEADER.DENPNO\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(COLUMNDATA.COLUMN10, COLUMNDATA.COLUMN8) AS NUMERIC)",
			"\t\t\t\t\t\t\tAND\t\t(\t(COLUMNDATA.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\t\t\t\tAND\tTO_DATE(COLUMNDATA.COLUMN15, 'YYYY/MM/DD')\t= HEADER.ORDERDATE",
			"\t\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\t\t\tOR\tHEADER.ORDERDATE\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\tAND\t\tHEADER.SYSDENPNO\t\t\t\t\t\t\t\t\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tDETAIL.LINENO\t\t\t\t\t\t\t\t\t\t= CAST(COLUMNDATA.COLUMN9 AS NUMERIC)",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_Count_DBLineNo > ln_Count_LineNo) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50106',\t\t-- 発注実績に存在する行番号が取込データに存在しません。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50106'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50107') > 0) THEN",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_CountDeliveryDecisionFlag",
			"\t\t\t\tFROM\tUTR_ORDERHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(\tlrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND\tTO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')\t= ORDERDATE",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tORDERDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tAND\t\tDELIVERYDECISIONFLAG\t\t\t\t\t\t\t\t\t\t\t\t= '0'",
			"\t\t\t\tGROUP BY DENPNO, STORE_CD, PARTNER_CD;",
			"",
			"\t\t\t\tIF (ln_CountDeliveryDecisionFlag > 1) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50107',\t\t-- 同一伝票番号・店舗・発注先の発注実績が複数存在します。発注日を指定するか、画面から伝票計上してください。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50107'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 発注実績物流センター不整合チェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '50108') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\tIF ((ls_DenpKind = '10' OR ls_DenpKind = '14') AND lrec_OrderHeader.LOGISTICSCENTER_CD <> lrec_CSVUploadColumnData.COLUMN5) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50108',\t\t-- 発注実績と異なる物流センターコードです。",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50108'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- EOS(※)かつ取込レイアウト.伝票種別が2:返品の場合のみチェックを行う",
			"\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN7 = '2' AND lb_ExistsReturn) THEN",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50201') > 0 AND COALESCE(lrec_ReturnHeader.DELIVERYDECISIONFLAG, '0') = '1') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'50201',\t\t-- 返品伝票が計上済です。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50201'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN1'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tSELECT\tSKU_CD,",
			"\t\t\t\t\tSINGLEQTY",
			"\t\t\tINTO\tls_Sku_Cd_Check,",
			"\t\t\t\t\tln_SingleQty",
			"\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50205') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50205',\t\t-- 返品実績に存在しない行番号です。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50205'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ls_Sku_Cd_Check <> lrec_CSVUploadColumnData.COLUMN11) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50204') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50204',\t\t-- 発注実績と異なる商品コードです。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50204'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSIF (ln_SingleQty < CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)) THEN",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '60019') > 0) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'60019',\t\t-- 仕入数が発注数を超えています。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60019'),",
			"\t\t\t\t\t\t\t\t'(発注数：' || CAST(ln_SingleQty AS INT) || ')',",
			"\t\t\t\t\t\t\t\t'COLUMN12'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50206') > 0) THEN",
			"\t\t\t\t--該当する発注実績に存在する行番号と一致する取込レイアウト.行番号のデータが存在しない場合",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_DBLineNo",
			"\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO;",
			"",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_Count_LineNo",
			"\t\t\t\tFROM\tTMP_EA25_COLUMNDATA COLUMNDATA",
			"\t\t\t\tWHERE\tEXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNHEADER HEADER",
			"\t\t\t\t\t\t\t\t\tINNER JOIN UTR_RETURNDETAIL DETAIL",
			"\t\t\t\t\t\t\t\t\t\tON\tDETAIL.SYSDENPNO\t= HEADER.SYSDENPNO",
			"\t\t\t\t\t\t\tWHERE\tHEADER.STORE_CD\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\t\t\tAND\t\tHEADER.PARTNER_CD\t\t\t\t\t\t\t\t\t= COLUMNDATA.COLUMN3",
			"\t\t\t\t\t\t\tAND\t\tHEADER.DENPNO\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(COLUMNDATA.COLUMN10, COLUMNDATA.COLUMN8) AS NUMERIC)",
			"\t\t\t\t\t\t\tAND\t\t(\t(\tCOLUMNDATA.COLUMN15\tIS NOT NULL",
			"\t\t\t\t\t\t\t\t\t\tAND\tTO_DATE(COLUMNDATA.COLUMN15, 'YYYY/MM/DD')\t= HEADER.RETURNDATE",
			"\t\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\t\t\tOR\tHEADER.RETURNDATE\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\t\tAND\t\tHEADER.SYSDENPNO\t\t\t\t\t\t\t\t\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tDETAIL.LINENO\t\t\t\t\t\t\t\t\t\t= CAST(COLUMNDATA.COLUMN9 AS NUMERIC)",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_Count_DBLineNo > ln_Count_LineNo) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50206',\t\t-- 発注実績に存在する行番号が取込データに存在しません。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50206'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50207') > 0) THEN",
			"\t\t\t\tSELECT\tCOUNT(1)",
			"\t\t\t\tINTO\tln_CountDeliveryDecisionFlag",
			"\t\t\t\tFROM\tUTR_RETURNHEADER",
			"\t\t\t\tWHERE\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tAND\t\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(COALESCE(lrec_CSVUploadColumnData.COLUMN10, lrec_CSVUploadColumnData.COLUMN8) AS NUMERIC)",
			"\t\t\t\tAND\t\t(\t(lrec_CSVUploadColumnData.COLUMN15 IS NOT NULL",
			"\t\t\t\t\t\t\tAND TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD')\t= RETURNDATE",
			"\t\t\t\t\t\t\t)",
			"\t\t\t\t\t\tOR\tRETURNDATE\t\t\t\t\t\t\t\t\t\t\t\t\t\t>= TO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')",
			"\t\t\t\t\t\t)",
			"\t\t\t\tAND\t\tDELIVERYDECISIONFLAG\t\t\t\t\t\t\t\t\t\t\t\t= '0'",
			"\t\t\t\tGROUP BY DENPNO, STORE_CD, PARTNER_CD;",
			"",
			"\t\t\t\tIF (ln_CountDeliveryDecisionFlag > 1) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50207',\t\t-- 同一伝票番号・店舗・発注先の返品実績が複数存在します。発注日を指定するか、画面から伝票計上してください。",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50207'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN7'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 返品実績物流センター不整合チェック",
			"\t\tIF (INSTR(ls_ErrorCheck, '50208') > 0) THEN",
			"\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\tIF (ls_DenpKind = '12' AND lrec_ReturnHeader.LOGISTICSCENTER_CD <> lrec_CSVUploadColumnData.COLUMN5) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'50208',\t\t-- 返品実績と異なる物流センターコードです。",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50208'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- マスタ原価を使わないパターン",
			"\t\t-- ①委託仕入で発注先別原価率マスタ登録あり",
			"\t\tIF (ls_DenpKind IN ('10', '11') AND ls_DenpType = '16') THEN",
			"\t\t\tSELECT\tCOUNT(1)",
			"\t\t\tINTO\tln_CountCostRate",
			"\t\t\tFROM\tUMF_PARTNERCOSTRATE",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tSELECT\tCOSTRATE",
			"\t\t\tINTO\tln_CostRate",
			"\t\t\tFROM\tUMF_PARTNERCOSTRATE",
			"\t\t\tWHERE\tPARTNER_CD\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\tEND IF;",
			"",
			"\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t\t:= lrec_ReturnHeader.RETURNDATE;",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= lrec_ReturnHeader.DENPNO;",
			"",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\tSENDOPERATOR_CD",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE \t\t\t:= lrec_OrderHeader.ORDERDATE;",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= lrec_OrderHeader.DENPNO;",
			"",
			"\t\tELSE",
			"\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE",
			"\t\t\tFROM\tUMF_ITEM",
			"\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN10 AS NUMERIC);",
			"",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN15 IS NULL) THEN",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t:= NULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN15, 'YYYY/MM/DD');",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tls_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\tls_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(lrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\tlrec_MasterItem\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\tls_CLASS1_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS2_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS3_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS4_CD,",
			"\t\t\t\t\t\t\t\tls_CLASS5_CD",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t-- 明細コメント",
			"\t\tlrec_UtrPurchaseDenpDetail.NOTES\t\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN19;",
			"",
			"\t\tIF (ls_DenpKind = '10' AND lrec_CSVUploadColumnData.COLUMN13 IS NULL AND lrec_OrderHeader.DELIVERYPLANFLAG = '1') THEN",
			"\t\t\tSELECT\tDELIVERYPLANGNTNK",
			"\t\t\tINTO\tln_TmpPartnerGntnk",
			"\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\tAND\t\tLINENO\t\t= fx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9);",
			"",
			"\t\tELSIF (lrec_CSVUploadColumnData.COLUMN13 IS NULL AND ln_CountCostRate > 0) THEN",
			"\t\t\tln_TmpPartnerGntnk\t\t\t\t:= COALESCE(CAST(lrec_MasterItem.BITNK AS NUMERIC), 0) * COALESCE(ln_CostRate / 100, 0);",
			"",
			"\t\tELSE",
			"\t\t\tln_TmpPartnerGntnk\t\t\t\t:= CAST(NULLIF(lrec_CSVUploadColumnData.COLUMN13, '') AS NUMERIC);",
			"\t\tEND IF;",
			"",
			"\t\to_PurchaseGnkBik := PXS_UTILITY.f_GetPurchaseGnkBik (",
			"\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC),",
			"\t\t\t\tln_TmpPartnerGntnk,",
			"\t\t\t\tls_DenpKind,",
			"\t\t\t\tls_DenpType,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\tls_Sku_Cd,",
			"\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\t\tCASE WHEN lrec_CSVUploadColumnData.COLUMN17 = '1' THEN TRUE ELSE FALSE END,",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\tfx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9),",
			"\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\tCAST(NULLIF(lrec_CSVUploadColumnData.COLUMN18, '') AS NUMERIC)",
			"\t\t);",
			"",
			"\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNTNK;",
			"",
			"\t\tIF (lrec_CSVUploadColumnData.COLUMN14 IS NOT NULL AND lrec_CSVUploadColumnData.COLUMN14 <> '') THEN",
			"\t\t\tlrec_UtrPurchaseDenpDetail.BITNK\t\t\t\t\t:= COALESCE(CAST(NULLIF(lrec_CSVUploadColumnData.COLUMN14, '') AS NUMERIC), 0);",
			"",
			"\t\tELSE",
			"\t\t\tlrec_UtrPurchaseDenpDetail.BITNK\t\t\t\t\t:= o_PurchaseGnkBik.BITNK;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60018') > 0) THEN",
			"\t\t\tIF (lrec_CSVUploadColumnData.COLUMN18 IS NOT NULL AND o_PurchaseGnkBik.WHOLESALEGNKINPUTTYPE = '0') THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60018',\t\t\t\t-- 供給品以外もしくは部門打ち・NONPLU・原価率以外のため卸原単価は無効です。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '60018'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN18'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- センター店マスタ未登録",
			"\t\tIF (INSTR(ls_ErrorCheck, '60020') > 0) THEN",
			"\t\t\tIF (ls_EOSType <> '1' AND lrec_CSVUploadColumnData.COLUMN5 IS NULL) THEN",
			"\t\t\t\tSELECT\tLOGISTICSCENTER_CD",
			"\t\t\t\tINTO\tls_LogisticsCenterCheck",
			"\t\t\t\tFROM\tPXC_EA25_001.f_GetLogisticscenter_Cd(lrec_CSVUploadColumnData.COLUMN2, lrec_CSVUploadColumnData.COLUMN3, lrec_CSVUploadColumnData.COLUMN7, lrec_CSVUploadColumnData.COLUMN1) AS LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\tIF (NOT FOUND OR ls_LogisticsCenterCheck IS NULL) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t'60020',\t\t-- 物流センター取扱店舗マスタ未登録です。",
			"\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60020'),",
			"\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t'COLUMN5'",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (ln_LoopIndex = 1) THEN",
			"\t\t\t-- 税区分チェック",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60001') > 0) THEN",
			"\t\t\t\tOPEN lcur_EA25_TAXTYPE_GROUP FOR",
			"\t\t\t\t\tSELECT\tTMP.COLUMN1,",
			"\t\t\t\t\t\t\tTMP.COLUMN2,",
			"\t\t\t\t\t\t\tTMP.COLUMN3,",
			"\t\t\t\t\t\t\tCOALESCE(TMP.COLUMN5, '')\t\t\t\tAS COLUMN5,",
			"\t\t\t\t\t\t\tTMP.COLUMN8,",
			"\t\t\t\t\t\t\tMAX(ITEM.TAXTYPE) <> MIN(ITEM.TAXTYPE)\tAS TAXTYPE_FLAG",
			"\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA TMP",
			"\t\t\t\t\t\t\tINNER JOIN UMF_ITEM ITEM",
			"\t\t\t\t\t\t\t\tON\tITEM.SKU_CD\t\t= TMP.SKU_CD",
			"\t\t\t\t\t\t\t\tAND\tITEM.VALIDFLAG\t= '1'",
			"\t\t\t\t\tGROUP BY TMP.COLUMN1, TMP.COLUMN2, TMP.COLUMN3, TMP.COLUMN5, TMP.COLUMN8;",
			"\t\t\t\tLOOP",
			"\t\t\t\t\tFETCH lcur_EA25_TAXTYPE_GROUP INTO lrec_EA25_TAXTYPE_GROUP;",
			"\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\tIF (lrec_EA25_TAXTYPE_GROUP.TAXTYPE_FLAG = TRUE) THEN",
			"\t\t\t\t\t\t\tOPEN lcur_EA25_TAXTYPE_ITEM FOR",
			"\t\t\t\t\t\t\t\tSELECT\t*",
			"\t\t\t\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA",
			"\t\t\t\t\t\t\t\tWHERE\tCOLUMN1\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN1",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN2\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN2",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN3\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN3",
			"\t\t\t\t\t\t\t\tAND\t\tCOALESCE(COLUMN5, '')\t= lrec_EA25_TAXTYPE_GROUP.COLUMN5",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN8\t\t\t\t\t= lrec_EA25_TAXTYPE_GROUP.COLUMN8;",
			"\t\t\t\t\t\t\tLOOP",
			"\t\t\t\t\t\t\t\tFETCH lcur_EA25_TAXTYPE_ITEM INTO lrec_EA25_TAXTYPE_ITEM;",
			"\t\t\t\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXTYPE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXTYPE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo\t:= 1;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\t-- エラーテーブルへINSERT",
			"\t\t\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_EA25_TAXTYPE_ITEM.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'60001',",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60001'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"",
			"\t\t\t\t\t\t\tEND LOOP;",
			"\t\t\t\t\t\t\tCLOSE lcur_EA25_TAXTYPE_ITEM;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\tEND LOOP;",
			"\t\t\t\tCLOSE lcur_EA25_TAXTYPE_GROUP;",
			"\t\t\tEND IF;",
			"",
			"\t\t\t-- 税率チェック",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '60002') > 0) THEN",
			"\t\t\t\tOPEN lcur_EA25_TAXRATE_GROUP FOR",
			"\t\t\t\t\tSELECT\tTMP.COLUMN1,",
			"\t\t\t\t\t\t\tTMP.COLUMN2,",
			"\t\t\t\t\t\t\tTMP.COLUMN3,",
			"\t\t\t\t\t\t\tCOALESCE(TMP.COLUMN5, '')\tAS COLUMN5,",
			"\t\t\t\t\t\t\tTMP.COLUMN8,",
			"\t\t\t\t\t\t\tMAX(COALESCE(TAX.TAXRATE, 0)) <> MIN(COALESCE(TAX.TAXRATE, 0))\tAS TAXRATE_FLAG",
			"\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA TMP",
			"\t\t\t\t\t\t\tINNER JOIN UMF_ITEM ITEM",
			"\t\t\t\t\t\t\t\tON\tITEM.SKU_CD\t\t\t\t= TMP.SKU_CD",
			"\t\t\t\t\t\t\t\tAND\tITEM.VALIDFLAG\t\t\t= '1'",
			"\t\t\t\t\t\t\tLEFT OUTER JOIN UMF_TAX TAX",
			"\t\t\t\t\t\t\t\tON\tTAX.TAX_CD\t\t\t\t= ITEM.TAX_CD",
			"\t\t\t\t\t\t\t\tAND\tTAX.APPLYSTARTDATE\t\t<= CURRENT_DATE",
			"\t\t\t\t\t\t\t\tAND\tTAX.APPLYENDDATE\t\t>= CURRENT_DATE",
			"\t\t\t\t\t\t\t\tAND\tTAX.VALIDFLAG\t\t\t= '1'",
			"\t\t\t\t\tGROUP BY TMP.COLUMN1, TMP.COLUMN2, TMP.COLUMN3, TMP.COLUMN5, TMP.COLUMN8;",
			"\t\t\t\tLOOP",
			"\t\t\t\t\tFETCH lcur_EA25_TAXRATE_GROUP INTO lrec_EA25_TAXRATE_GROUP;",
			"\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\tIF (lrec_EA25_TAXRATE_GROUP.TAXRATE_FLAG = TRUE) THEN",
			"\t\t\t\t\t\t\tOPEN lcur_EA25_TAXRATE_ITEM FOR",
			"\t\t\t\t\t\t\t\tSELECT\t*",
			"\t\t\t\t\t\t\t\tFROM\tTMP_EA25_COLUMNDATA",
			"\t\t\t\t\t\t\t\tWHERE\tCOLUMN1\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN1",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN2\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN2",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN3\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN3",
			"\t\t\t\t\t\t\t\tAND\t\tCOALESCE(COLUMN5, '')\t= lrec_EA25_TAXRATE_GROUP.COLUMN5",
			"\t\t\t\t\t\t\t\tAND\t\tCOLUMN8\t\t\t\t\t= lrec_EA25_TAXRATE_GROUP.COLUMN8;",
			"\t\t\t\t\t\t\tLOOP",
			"\t\t\t\t\t\t\t\tFETCH lcur_EA25_TAXRATE_ITEM INTO lrec_EA25_TAXRATE_ITEM;",
			"\t\t\t\t\t\t\t\tEXIT WHEN NOT FOUND;",
			"",
			"\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\tFROM\tUWK_EXCELUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXRATE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tSELECT\tMAX(LINENO) + 1",
			"\t\t\t\t\t\t\t\t\t\tINTO\tln_LineNo",
			"\t\t\t\t\t\t\t\t\t\tFROM\tUWK_CSVUPDATEERRORDATA",
			"\t\t\t\t\t\t\t\t\t\tWHERE\tSERVER_CD\t\t= i_Server_Cd",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tIMPORTBATCHKEY\t= i_ImportBatchKey",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCSVLINENO\t\t= lrec_EA25_TAXRATE_ITEM.CSVLINENO",
			"\t\t\t\t\t\t\t\t\t\tAND\t\tCHECKTYPE\t\t= i_CheckType;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\tIF (NOT FOUND OR ln_LineNo IS NULL) THEN",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo\t:= 1;",
			"\t\t\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\t\t\t-- エラーテーブルへINSERT",
			"\t\t\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_EA25_TAXRATE_ITEM.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'60002',",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60002'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN11'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"",
			"\t\t\t\t\t\t\tEND LOOP;",
			"\t\t\t\t\t\t\tCLOSE lcur_EA25_TAXRATE_ITEM;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\tEND LOOP;",
			"\t\t\t\tCLOSE lcur_EA25_TAXRATE_GROUP;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tln_LoopIndex\t:= -1;",
			"\t\tEND IF;",
			"",
			"\t\t-- 更新前チェック",
			"\t\tIF (i_CheckType = '1') THEN",
			"\t\t\tIF (\tls_InspectDate\t\t<> lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\t\tOR\tls_Store_Cd\t\t\t<> lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\tOR\tls_Partner_Cd\t\t<> lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\tOR\tls_LogisticsCenter\t<> lrec_CSVUploadColumnData.COLUMN5",
			"\t\t\t\tOR\tls_DenpKindCsv\t\t<> lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\t\tOR\tln_Denpno\t\t\t<> CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\t\t) THEN",
			"\t\t\t\tls_InspectDate\t\t:= lrec_CSVUploadColumnData.COLUMN1;",
			"\t\t\t\tls_Store_Cd\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\tls_Partner_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\tls_LogisticsCenter\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\tln_Denpno\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\tls_HeaderNotes\t\t:= COALESCE(lrec_CSVUploadColumnData.COLUMN16, '');",
			"\t\t\t\tls_DenpKindCsv\t\t:= lrec_CSVUploadColumnData.COLUMN7;",
			"\t\t\t\tln_LineNoRe\t\t\t:= 1;",
			"",
			"\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN9_FLAG = '0') THEN",
			"\t\t\t\t\tls_LineNoCheck\t:= lrec_CSVUploadColumnData.COLUMN9;",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tls_LineNoCheck\t:= '';",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tIF (INSTR(ls_ErrorCheck, '50003') > 0) THEN",
			"\t\t\t\t\tIF (ls_HeaderNotes <> COALESCE(lrec_CSVUploadColumnData.COLUMN16, '')) THEN",
			"",
			"\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t'50003',\t\t--同じ伝票番号でヘッダコメントが異なっています。",
			"\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50003'),",
			"\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t'COLUMN16'",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN9_FLAG = '0') THEN",
			"\t\t\t\t\tIF (ls_LineNoCheck <> lrec_CSVUploadColumnData.COLUMN9) THEN",
			"\t\t\t\t\t\tls_LineNoCheck\t:= lrec_CSVUploadColumnData.COLUMN9;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tIF (INSTR(ls_ErrorCheck, '50006') > 0) THEN",
			"\t\t\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t\t\t'50006',\t-- 同伝票番号データの行番号が重複しています。",
			"\t\t\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '50006'),",
			"\t\t\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tln_LineNoRe\t\t\t\t:= ln_LineNoRe + 1;",
			"\t\t\tEND IF;",
			"",
			"\t\t\tIF (INSTR(ls_ErrorCheck, '50001') > 0) THEN",
			"\t\t\t\tIF (ln_LineNoRe > CAST(ls_Config_EA016 AS NUMERIC)) THEN",
			"\t\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t\t'50001',",
			"\t\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType (NULL, i_CSVFile_Cd, '50001'),",
			"\t\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tIF (INSTR(ls_ErrorCheck, '60021') > 0) THEN",
			"\t\t\tln_Count := 0;",
			"\t\t\tSELECT\tCOUNT(*)",
			"\t\t\tINTO\tln_Count",
			"\t\t\tFROM\tTMP_EA25_DENPHEADER_CHECK",
			"\t\t\tWHERE\tDENPNO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\tAND\t\tSTORE_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\tAND\t\tPARTNER_CD\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\tAND\t\tTO_CHAR(COALESCE(DENPINSPECTDATE, '2000-01-01'), 'YYYY/MM/DD')\t= lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\tAND\t\tCSVDENPKIND\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\tAND\t\tCSVLINENO\t\t\t\t\t\t\t\t\t\t\t\t\t\t= lrec_CSVUploadColumnData.CSVLINENO - 1;",
			"",
			"\t\t\t-- 同一伝票番号チェック",
			"\t\t\tIF (CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC) > 1 AND ln_Count = 0) THEN",
			"\t\t\t\tPERFORM PXS_FILEUPLOAD.p_AcceptCSVUpdateErrorData (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.SERVER_CD,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.IMPORTBATCHKEY,",
			"\t\t\t\t\t\t\ti_CheckType,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.CSVLINENO,",
			"\t\t\t\t\t\t\tln_LineNo,",
			"\t\t\t\t\t\t\t'60021',\t\t-- 同一伝票番号の明細データは連続して記載してください。",
			"\t\t\t\t\t\t\tPXS_FILEUPLOAD.p_GetCSVFileErrorType(NULL, i_CSVFile_Cd, '60021'),",
			"\t\t\t\t\t\t\t'',",
			"\t\t\t\t\t\t\t'COLUMN9'",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tln_LineNo\t\t:= ln_LineNo + 1;",
			"\t\t\t\tln_ErrorCount\t:= ln_ErrorCount + 1;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\t-- 取込ファイルの同一伝票番号チェック用にテンポラリテーブルにデータを登録する",
			"\t\tINSERT INTO TMP_EA25_DENPHEADER_CHECK (",
			"\t\t\tDENPNO,",
			"\t\t\tSTORE_CD,",
			"\t\t\tPARTNER_CD,",
			"\t\t\tDENPINSPECTDATE,",
			"\t\t\tCSVDENPKIND,",
			"\t\t\tCSVLINENO",
			"\t\t) VALUES (",
			"\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC),",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN3,",
			"\t\t\tTO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD'),",
			"\t\t\tlrec_CSVUploadColumnData.COLUMN7,",
			"\t\t\tlrec_CSVUploadColumnData.CSVLINENO",
			"\t\t);",
			"",
			"\t\t-- エラーがない場合、データを登録します",
			"\t\tIF (ln_ErrorCount = 0) THEN",
			"\t\t\tIF (i_CheckType = '2') THEN",
			"\t\t\t\tSELECT\tSNAME,\t\t\t\t\t-- 商品略式名称",
			"\t\t\t\t\t\tSTANDARDNAME\t\t\t-- 商品規格名称",
			"\t\t\t\tINTO\tls_SkuName,",
			"\t\t\t\t\t\tls_StandardName",
			"\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\tIF (\tls_InspectDate\t\t<> lrec_CSVUploadColumnData.COLUMN1",
			"\t\t\t\t\tOR\tls_Store_Cd\t\t\t<> lrec_CSVUploadColumnData.COLUMN2",
			"\t\t\t\t\tOR\tls_Partner_Cd\t\t<> lrec_CSVUploadColumnData.COLUMN3",
			"\t\t\t\t\tOR\tls_LogisticsCenter\t<> lrec_CSVUploadColumnData.COLUMN5",
			"\t\t\t\t\tOR\tls_DenpKindCsv\t\t<> lrec_CSVUploadColumnData.COLUMN7",
			"\t\t\t\t\tOR\tln_Denpno\t\t\t<> CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC)",
			"\t\t\t\t\t) THEN",
			"",
			"\t\t\t\t\tln_LineNoRe\t\t\t:= 1;",
			"",
			"\t\t\t\t\tIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"\t\t\t\t\t\tln_SysDenpno\t:= NEXTVAL('SEQ_MOVESYSDENPNO');",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tln_SysDenpno\t:= NEXTVAL('SEQ_PURCHASESYSDENPNO');",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tls_InspectDate\t\t:= lrec_CSVUploadColumnData.COLUMN1;",
			"\t\t\t\t\tls_Store_Cd\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\tls_Partner_Cd\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\tls_LogisticsCenter\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\t\tls_DenpKindCsv\t\t:= lrec_CSVUploadColumnData.COLUMN7;",
			"\t\t\t\t\tln_Denpno\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\tls_UserDenpkind\t\t:= PXC_EA25_001.f_GetUserDenpKind(ls_DenpKind);",
			"\t\t\t\t\tls_UserDenptype\t\t:= PXC_EA25_001.f_GetUserDenpType(ls_DenpType, ls_DenpKind);",
			"\t\t\t\t\tls_Company_Cd\t\t:= PXC_EA25_001.f_GetCompany_Cd(ls_Store_Cd);",
			"",
			"\t\t\t\tELSE",
			"\t\t\t\t\tln_LineNoRe\t\t\t\t:= ln_LineNoRe + 1;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tSELECT\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD",
			"\t\t\t\tINTO\tls_ItemAttributeType,",
			"\t\t\t\t\t\tls_ParentClass1_Cd,",
			"\t\t\t\t\t\tls_AttributeClass1_Cd,",
			"\t\t\t\t\t\tls_ParentClass2_Cd,",
			"\t\t\t\t\t\tls_AttributeClass2_Cd,",
			"\t\t\t\t\t\tls_ParentClass3_Cd,",
			"\t\t\t\t\t\tls_AttributeClass3_Cd,",
			"\t\t\t\t\t\tls_ParentClass4_Cd,",
			"\t\t\t\t\t\tls_AttributeClass4_Cd,",
			"\t\t\t\t\t\tls_ParentClass5_Cd,",
			"\t\t\t\t\t\tls_AttributeClass5_Cd",
			"\t\t\t\tFROM\tPXS_UTILITY.f_GetAttributeClassByItemStore (",
			"\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\tlrec_CSVUploadColumnData.COLUMN2,",
			"\t\t\t\t\t\t\tls_Sku_Cd,",
			"\t\t\t\t\t\t\tld_InspectDateCheck",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tIF (ln_LineNoRe = 1) THEN",
			"\t\t\t\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPINSPECTDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD\t\t:= ln_SystemMode_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPNO\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.COMPANY_CD\t\t\t:= ls_Company_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.STORE_CD\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARTNER_CD\t\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD\t\t:= ls_PayPartner_Cd;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND\t\t\t\t:= ls_DenpKind;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPTYPE\t\t\t:= ls_UserDenptype;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ITEMATTRIBUTETYPE\t:= COALESCE(ls_ItemAttributeType, '001');",
			"",
			"\t\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t\t:= COALESCE(lrec_ReturnHeader.FLOOR_CD, '');",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= lrec_ReturnHeader.RETURNDETAILTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t\t:= NULL;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_ReturnHeader.LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\t\t\t\tSELECT\tSUM(GNKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(BIKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(CASEQTY),",
			"\t\t\t\t\t\t\t\t\tSUM(SINGLEQTY)",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO = lrec_ReturnHeader.SYSDENPNO;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)-- 税率",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t\t:= COALESCE(lrec_OrderHeader.FLOOR_CD, '');",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERMETHOD\t\t\t:= lrec_OrderHeader.ORDERTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYNO\t\t\t:= lrec_OrderHeader.DELIVERYNO;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= lrec_OrderHeader.DISTRIBUTIONTYPE;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_OrderHeader.LOGISTICSCENTER_CD;",
			"",
			"\t\t\t\t\t\t\tIF (ls_DenpKind = '10') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_OrderHeader.REDECORATION_CD;",
			"",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_DeliveryStore.REDECORATION_CD;",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tSELECT\tSUM(GNKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(BIKKNGK),",
			"\t\t\t\t\t\t\t\t\tSUM(CASEQTY),",
			"\t\t\t\t\t\t\t\t\tSUM(SINGLEQTY)",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO = lrec_OrderHeader.SYSDENPNO;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= ls_LogisticsCenterCheck;",
			"",
			"\t\t\t\t\t\t\tIF (lrec_CSVUploadColumnData.COLUMN5 IS NOT NULL) THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD\t:= lrec_CSVUploadColumnData.COLUMN5;",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tIF (COALESCE(lrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD, '000000') = '000000') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= '1';",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE\t\t:= '3';",
			"\t\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE",
			"\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TAXRATE",
			"\t\t\t\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\t\t\t\tWHERE\tSKU_CD\t\t= ls_Sku_Cd",
			"\t\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD\t\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD\t:= lrec_DeliveryStore.REDECORATION_CD;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\t-- 代表分類",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.CLASSTYPE\t\t\t\t\t:= COALESCE(ls_Config_00201, '');",
			"",
			"\t\t\t\t\t\tCASE (lrec_UtrPurchaseDenpHeader.CLASSTYPE)",
			"\t\t\t\t\t\t\tWHEN ('1') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass1_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass1_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('2') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass2_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass2_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('3') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass3_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass3_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('4') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass4_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass4_Cd;",
			"",
			"\t\t\t\t\t\t\tWHEN ('5') THEN",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass5_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass5_Cd;",
			"",
			"\t\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARENTCLASS_CD\t\t:= ls_ParentClass2_Cd;",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD\t:= ls_AttributeClass2_Cd;",
			"\t\t\t\t\t\tEND CASE;",
			"",
			"\t\t\t\t\t\tSELECT\tCASE TRADETYPE",
			"\t\t\t\t\t\t\t\t\tWHEN '2' THEN '2'",
			"\t\t\t\t\t\t\t\t\tELSE '1'",
			"\t\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.TRADETYPE",
			"\t\t\t\t\t\tFROM\tUMF_PARTNER",
			"\t\t\t\t\t\tWHERE\tPARTNER_CD\t= lrec_UtrPurchaseDenpHeader.PARTNER_CD",
			"\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORGSYSDENPNO\t\t\t:= ln_SysDenpno;",
			"",
			"\t\t\t\t\t\tSELECT\tPAYDATE,",
			"\t\t\t\t\t\t\t\tDELIMITDATE",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpHeader.PAYSCHDATE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.APCLOSINGDATE",
			"\t\t\t\t\t\tFROM\tPXS_UTILITY.f_GetAccountPayDate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t'0'",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.NOTES\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN16;",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYDELAYDATE\t\t\t\t:= TO_DATE('2000/01/01', 'YYYY/MM/DD');",
			"",
			"\t\t\t\t\t\t-- 発注実績の検収日が取込実行の3か月前となってしまいます。仕入伝票に設定した検収日を設定してください。",
			"\t\t\t\t\t\tIF (ls_EOSType = '1' AND lrec_CSVUploadColumnData.COLUMN7 <> '2' AND CURRENT_DATE - '3 MONTH'::INTERVAL > lrec_OrderHeader.INSPECTDATE) THEN",
			"\t\t\t\t\t\t\tUPDATE\tTMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\tSET\t\tINSPECTDATE\t\t= lrec_UtrPurchaseDenpHeader.INSPECTDATE",
			"\t\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_OrderHeader.SYSDENPNO;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_DENPHEADER (",
			"\t\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\t\tNOTES",
			"\t\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.INSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPINSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.SYSTEMMODE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.COMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.STORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.FLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.REDECORATION_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYPARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.USERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.RBFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.PARENTCLASS_CD, ''),",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.ATTRIBUTECLASS_CD, ''),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.CLASSTYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.TAXTYPE, ''),",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.TAXRATE, 0),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORGSYSDENPNO,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.PAYSCHDATE, TO_DATE('2000/01/01', 'YYYY/MM/DD')),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.PAYDELAYDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TRADETYPE,",
			"\t\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpHeader.APCLOSINGDATE, TO_DATE('2000/01/01', 'YYYY/MM/DD')),",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.LOGISTICSCENTER_CD,",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALQTY",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALEXCLUDETAXGNK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALPARTNERGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALGNKDISCOUNTKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALPROFITGNKKNGK",
			"\t\t\t\t\t\t\t0,\t\t\t\t\t\t\t-- TOTALBIKKNGK",
			"\t\t\t\t\t\t\t'0',\t\t\t\t\t\t-- CONTRACTTYPE",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYDATE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERMETHOD,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DELIVERYNO,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERLOTQTY,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.ORDERQTY,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERGNKKNGK,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.TOTALORDERBIKKNGK,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISTRIBUTIONTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.DISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\t\tlrec_UtrPurchaseDenpHeader.NOTES",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPKIND\t\t:= ls_DenpKind;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPTYPE\t\t:= ls_DenpType;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPNO\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN8 AS NUMERIC);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPKIND\t:= PXC_EA25_001.f_GetUserDenpKind(lrec_UtrMoveDenpHeader.PURCHASEDENPKIND);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPTYPE\t:= PXC_EA25_001.f_GetUserDenpType(lrec_UtrMoveDenpHeader.PURCHASEDENPTYPE, lrec_UtrMoveDenpHeader.PURCHASEDENPKIND);",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tln_MoveDenpno\t\t\t\t\t\t\t\t:= NEXTVAL('SEQ_MOVEDENPNO');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPNO\t\t\t\t:= ln_MoveDenpno;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.EFFECTTYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVESTATUS\t\t\t:= 3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORGSYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVEINPUTTYPE\t\t:= 3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REGISTERDATE\t\t\t:= CURRENT_DATE;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPKIND\t\t\t\t:= '20';",
			"\t\t\t\t\t\tls_UserDenpkind\t\t\t\t\t\t\t\t:= PXC_EA25_001.f_GetUserDenpKind(lrec_UtrMoveDenpHeader.DENPKIND);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"",
			"\t\t\t\t\t\tIF (ls_DenpKind IN ('10', '11')) THEN",
			"\t\t\t\t\t\t\tls_DenpType\t\t\t\t\t\t\t\t:= '11';",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD\t\t:= ls_ChangeStore_Cd;",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind IN ('12', '13', '14', '15')) THEN",
			"\t\t\t\t\t\t\tls_DenpType\t\t\t\t\t\t\t\t:= '21';",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD\t\t:= ls_ChangeStore_Cd;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD\t\t:= lrec_DeliveryStore.FLOOR_CD;",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPTYPE\t\t\t:= PXC_EA25_001.f_GetUserDenpType(ls_DenpType, lrec_UtrMoveDenpHeader.DENPKIND);",
			"",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INCOMPANY_CD\t\t\t:= PXC_EA25_001.f_GetCompany_Cd(lrec_UtrMoveDenpHeader.INSTORE_CD);",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTCOMPANY_CD\t\t:= PXC_EA25_001.f_GetCompany_Cd(lrec_UtrMoveDenpHeader.OUTSTORE_CD);",
			"\t\t\t\t\t\tls_OutStore_Cd\t\t\t\t\t\t\t\t:= lrec_UtrMoveDenpHeader.OUTSTORE_CD;",
			"\t\t\t\t\t\tls_InStore_Cd\t\t\t\t\t\t\t\t:= lrec_UtrMoveDenpHeader.INSTORE_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INDATE\t\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INPLANDATE\t\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTOPERATOR_CD\t\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INOPERATOR_CD\t\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTOPERATOR_CD\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTOPERATOR_CD\t:= lrec_UserInfo.OPERATOR_CD;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSTATUS\t\t:= 1;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSTATUS\t\t:= 1;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSEQNO\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSEQNO\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTTYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.HTINSTOREDATAFLAG\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REVERSETYPE\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESSEQNO\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESQTY\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESNO\t\t\t\t:= 0;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PARTNER_CD\t\t\t:= lrec_CSVUploadColumnData.COLUMN3;",
			"\t\t\t\t\t\tlrec_UtrMoveDenpHeader.NOTES\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN16;",
			"\t\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= lrec_ReturnHeader.DENPNO;",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= lrec_OrderHeader.DENPNO;",
			"",
			"\t\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERHEADER",
			"\t\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\t\t'1',\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- DELIVERYDECISIONFLAG",
			"\t\t\t\t\t\t\t\t\tTO_DATE(ls_ImportCondition1, 'YYYY/MM/DD')\t\t\t\t\t-- INSPECTDATE",
			"\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN10 AS NUMERIC);",
			"\t\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_MOVEDENPHEADER (",
			"\t\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\t\tNOTES",
			"\t\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.SYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.DENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.USERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.RBFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.EFFECTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVESTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORGSYSDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.MOVEINPUTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REGISTERDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTCOMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTSTORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTFLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INCOMPANY_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSTORE_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INFLOOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INSPECTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INPLANDATE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.OUTACCEPTSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSTATUS,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.INACCEPTTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.HTINSTOREDATAFLAG,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.ORDERDENPNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.REVERSETYPE,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESSEQNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESQTY,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.BOXESNO,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.PARTNER_CD,",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpHeader.NOTES",
			"\t\t\t\t\t\t);",
			"\t\t\t\t\tEND IF;",
			"\t\t\t\tEND IF;",
			"",
			"\t\t\t\tIF (ls_PartnerType <> '11' AND ls_PartnerType <> '21') THEN",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSDENPNO\t\t\t:= ln_SysDenpno;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LINENO\t\t\t\t:= fx_ConvertStringToNumber(lrec_CSVUploadColumnData.COLUMN9);",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.INSPECTDATE\t\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPINSPECTDATE\t\t:= TO_DATE(lrec_CSVUploadColumnData.COLUMN1, 'YYYY/MM/DD');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSTEMMODE_CD\t\t:= ln_SystemMode_Cd;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPNO\t\t\t\t:= ln_Denpno;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STORE_CD\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN2;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND\t\t\t\t:= ls_DenpKind;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPKIND\t\t\t:= ls_UserDenpkind;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE\t\t\t\t:= ls_DenpType;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPTYPE\t\t\t:= ls_UserDenptype;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.RBFLAG\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKU_CD\t\t\t\t:= ls_Sku_Cd;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ITEMATTRIBUTETYPE\t:= COALESCE(ls_ItemAttributeType, '001');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS1_CD\t\t:= COALESCE(ls_ParentClass1_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS1_CD\t:= COALESCE(ls_AttributeClass1_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS2_CD\t\t:= COALESCE(ls_ParentClass2_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS2_CD\t:= COALESCE(ls_AttributeClass2_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS3_CD\t\t:= COALESCE(ls_ParentClass3_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS3_CD\t:= COALESCE(ls_AttributeClass3_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS4_CD\t\t:= COALESCE(ls_ParentClass4_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS4_CD\t:= COALESCE(ls_AttributeClass4_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS5_CD\t\t:= COALESCE(ls_ParentClass5_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS5_CD\t:= COALESCE(ls_AttributeClass5_Cd, '');",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC);",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\tSELECT\tCASEQTY,",
			"\t\t\t\t\t\t\t\tSINGLEQTY,",
			"\t\t\t\t\t\t\t\tLOTQTY,",
			"\t\t\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\t\t\tREQOPERATOR_CD,",
			"\t\t\t\t\t\t\t\tNULL",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.REASON_CD",
			"\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNDETAIL",
			"\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t-- LINENO",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tSELECT\tCASEQTY,",
			"\t\t\t\t\t\t\t\tSINGLEQTY,",
			"\t\t\t\t\t\t\t\tLOTQTY,",
			"\t\t\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\t\t\tREQOPERATOR_CD",
			"\t\t\t\t\t\tINTO\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD",
			"\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERDETAIL",
			"\t\t\t\t\t\t\tVALUES(",
			"\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t\t-- LINENO",
			"\t\t\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY\t\t\t\t\t\t\t-- DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE\t:= 1;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKUSNAME\t\t\t\t\t\t:= ls_SkuName;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STANDARDNAME\t\t\t\t\t:= ls_StandardName;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNKKNGK\t\t\t\t:= o_PurchaseGnkBik.PARTNERGNKKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BIKKNGK\t\t\t\t\t\t:= lrec_UtrPurchaseDenpDetail.BITNK * lrec_UtrPurchaseDenpDetail.QTY;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNTNK\t\t\t\t\t\t:= o_PurchaseGnkBik.GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKKNGK\t\t\t\t\t\t:= o_PurchaseGnkBik.GNKKNGK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKTAXKNGK\t\t\t\t\t:= o_PurchaseGnkBik.GNKTAXKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.EXCLUDETAXGNK\t\t\t\t:= o_PurchaseGnkBik.EXCLUDETAXGNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTTNK\t\t\t\t:= o_PurchaseGnkBik.GNKDISCOUNTTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTKNGK\t\t\t\t:= o_PurchaseGnkBik.GNKDISCOUNTKNGK;",
			"",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PROFITGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKTYPE\t\t\t\t:= o_PurchaseGnkBik.PROFITGNKTYPE;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.WHOLESALEGNTNK\t\t\t\t:= o_PurchaseGnkBik.WHOLESALEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKKNGK\t\t\t\t:= o_PurchaseGnkBik.PROFITGNKKNGK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET1GNTNK\t\t\t\t\t:= o_PurchaseGnkBik.NET1GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET2GNTNK\t\t\t\t\t:= o_PurchaseGnkBik.NET2GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MASTERORDERGNTNK\t\t\t\t:= o_PurchaseGnkBik.MASTERORDERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.POSGNTNK\t\t\t\t\t\t:= o_PurchaseGnkBik.POSGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANWHOLESALEGNTNK\t\t\t:= o_PurchaseGnkBik.PLANWHOLESALEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET1GNTNK\t\t\t\t:= o_PurchaseGnkBik.PLANNET1GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET2GNTNK\t\t\t\t:= o_PurchaseGnkBik.PLANNET2GNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANMASTERORDERGNTNK\t\t\t:= o_PurchaseGnkBik.PLANMASTERORDERGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANPOSGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.PLANPOSGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MAKERNETGNTNK\t\t\t\t:= o_PurchaseGnkBik.MAKERNETGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QUOTEGNTNK\t\t\t\t\t:= o_PurchaseGnkBik.QUOTEGNTNK;",
			"\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLAN_CD\t\t\t\t\t\t:= NULL;",
			"",
			"\t\t\t\t\tln_InsCount\t\t\t\t\t\t\t\t\t\t\t\t:= ln_InsCount + 1;",
			"",
			"\t\t\t\t\tINSERT INTO TMP_EA25_DENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO",
			"\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LINENO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.INSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPINSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SYSTEMMODE_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STORE_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPKIND,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.DENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.USERDENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.RBFLAG,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.TAXTYPE, ''),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.TAXRATE, 0),",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKU_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.SKUSNAME,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.STANDARDNAME,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.EXCLUDETAXGNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKTAXKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PARTNERGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.PROFITGNTNK, 0),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrPurchaseDenpDetail.PROFITGNKKNGK, 0),",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PROFITGNKTYPE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.WHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.POSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PLANPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.MAKERNETGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.QUOTEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BITNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.BIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.PRICECHGKNGK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERLOTQTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERQTY,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.LOTSIZE,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDERBITNK,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.ORDEROPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.NOTES,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.REASON_CD,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.IDNUMBER,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GROSSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrPurchaseDenpDetail.GROSSLINENO",
			"\t\t\t\t\t);",
			"",
			"\t\t\t\tELSIF (ls_PartnerType IN ('11', '21') AND ls_ChangeStore_Cd <> '00000') THEN",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SYSDENPNO\t\t:= ln_SysDenpno;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.LINENO\t\t\t:= ln_LineNoRe;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPNO\t\t\t:= ln_MoveDenpno;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND\t\t\t:= lrec_UtrMoveDenpHeader.DENPKIND;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPKIND\t\t:= lrec_UtrMoveDenpHeader.USERDENPKIND;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE\t\t\t:= lrec_UtrMoveDenpHeader.DENPTYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPTYPE\t\t:= lrec_UtrMoveDenpHeader.USERDENPTYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.RBFLAG\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.EFFECTTYPE\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.MOVESTATUS\t\t:= 3;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD\t\t:= ls_OutStore_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD\t\t:= ls_InStore_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INSPECTDATE\t\t:= ld_InspectDateCheck;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTDATE\t\t\t:= lrec_UtrMoveDenpHeader.OUTDATE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INDATE\t\t\t:= lrec_UtrMoveDenpHeader.INDATE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD\t\t\t:= ls_Sku_Cd;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.SKUSNAME\t\t\t:= ls_SkuName;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.STANDARDNAME\t\t:= ls_StandardName;",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '12') THEN",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t),\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\t\t\t\tBITNK",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tln_OrderBitnk",
			"\t\t\t\t\t\tFROM\tUTR_RETURNDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_ReturnHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_RETURNDETAIL",
			"\t\t\t\t\t\t\tVALUES (",
			"\t\t\t\t\t\t\t\tlrec_ReturnHeader.SYSDENPNO,\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t-- LINENO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t),\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\t\t\t\tBITNK",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\tln_OrderBitnk",
			"\t\t\t\t\t\tFROM\tUTR_ORDERDETAIL",
			"\t\t\t\t\t\tWHERE\tSYSDENPNO\t\t= lrec_OrderHeader.SYSDENPNO",
			"\t\t\t\t\t\tAND\t\tLINENO\t\t\t= CAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC);",
			"",
			"\t\t\t\t\t\tINSERT INTO TMP_EA25_ORDERDETAIL",
			"\t\t\t\t\t\t\tVALUES(",
			"\t\t\t\t\t\t\t\tlrec_OrderHeader.SYSDENPNO,\t\t\t\t\t\t\t\t-- SYSDENPNO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN9 AS NUMERIC),\t\t-- LINENO",
			"\t\t\t\t\t\t\t\tCAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC)\t\t--DELIVERYQTY",
			"\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tSELECT\tTAXTYPE,\t\t\t\t-- 税区分",
			"\t\t\t\t\t\t\t\tPXS_UTILITY.f_GetTaxRate (",
			"\t\t\t\t\t\t\t\t\tNULL,",
			"\t\t\t\t\t\t\t\t\tTAX_CD,",
			"\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE",
			"\t\t\t\t\t\t\t\t)\t\t\t\t\t\t-- 税率",
			"\t\t\t\t\t\tINTO\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE",
			"\t\t\t\t\t\tFROM\tUMF_ITEM",
			"\t\t\t\t\t\tWHERE\tSKU_CD\t\t= lrec_UtrMoveDenpDetail.SKU_CD",
			"\t\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\t-- 分類コードが取得できない場合の、ゼロ埋め桁数を取得",
			"\t\t\t\t\tSELECT\tSYSTEMMODE_CD",
			"\t\t\t\t\tINTO\tln_OutSystemMode_Cd",
			"\t\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\t\tWHERE\tSTORE_CD\t= lrec_UtrMoveDenpDetail.OUTSTORE_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tls_Out_CLASS1_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS2_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS3_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS4_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_Out_CLASS5_CD\t:= lpad(ls_Zero, Cast(PXS_UTILITY.f_GetSystemConfig(ln_OutSystemMode_Cd, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\t\t\t\tSELECT\tSYSTEMMODE_CD",
			"\t\t\t\t\tINTO\tln_InSystemMode_Cd",
			"\t\t\t\t\tFROM\tUMF_STORE",
			"\t\t\t\t\tWHERE\tSTORE_CD\t= lrec_UtrMoveDenpDetail.INSTORE_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tlrec_MasterItemOut\t\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS1_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS2_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS3_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS4_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\t\tls_Out_CLASS5_CD",
			"\t\t\t\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tls_In_CLASS1_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS1_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS2_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS2_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS3_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS3_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS4_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS4_LENGTH') AS INT), ls_Zero);",
			"\t\t\t\t\tls_In_CLASS5_CD\t\t:= lpad(ls_Zero, CAST(PXS_UTILITY.f_GetSystemConfig(ln_InSystemMode_Cd, 'ITEMCLASS5_LENGTH') AS INT), ls_Zero);",
			"",
			"\t\t\t\t\tlrec_MasterItemIn\t:= PXC_EA25_001.f_getMasterData(",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXTYPE,",
			"\t\t\t\t\t\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.TAXRATE,",
			"\t\t\t\t\t\t\t\t\t\t\t\tld_InspectDateCheck,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00102,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00103,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00104,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00108,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00112,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_Config_00200,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS1_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS2_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS3_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS4_CD,",
			"\t\t\t\t\t\t\t\t\t\t\t\tls_In_CLASS5_CD",
			"\t\t\t\t\t\t\t\t\t\t\t);",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTITEMATTRIBUTETYPE\t\t:= lrec_MasterItemOut.ITEMATTRIBUTETYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS1_CD\t\t:= lrec_MasterItemOut.PARENTCLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS1_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS2_CD\t\t:= lrec_MasterItemOut.PARENTCLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS2_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS3_CD\t\t:= lrec_MasterItemOut.PARENTCLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS3_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS4_CD\t\t:= lrec_MasterItemOut.PARENTCLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS4_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS5_CD\t\t:= lrec_MasterItemOut.PARENTCLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS5_CD\t:= lrec_MasterItemOut.ATTRIBUTECLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INITEMATTRIBUTETYPE\t\t:= lrec_MasterItemIn.ITEMATTRIBUTETYPE;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS1_CD\t\t:= lrec_MasterItemIn.PARENTCLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS1_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS1_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS2_CD\t\t:= lrec_MasterItemIn.PARENTCLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS2_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS2_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS3_CD\t\t:= lrec_MasterItemIn.PARENTCLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS3_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS3_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS4_CD\t\t:= lrec_MasterItemIn.PARENTCLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS4_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS4_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS5_CD\t\t:= lrec_MasterItemIn.PARENTCLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS5_CD\t\t:= lrec_MasterItemIn.ATTRIBUTECLASS5_CD;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTQTY\t\t\t\t\t:= CAST(lrec_CSVUploadColumnData.COLUMN12 AS NUMERIC);",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INQTY\t\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTQTY;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPOSGNTNK\t\t\t\t:= lrec_MasterItemOut.POSGNTNK_HIS;",
			"",
			"\t\t\t\t\tSELECT\tGNTNKSELECTTYPE",
			"\t\t\t\t\tINTO\tls_GntnktType",
			"\t\t\t\t\tFROM\tUMF_COMPANY",
			"\t\t\t\t\tWHERE\tCOMPANY_CD\t= lrec_UtrMoveDenpHeader.OUTCOMPANY_CD",
			"\t\t\t\t\tAND\t\tVALIDFLAG\t= '1';",
			"",
			"\t\t\t\t\tIF (NOT FOUND) THEN",
			"\t\t\t\t\t\tls_GntnktType := '1';",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNTNK := COALESCE(lrec_MasterItemOut.GNTNK, 0);",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNKKNGK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTGNTNK * lrec_UtrMoveDenpDetail.OUTQTY;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTWHOLESALEGNTNK\t\t:= lrec_MasterItemOut.WHOLESALEGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET1GNTNK\t\t\t\t:= lrec_MasterItemOut.NET1GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET2GNTNK\t\t\t\t:= lrec_MasterItemOut.NET2GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTMASTERORDERGNTNK\t\t:= lrec_MasterItemOut.ORDERGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INPOSGNTNK\t\t\t\t:= lrec_MasterItemIn.POSGNTNK_HIS;",
			"",
			"\t\t\t\t\tIF (lrec_UtrMoveDenpHeader.OUTCOMPANY_CD = lrec_UtrMoveDenpHeader.INCOMPANY_CD) THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTGNTNK;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK\t\t\t\t:= lrec_MasterItemIn.GNTNK;",
			"",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNKKNGK\t\t\t\t:= lrec_UtrMoveDenpDetail.INGNTNK * lrec_UtrMoveDenpDetail.INQTY;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INWHOLESALEGNTNK\t\t\t:= lrec_MasterItemIn.WHOLESALEGNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET1GNTNK\t\t\t\t:= lrec_MasterItemIn.NET1GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET2GNTNK\t\t\t\t:= lrec_MasterItemIn.NET2GNTNK1;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INMASTERORDERGNTNK\t\t:= lrec_MasterItemIn.ORDERGNTNK1;",
			"",
			"\t\t\t\t\tIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK\t\t\t\t\t:= lrec_MasterItemOut.BITNK;",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK\t\t\t\t\t:= ln_OrderBitnk;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBIKKNGK\t\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTBITNK * lrec_UtrMoveDenpDetail.OUTQTY;",
			"",
			"\t\t\t\t\t-- Config HA014 移動入庫売価金額の採用方法（1:入庫売価、2:出庫売価）",
			"\t\t\t\t\tIF (ls_Config_HA014 = '2') THEN",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= lrec_UtrMoveDenpDetail.OUTBITNK;",
			"",
			"\t\t\t\t\tELSE",
			"\t\t\t\t\t\tIF (ls_DenpKind = '10' OR ls_DenpKind = '14') THEN",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= ln_OrderBitnk;",
			"\t\t\t\t\t\tELSE",
			"\t\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK\t\t\t\t:= lrec_MasterItemIn.BITNK;",
			"\t\t\t\t\t\tEND IF;",
			"\t\t\t\t\tEND IF;",
			"",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INBIKKNGK\t\t\t\t:= ROUND(lrec_UtrMoveDenpDetail.INQTY * lrec_UtrMoveDenpDetail.INBITNK, 0);",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTLOSSQTY\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.INLOSSQTY\t\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.HTINSTOREDATAFLAG\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKFLAG\t\t\t:= 0;",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKDATE\t\t\t:= TO_DATE('2000/01/01', 'YYYY/MM/DD');",
			"\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES\t\t\t\t\t:= lrec_CSVUploadColumnData.COLUMN19;",
			"--\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES\t\t\t\t\t:= NULL;",
			"",
			"\t\t\t\t\tln_InsCount\t\t\t\t\t\t\t\t\t\t:= ln_InsCount + 1;",
			"",
			"\t\t\t\t\tINSERT INTO TMP_EA25_MOVEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG",
			"\t\t\t\t\t) VALUES (",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SYSDENPNO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.LINENO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPNO,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPKIND,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPKIND,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.DENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.USERDENPTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.RBFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.EFFECTTYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.MOVESTATUS,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTSTORE_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTORE_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSPECTDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKU_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.SKUSNAME,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.STANDARDNAME,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPARENTCLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBITNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTBIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.OUTLOSSQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INQTY,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INPOSGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INGNKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INWHOLESALEGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET1GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INNET2GNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INMASTERORDERGNTNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBITNK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INBIKKNGK,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INLOSSQTY,",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrMoveDenpDetail.TAXTYPE, ''),",
			"\t\t\t\t\t\tCOALESCE(lrec_UtrMoveDenpDetail.TAXRATE, 0),",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.NOTES,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.HTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.QTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tlrec_UtrMoveDenpDetail.INSTOREITEMCOPYFLAG",
			"\t\t\t\t\t);",
			"\t\t\t\tEND IF;",
			"\t\t\tEND IF;",
			"\t\tEND IF;",
			"",
			"\t\tln_ErrorCount\t:= 0;",
			"\tEND LOOP;",
			"",
			"\tIF (i_CheckType = '2') THEN",
			"",
			"\t\tUPDATE\tTMP_EA25_DENPHEADER T1",
			"\t\tSET\t\tTOTALQTY\t\t\t\t= TMP_DETAIL.SUM_QTY,",
			"\t\t\t\tTOTALGNKKNGK\t\t\t= TMP_DETAIL.SUM_GNKKNGK,",
			"\t\t\t\tTOTALPARTNERGNKKNGK\t\t= TMP_DETAIL.SUM_PARTNERGNKKNGK,",
			"\t\t\t\tTOTALGNKDISCOUNTKNGK\t= TMP_DETAIL.SUM_GNKDISCOUNTKNGK,",
			"\t\t\t\tTOTALPROFITGNKKNGK\t\t= TMP_DETAIL.SUM_PROFITGNKKNGK,",
			"\t\t\t\tTOTALBIKKNGK\t\t\t= TMP_DETAIL.SUM_BIKKNGK",
			"\t\tFROM\t(",
			"\t\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\t\tSUM(QTY)\t\t\t\tAS SUM_QTY,",
			"\t\t\t\t\t\t\tSUM(GNKKNGK)\t\t\tAS SUM_GNKKNGK,",
			"\t\t\t\t\t\t\tSUM(PARTNERGNKKNGK)\t\tAS SUM_PARTNERGNKKNGK,",
			"\t\t\t\t\t\t\tSUM(GNKDISCOUNTKNGK)\tAS SUM_GNKDISCOUNTKNGK,",
			"\t\t\t\t\t\t\tSUM(PROFITGNKKNGK)\t\tAS SUM_PROFITGNKKNGK,",
			"\t\t\t\t\t\t\tSUM(BIKKNGK)\t\t\tAS SUM_BIKKNGK",
			"\t\t\t\t\tFROM\tTMP_EA25_DENPDETAIL",
			"\t\t\t\t\tGROUP BY SYSDENPNO",
			"\t\t\t\t) TMP_DETAIL",
			"\t\tWHERE\tT1.SYSDENPNO\t= TMP_DETAIL.SYSDENPNO;",
			"",
			"\t\t-- 明細の原価消費税額合計を算出",
			"\t\tINSERT INTO TMP_EA25_HEADERTAXCAL",
			"\t\t\tSELECT\tTMP.SYSDENPNO,",
			"\t\t\t\t\tCASE TMP.TAXTYPE",
			"\t\t\t\t\t\tWHEN '2' THEN --内税",
			"\t\t\t\t\t\t\tCASE ls_EA021_IncludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tWHEN '1' THEN -- 外税",
			"\t\t\t\t\t\t\tCASE ls_EA020_ExcludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tELSE 0 -- 非課税",
			"\t\t\t\t\tEND, -- TOTALGNKTAXKNGK",
			"\t\t\t\t\tCASE TMP.TAXTYPE",
			"\t\t\t\t\t\tWHEN '2' THEN --内税",
			"\t\t\t\t\t\t\tCASE ls_EA021_IncludeTaxCalcType",
			"\t\t\t\t\t\t\t\tWHEN '2' THEN TMP.TOTALGNKKNGK - TMP.TOTALGNKTAXKNGK",
			"\t\t\t\t\t\t\t\tELSE TMP.TOTALGNKKNGK - PXC_EA25_001.f_GetTaxKngk(TMP.TOTALGNKKNGK, TMP.TAXTYPE, TMP.TAXRATE, COALESCE(NULLIF(T4.TAXROUNDTYPE, ''), '2'))",
			"\t\t\t\t\t\t\tEND",
			"\t\t\t\t\t\tELSE TMP.TOTALGNKKNGK -- 外税, 非課税",
			"\t\t\t\t\tEND -- TOTALEXCLUDETAXGNK",
			"\t\t\tFROM\t(",
			"\t\t\t\t\t\tSELECT\tT1.SYSDENPNO,",
			"\t\t\t\t\t\t\t\tT1.PARTNER_CD,",
			"\t\t\t\t\t\t\t\tT2.TAXTYPE,",
			"\t\t\t\t\t\t\t\tT2.TAXRATE,",
			"\t\t\t\t\t\t\t\tSUM(T2.GNKKNGK)\t\tAS TOTALGNKKNGK,",
			"\t\t\t\t\t\t\t\tSUM(T2.GNKTAXKNGK)\tAS TOTALGNKTAXKNGK",
			"\t\t\t\t\t\tFROM\tTMP_EA25_DENPHEADER T1",
			"\t\t\t\t\t\t\t\tINNER JOIN TMP_EA25_DENPDETAIL T2",
			"\t\t\t\t\t\t\t\t\tON\tT1.SYSDENPNO = T2.SYSDENPNO",
			"\t\t\t\t\t\tGROUP BY T1.SYSDENPNO, T1.PARTNER_CD, T2.TAXTYPE, T2.TAXRATE",
			"\t\t\t\t\t) TMP",
			"\t\t\t\t\tINNER JOIN UMF_PARTNER T3",
			"\t\t\t\t\t\tON\tT3.PARTNER_CD\t\t= TMP.PARTNER_CD",
			"\t\t\t\t\t\tAND\tT3.VALIDFLAG\t\t= '1'",
			"\t\t\t\t\tINNER JOIN UMF_PAYPARTNER T4",
			"\t\t\t\t\t\tON\tT4.PAYPARTNER_CD\t= T3.PAYPARTNER_CD",
			"\t\t\t\t\t\tAND\tT4.VALIDFLAG\t\t= '1';",
			"",
			"\t\t-- 明細の原価消費税額合計をヘッダにセット",
			"\t\tUPDATE\tTMP_EA25_DENPHEADER T1",
			"\t\tSET\t\tTOTALEXCLUDETAXGNK\t= TMP_TAXCAL.SUM_TOTALEXCLUDETAXGNK,",
			"\t\t\t\tTOTALGNKTAXKNGK\t\t= TMP_TAXCAL.SUM_TOTALGNKTAXKNGK",
			"\t\tFROM\t(",
			"\t\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\t\tSUM(TOTALEXCLUDETAXGNK)\tAS SUM_TOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\t\tSUM(TOTALGNKTAXKNGK)\tAS SUM_TOTALGNKTAXKNGK",
			"\t\t\t\t\tFROM\tTMP_EA25_HEADERTAXCAL",
			"\t\t\t\t\tGROUP BY SYSDENPNO",
			"\t\t\t\t) TMP_TAXCAL",
			"\t\tWHERE\tT1.SYSDENPNO = TMP_TAXCAL.SYSDENPNO;",
			"\tEND IF;",
			"",
			"\t-- 新規登録・更新登録件数更新",
			"\tPERFORM PXS_FILEUPLOAD.p_SetCSVUploadObserverUpdQty (",
			"\t\t\t\ti_User_Cd,",
			"\t\t\t\ti_Server_Cd,",
			"\t\t\t\ti_ImportBatchKey,",
			"\t\t\t\ti_CheckType,",
			"\t\t\t\tln_InsCount,",
			"\t\t\t\tln_UpdCount",
			"\t\t\t);",
			"END;",
			"$$ LANGUAGE 'plpgsql';",
			"",
			"RESET CLIENT_ENCODING;",
			
			"\n"
		],
		"description": "CSV Import Check Pattern"
	},






	"CSV Entry Pattern": {
		"prefix": "csventrypattern",
		"body": [
			"\n",
			"SET CLIENT_ENCODING TO 'SJIS';",
			"",
			"/*",
			"\t[サブ機能  ] EA.仕入",
			"\t[機能ＩＤ  ] EA25",
			"\t[機能名称  ] 仕入伝票取込",
			"\t[リビジョン] 1",
			"\t[関数名    ] p_CSVEntry",
			"\t[作 成 日  ] 2022/08/30",
			"\t[作 成 者  ] UNICCS/d-vu",
			"\t[更新履歴  ] 2023/06/12 UNICCS/d-vu",
			"\t\t\t\t\tインボイス対応：返品の登録・更新時、基取引年月日を登録・更新するように変更",
			"\t\t\t\t\t返品の税率は基取引年月日時点の税率を取得するように変更",
			"\t\t\t\t\t基取引年月日は、PXS_UTILITY.f_GetPurchaseGnkBik内で算出した値をPURCHASEINFO1として戻される",
			"\t\t\t\t\t※基取引年月日の算出式：伝票日付－発注先マスタ.返品税変更経過月数",
			"*/",
			"",
			"CREATE OR REPLACE FUNCTION PXC_EA25_001.p_CSVEntry (",
			"\ti_Server_Cd\t\t\tIN\tUWK_CSVUPLOADCOLUMNDATA.SERVER_CD%TYPE,",
			"\ti_ImportBatchKey\tIN\tUWK_CSVUPLOADCOLUMNDATA.IMPORTBATCHKEY%TYPE,",
			"\ti_CSVUploadType\t\tIN\tUTR_CSVUPLOADOBSERVER.CSVUPLOADTYPE%TYPE,",
			"\ti_StartCSVLineNo\tIN\tUWK_CSVUPLOADCOLUMNDATA.CSVLINENO%TYPE,",
			"\ti_CommitRowCount\tIN\tNUMERIC,",
			"\ti_SyoriFlag\t\t\tIN\tVARCHAR\t\t-- 1:登録処理 2:削除処理",
			") RETURNS VOID AS $$",
			"/*",
			"$START",
			"$FUNCTION\\1",
			"\t仕入伝票取込の更新処理",
			"$PAR\\1",
			"\tサーバーコード",
			"$PAR\\2",
			"\tＣＳＶ取込バッチキー",
			"$PAR\\3",
			"\tＣＳＶ取込タイプ（1：追加／上書き、2：総入替、3：削除）",
			"$PAR\\4",
			"\t開始ＣＳＶ取込行番号",
			"$PAR\\5",
			"\tコミット行数",
			"$PAR\\6",
			"\t処理フラグ（1:登録処理、2:削除処理）",
			"$RETURN\\1",
			"\tVOID",
			"$END",
			"*/",
			"DECLARE",
			"\t-- レコードとカーソル定義",
			"\tlrec_UserInfo\t\tRECORD;",
			"BEGIN",
			"\t-- コミット件数未対応のため、2回目以降の実行では何もしない。",
			"\tIF (i_StartCSVLineNo <> 1) THEN",
			"\t\tRETURN;",
			"\tEND IF;",
			"",
			"\tlrec_UserInfo\t\t:= PXS_USER.p_GetUserInfo();",
			"",
			"\tIF (i_SyoriFlag = '1') THEN",
			"\t\t-- ■登録処理",
			"\t\tCASE (i_CSVUploadType)",
			"\t\t\t-- 追加/上書き",
			"\t\t\tWHEN ('1') THEN",
			"\t\t\t\t-- 仕入",
			"\t\t\t\t-- ヘッダ",
			"\t\t\t\t-- 更新用テンポラリテーブル（基本）",
			"\t\t\t\tINSERT INTO UTR_PURCHASEDENPHEADER (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tCOMPANY_CD,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tFLOOR_CD,",
			"\t\t\t\t\t\tREDECORATION_CD,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tPAYPARTNER_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS_CD,",
			"\t\t\t\t\t\tCLASSTYPE,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tPAYSCHDATE,",
			"\t\t\t\t\t\tPAYDELAYDATE,",
			"\t\t\t\t\t\tTRADETYPE,",
			"\t\t\t\t\t\tAPCLOSINGDATE,",
			"\t\t\t\t\t\tLOGISTICSCENTER_CD,",
			"\t\t\t\t\t\tTOTALQTY,",
			"\t\t\t\t\t\tTOTALGNKKNGK,",
			"\t\t\t\t\t\tTOTALEXCLUDETAXGNK,",
			"\t\t\t\t\t\tTOTALGNKTAXKNGK,",
			"\t\t\t\t\t\tTOTALPARTNERGNKKNGK,",
			"\t\t\t\t\t\tTOTALGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tTOTALPROFITGNKKNGK,",
			"\t\t\t\t\t\tTOTALBIKKNGK,",
			"\t\t\t\t\t\tCONTRACTTYPE,",
			"\t\t\t\t\t\tORDERDATE,",
			"\t\t\t\t\t\tDELIVERYDATE,",
			"\t\t\t\t\t\tORDERMETHOD,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tDELIVERYNO,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tTOTALORDERGNKKNGK,",
			"\t\t\t\t\t\tTOTALORDERBIKKNGK,",
			"\t\t\t\t\t\tDISTRIBUTIONTYPE,",
			"\t\t\t\t\t\tDISCOUNTALLOCDATETIME,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_DENPHEADER HEADER",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_PURCHASEDENPHEADER TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_PURCHASEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO,",
			"\t\t\t\t\t\tPURCHASEINFO1,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tDENPINSPECTDATE,",
			"\t\t\t\t\t\tSYSTEMMODE_CD,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tSTORE_CD,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tPARENTCLASS1_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tPARENTCLASS2_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tPARENTCLASS3_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tPARENTCLASS4_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tPARENTCLASS5_CD,",
			"\t\t\t\t\t\tATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tQTY,",
			"\t\t\t\t\t\tGNTNK,",
			"\t\t\t\t\t\tGNKKNGK,",
			"\t\t\t\t\t\tEXCLUDETAXGNK,",
			"\t\t\t\t\t\tGNKTAXKNGK,",
			"\t\t\t\t\t\tPARTNERGNTNK,",
			"\t\t\t\t\t\tPARTNERGNKKNGK,",
			"\t\t\t\t\t\tGNKDISCOUNTTNK,",
			"\t\t\t\t\t\tGNKDISCOUNTKNGK,",
			"\t\t\t\t\t\tPROFITGNTNK,",
			"\t\t\t\t\t\tPROFITGNKKNGK,",
			"\t\t\t\t\t\tPROFITGNKTYPE,",
			"\t\t\t\t\t\tNET1GNTNK,",
			"\t\t\t\t\t\tNET2GNTNK,",
			"\t\t\t\t\t\tWHOLESALEGNTNK,",
			"\t\t\t\t\t\tMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPOSGNTNK,",
			"\t\t\t\t\t\tPLANWHOLESALEGNTNK,",
			"\t\t\t\t\t\tPLANNET1GNTNK,",
			"\t\t\t\t\t\tPLANNET2GNTNK,",
			"\t\t\t\t\t\tPLANMASTERORDERGNTNK,",
			"\t\t\t\t\t\tPLANPOSGNTNK,",
			"\t\t\t\t\t\tMAKERNETGNTNK,",
			"\t\t\t\t\t\tQUOTEGNTNK,",
			"\t\t\t\t\t\tBITNK,",
			"\t\t\t\t\t\tBIKKNGK,",
			"\t\t\t\t\t\tPRICECHGKNGK,",
			"\t\t\t\t\t\tORDERLOTQTY,",
			"\t\t\t\t\t\tORDERQTY,",
			"\t\t\t\t\t\tLOTSIZE,",
			"\t\t\t\t\t\tORDERGNTNK,",
			"\t\t\t\t\t\tORDERBITNK,",
			"\t\t\t\t\t\tORDEROPERATOR_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tREASON_CD,",
			"\t\t\t\t\t\tIDNUMBER,",
			"\t\t\t\t\t\tGROSSDENPNO,",
			"\t\t\t\t\t\tGROSSLINENO,",
			"\t\t\t\t\t\tPURCHASEINFO1,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_DENPDETAIL DETAIL",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_PURCHASEDENPDETAIL TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_MOVEDENPHEADER (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tORGSYSDENPNO,",
			"\t\t\t\t\t\tMOVEINPUTTYPE,",
			"\t\t\t\t\t\tREGISTERDATE,",
			"\t\t\t\t\t\tOUTCOMPANY_CD,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tOUTFLOOR_CD,",
			"\t\t\t\t\t\tINCOMPANY_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINFLOOR_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINPLANDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tOUTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tOUTACCEPTSTATUS,",
			"\t\t\t\t\t\tOUTACCEPTSEQNO,",
			"\t\t\t\t\t\tINOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTOPERATOR_CD,",
			"\t\t\t\t\t\tINACCEPTSTATUS,",
			"\t\t\t\t\t\tINACCEPTSEQNO,",
			"\t\t\t\t\t\tINACCEPTTYPE,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tPURCHASEDENPNO,",
			"\t\t\t\t\t\tPURCHASEDENPKIND,",
			"\t\t\t\t\t\tPURCHASEUSERDENPKIND,",
			"\t\t\t\t\t\tPURCHASEDENPTYPE,",
			"\t\t\t\t\t\tPURCHASEUSERDENPTYPE,",
			"\t\t\t\t\t\tORDERDENPNO,",
			"\t\t\t\t\t\tREVERSETYPE,",
			"\t\t\t\t\t\tBOXESSEQNO,",
			"\t\t\t\t\t\tBOXESQTY,",
			"\t\t\t\t\t\tBOXESNO,",
			"\t\t\t\t\t\tPARTNER_CD,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_MOVEDENPHEADER HEADER",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_MOVEDENPHEADER TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tINSERT INTO UTR_MOVEDENPDETAIL (",
			"\t\t\t\t\t\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG,",
			"\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\tADDOPERATOR_CD,",
			"\t\t\t\t\t\tADDDATETIME,",
			"\t\t\t\t\t\tADDPROC_CD,",
			"\t\t\t\t\t\tUPDOPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME,",
			"\t\t\t\t\t\tUPDPROC_CD",
			"\t\t\t\t)",
			"\t\t\t\tSELECT\tSYSDENPNO,",
			"\t\t\t\t\t\tLINENO,",
			"\t\t\t\t\t\tDENPNO,",
			"\t\t\t\t\t\tDENPKIND,",
			"\t\t\t\t\t\tUSERDENPKIND,",
			"\t\t\t\t\t\tDENPTYPE,",
			"\t\t\t\t\t\tUSERDENPTYPE,",
			"\t\t\t\t\t\tRBFLAG,",
			"\t\t\t\t\t\tEFFECTTYPE,",
			"\t\t\t\t\t\tMOVESTATUS,",
			"\t\t\t\t\t\tOUTSTORE_CD,",
			"\t\t\t\t\t\tINSTORE_CD,",
			"\t\t\t\t\t\tINSPECTDATE,",
			"\t\t\t\t\t\tOUTDATE,",
			"\t\t\t\t\t\tINDATE,",
			"\t\t\t\t\t\tSKU_CD,",
			"\t\t\t\t\t\tSKUSNAME,",
			"\t\t\t\t\t\tSTANDARDNAME,",
			"\t\t\t\t\t\tOUTITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tOUTPARENTCLASS1_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS2_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS3_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS4_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tOUTPARENTCLASS5_CD,",
			"\t\t\t\t\t\tOUTATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tINITEMATTRIBUTETYPE,",
			"\t\t\t\t\t\tINPARENTCLASS1_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS1_CD,",
			"\t\t\t\t\t\tINPARENTCLASS2_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS2_CD,",
			"\t\t\t\t\t\tINPARENTCLASS3_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS3_CD,",
			"\t\t\t\t\t\tINPARENTCLASS4_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS4_CD,",
			"\t\t\t\t\t\tINPARENTCLASS5_CD,",
			"\t\t\t\t\t\tINATTRIBUTECLASS5_CD,",
			"\t\t\t\t\t\tOUTQTY,",
			"\t\t\t\t\t\tOUTPOSGNTNK,",
			"\t\t\t\t\t\tOUTGNTNK,",
			"\t\t\t\t\t\tOUTGNKKNGK,",
			"\t\t\t\t\t\tOUTWHOLESALEGNTNK,",
			"\t\t\t\t\t\tOUTNET1GNTNK,",
			"\t\t\t\t\t\tOUTNET2GNTNK,",
			"\t\t\t\t\t\tOUTMASTERORDERGNTNK,",
			"\t\t\t\t\t\tOUTBITNK,",
			"\t\t\t\t\t\tOUTBIKKNGK,",
			"\t\t\t\t\t\tOUTLOSSQTY,",
			"\t\t\t\t\t\tINQTY,",
			"\t\t\t\t\t\tINPOSGNTNK,",
			"\t\t\t\t\t\tINGNTNK,",
			"\t\t\t\t\t\tINGNKKNGK,",
			"\t\t\t\t\t\tINWHOLESALEGNTNK,",
			"\t\t\t\t\t\tINNET1GNTNK,",
			"\t\t\t\t\t\tINNET2GNTNK,",
			"\t\t\t\t\t\tINMASTERORDERGNTNK,",
			"\t\t\t\t\t\tINBITNK,",
			"\t\t\t\t\t\tINBIKKNGK,",
			"\t\t\t\t\t\tINLOSSQTY,",
			"\t\t\t\t\t\tTAXTYPE,",
			"\t\t\t\t\t\tTAXRATE,",
			"\t\t\t\t\t\tNOTES,",
			"\t\t\t\t\t\tHTINSTOREDATAFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKFLAG,",
			"\t\t\t\t\t\tQTYDIFFCHECKDATE,",
			"\t\t\t\t\t\tINSTOREITEMCOPYFLAG,",
			"\t\t\t\t\t\tRSVCHAR1,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tlrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tlrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_MOVEDENPDETAIL DETAIL",
			"\t\t\t\tWHERE\tNOT EXISTS (",
			"\t\t\t\t\t\t\tSELECT\t1",
			"\t\t\t\t\t\t\tFROM\tUTR_MOVEDENPDETAIL TMP",
			"\t\t\t\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO",
			"\t\t\t\t\t\t);",
			"",
			"\t\t\t\tUPDATE\tUTR_ORDERHEADER HEADER",
			"\t\t\t\tSET\t\tDELIVERYDECISIONFLAG\t= TMP.DELIVERYDECISIONFLAG,",
			"\t\t\t\t\t\tINSPECTDATE\t\t\t\t= TMP.INSPECTDATE,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_ORDERHEADER TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO = HEADER.SYSDENPNO;",
			"",
			"\t\t\t\tUPDATE\tUTR_RETURNHEADER HEADER",
			"\t\t\t\tSET\t\tDELIVERYDECISIONFLAG\t= TMP.DELIVERYDECISIONFLAG,",
			"\t\t\t\t\t\tINSPECTDATE\t\t\t\t= TMP.INSPECTDATE,",
			"\t\t\t\t\t\tRSVDATE1\t\t\t\t= TMP.RSVDATE1,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_RETURNHEADER TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= HEADER.SYSDENPNO;",
			"",
			"\t\t\t\tUPDATE\tUTR_ORDERDETAIL DETAIL",
			"\t\t\t\tSET\t\tDELIVERYQTY\t\t\t\t= TMP.DELIVERYQTY,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_ORDERDETAIL TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO;",
			"",
			"\t\t\t\tUPDATE\tUTR_RETURNDETAIL DETAIL",
			"\t\t\t\tSET\t\tDELIVERYQTY\t\t\t\t= TMP.DELIVERYQTY,",
			"\t\t\t\t\t\tUPDOPERATOR_CD\t\t\t= lrec_UserInfo.OPERATOR_CD,",
			"\t\t\t\t\t\tUPDDATETIME\t\t\t\t= lrec_UserInfo.EXECTIME,",
			"\t\t\t\t\t\tUPDPROC_CD\t\t\t\t= lrec_UserInfo.PROC_CD",
			"\t\t\t\tFROM\tTMP_EA25_RETURNDETAIL TMP",
			"\t\t\t\tWHERE\tTMP.SYSDENPNO\t= DETAIL.SYSDENPNO",
			"\t\t\t\tAND\t\tTMP.LINENO\t\t= DETAIL.LINENO;",
			"",
			"\t\t\t-- 総入替",
			"\t\t\tWHEN ('2') THEN",
			"\t\t\t\t-- 何もしない。",
			"\t\t\t\tNULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tNULL;",
			"\t\tEND CASE;",
			"",
			"\tELSIF (i_SyoriFlag = '2') THEN",
			"\t\t-- ■削除処理",
			"\t\tCASE (i_CSVUploadType)",
			"\t\t\t-- 総入替用の削除",
			"\t\t\tWHEN ('2') THEN",
			"\t\t\t\t-- 何もしない。",
			"\t\t\t\tNULL;",
			"",
			"\t\t\t-- 削除",
			"\t\t\tWHEN ('3') THEN",
			"\t\t\t\t-- 何もしない。",
			"\t\t\t\tNULL;",
			"",
			"\t\t\tELSE",
			"\t\t\t\tNULL;",
			"\t\tEND CASE;",
			"\tEND IF;",
			"",
			"END;",
			"$$ LANGUAGE 'plpgsql';",
			"",
			"RESET CLIENT_ENCODING;",
			"\n"
		],
		"description": "CSV Entry Pattern"
	},






	"Defined create table pattern": {
		"prefix": "createtablepattern",
		"body": [
			"\n",
			"CREATE TABLE utr_returnheader (",
			"    sysdenpno\t\t\t\t\t\tnumeric(14,0) NOT NULL,",
			"    denpno\t\t\t\t\t\t\tnumeric(9,0) NOT NULL,",
			"    denpkind\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenpkind\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    denptype\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenptype\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    store_cd\t\t\t\t\t\tcharacter varying(10) NOT NULL,",
			"    floor_cd\t\t\t\t\t\tcharacter varying(5),",
			"    returndate\t\t\t\t\t\tdate NOT NULL,",
			"    deliverydate\t\t\t\t\tdate NOT NULL,",
			"    partner_cd\t\t\t\t\t\tcharacter varying(6) NOT NULL,",
			"    itemattributetype\t\t\t\tcharacter varying(3) NOT NULL,",
			"    classtype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    parentclass_cd\t\t\t\t\tcharacter varying(5) NOT NULL,",
			"    attributeclass_cd\t\t\t\tcharacter varying(5) NOT NULL,",
			"    taxtype\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    tax_cd\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscentertype\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscenter_cd\t\t\t\tcharacter varying(6),",
			"    partnerdistributionmaster_cd\tcharacter varying(6),",
			"    partnerlayouttype\t\t\t\tcharacter varying(2),",
			"    directtransfer\t\t\t\t\tcharacter varying(6),",
			"    temporarytransfer\t\t\t\tcharacter varying(6),",
			"    logisticsdistributionmaster_cd\tcharacter varying(6),",
			"    logisticslayouttype\t\t\t\tcharacter varying(2),",
			"    businessname\t\t\t\t\tcharacter varying(2),",
			"    eosmaketype\t\t\t\t\t\tcharacter varying(2),",
			"    instore_cd\t\t\t\t\t\tcharacter varying(10),",
			"    inclass_cd\t\t\t\t\t\tcharacter varying(5),",
			"    grosstype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributionstatus\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributiondatetime\t\t\ttimestamp(6) without time zone,",
			"    deliveryplanflag\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    deliveryplandate\t\t\t\tdate,",
			"    deliverydecisionflag\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    inspectdate\t\t\t\t\t\tdate,",
			"    printdatetime\t\t\t\t\ttimestamp(6) without time zone,",
			"    partneroperator\t\t\t\t\tcharacter varying(40),",
			"    partneradmitdate\t\t\t\tdate,",
			"    classoperator\t\t\t\t\tcharacter varying(40),",
			"    classadmitdate\t\t\t\t\tdate,",
			"    returndetailtype\t\t\t\tcharacter varying(5),",
			"    reason1\t\t\t\t\t\t\tcharacter varying(10),",
			"    reason2\t\t\t\t\t\t\tcharacter varying(10),",
			"    returndenpmaketype\t\t\t\tcharacter varying(1),",
			"    totaldeliveryqty\t\t\t\tnumeric(7,1) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnkkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnktaxkngk\t\t\t\t\tnumeric(11,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalbikkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    notes\t\t\t\t\t\t\tcharacter varying(200),",
			"    returntype\t\t\t\t\t\tcharacter varying(2) DEFAULT '00'::character varying NOT NULL,",
			"    pendingtype\t\t\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying NOT NULL,",
			"    rsvchar1\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar2\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar3\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar4\t\t\t\t\t\tcharacter varying(10),",
			"    rsvnum1\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum2\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum3\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum4\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvdate1\t\t\t\t\t\tdate,",
			"    rsvdatetime1\t\t\t\t\ttimestamp(6) without time zone,",
			"    addoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    adddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    addproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    updoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    upddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    updproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    CONSTRAINT pk_utrreturnheader PRIMARY KEY (sysdenpno)",
			");",
			"",
			"COMMENT ON TABLE utr_returnheader IS '【返品】返品実績ヘッダです。';",
			"",
			"COMMENT ON COLUMN utr_returnheader.sysdenpno IS 'システム伝票番号です。';",
			"COMMENT ON COLUMN utr_returnheader.denpno IS '返品伝票番号です。';",
			"COMMENT ON COLUMN utr_returnheader.denpkind IS 'システム伝票種類です。';",
			"COMMENT ON COLUMN utr_returnheader.userdenpkind IS 'ユーザ伝票種類です。';",
			"COMMENT ON COLUMN utr_returnheader.denptype IS 'システム伝票区分です。';",
			"COMMENT ON COLUMN utr_returnheader.userdenptype IS 'ユーザ伝票区分です。';",
			"COMMENT ON COLUMN utr_returnheader.store_cd IS '店舗コードです。';",
			"COMMENT ON COLUMN utr_returnheader.floor_cd IS 'フロアコードです。未指定時またはフロア管理していない場合は店舗コードと同じ値が入ります。';",
			"COMMENT ON COLUMN utr_returnheader.returndate IS '返品日です。';",
			"COMMENT ON COLUMN utr_returnheader.deliverydate IS '納品日です。';",
			"COMMENT ON COLUMN utr_returnheader.partner_cd IS '発注先コードです。';",
			"COMMENT ON COLUMN utr_returnheader.itemattributetype IS '商品属性区分です。';",
			"COMMENT ON COLUMN utr_returnheader.classtype IS '商品分類階層区分です。';",
			"COMMENT ON COLUMN utr_returnheader.parentclass_cd IS '代表分類コードです。';",
			"COMMENT ON COLUMN utr_returnheader.attributeclass_cd IS '属性分類コードです。';",
			"COMMENT ON COLUMN utr_returnheader.taxtype IS '税区分です。';",
			"COMMENT ON COLUMN utr_returnheader.tax_cd IS '税率コードです。';",
			"COMMENT ON COLUMN utr_returnheader.logisticscentertype IS '物流センター区分です。';",
			"COMMENT ON COLUMN utr_returnheader.logisticscenter_cd IS '物流センターコードです。店直の場合はNULLが登録されています。';",
			"COMMENT ON COLUMN utr_returnheader.partnerdistributionmaster_cd IS '取引先向け配信マスタコードです。';",
			"COMMENT ON COLUMN utr_returnheader.partnerlayouttype IS '取引先向け配信ファイルのレイアウト区分です。';",
			"COMMENT ON COLUMN utr_returnheader.directtransfer IS '直接送信先コードです。';",
			"COMMENT ON COLUMN utr_returnheader.temporarytransfer IS '一時配信先コードです。';",
			"COMMENT ON COLUMN utr_returnheader.logisticsdistributionmaster_cd IS '物流向け配信マスタコードです。';",
			"COMMENT ON COLUMN utr_returnheader.logisticslayouttype IS '物流向け配信ファイルのレイアウト区分です。';",
			"COMMENT ON COLUMN utr_returnheader.businessname IS '営業区分です。';",
			"COMMENT ON COLUMN utr_returnheader.eosmaketype IS '配信作成区分です。';",
			"COMMENT ON COLUMN utr_returnheader.instore_cd IS '入庫店舗コードです。';",
			"COMMENT ON COLUMN utr_returnheader.inclass_cd IS '入庫分類コードです。';",
			"COMMENT ON COLUMN utr_returnheader.grosstype IS '総量区分です。（0:店別 1:総量）';",
			"COMMENT ON COLUMN utr_returnheader.distributionstatus IS '配信ステータスです。（0:未配信、1:配信済）';",
			"COMMENT ON COLUMN utr_returnheader.distributiondatetime IS '配信時刻です。';",
			"COMMENT ON COLUMN utr_returnheader.deliveryplanflag IS '納品予定フラグです。';",
			"COMMENT ON COLUMN utr_returnheader.deliveryplandate IS '納品予定日です。';",
			"COMMENT ON COLUMN utr_returnheader.deliverydecisionflag IS '納品確定日です。';",
			"COMMENT ON COLUMN utr_returnheader.inspectdate IS '伝票計上日です。';",
			"COMMENT ON COLUMN utr_returnheader.printdatetime IS '印刷日時です。未印刷データはNULLが設定されます。';",
			"COMMENT ON COLUMN utr_returnheader.partneroperator IS '発注先担当者です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.partneradmitdate IS '発注先担当者の了承日です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.classoperator IS '部門担当者名です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.classadmitdate IS '部門担当者の了承日です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.returndetailtype IS '返品方式区分です。　1:直接返品　2:総量返品　3:通過返品　';",
			"COMMENT ON COLUMN utr_returnheader.reason1 IS '返品理由１です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.reason2 IS '返品理由２です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheader.returndenpmaketype IS '返品実績作成区分です。';",
			"COMMENT ON COLUMN utr_returnheader.totaldeliveryqty IS '納品数合計です。';",
			"COMMENT ON COLUMN utr_returnheader.totalgnkkngk IS '返品金額合計です。';",
			"COMMENT ON COLUMN utr_returnheader.totalgnktaxkngk IS '原価消費税額合計です。';",
			"COMMENT ON COLUMN utr_returnheader.totalbikkngk IS '売価金額合計です。';",
			"COMMENT ON COLUMN utr_returnheader.notes IS 'ヘッダコメントです。';",
			"COMMENT ON COLUMN utr_returnheader.returntype IS '返品区分です。00:返品、03:廃棄';",
			"COMMENT ON COLUMN utr_returnheader.pendingtype IS '保留区分です。一度、返品保留になったかどうかです。0:なし、1:保留';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar1 IS '文字列予備項目１です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar2 IS '文字列予備項目２です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar3 IS '文字列予備項目３です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvchar4 IS '文字列予備項目４です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum1 IS '数値予備項目１です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum2 IS '数値予備項目２です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum3 IS '数値予備項目３です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvnum4 IS '数値予備項目４です。';",
			"COMMENT ON COLUMN utr_returnheader.rsvdate1 IS '基取引年月日です。発注先マスタの返品税変更経過月数より基取引年月日を算出します。';",
			"COMMENT ON COLUMN utr_returnheader.rsvdatetime1 IS '日時予備１です。';",
			"COMMENT ON COLUMN utr_returnheader.addoperator_cd IS '新規作成者です。';",
			"COMMENT ON COLUMN utr_returnheader.adddatetime IS '新規作成日です。';",
			"COMMENT ON COLUMN utr_returnheader.addproc_cd IS '新規作成処理コードです。';",
			"COMMENT ON COLUMN utr_returnheader.updoperator_cd IS '最終更新者です。';",
			"COMMENT ON COLUMN utr_returnheader.upddatetime IS '最終更新日です。';",
			"COMMENT ON COLUMN utr_returnheader.updproc_cd IS '最終更新処理コードです。';",
			"",
			"CREATE INDEX ix1_utrreturnheader ON utr_returnheader USING btree (denpno);",
			"CREATE INDEX ix2_utrreturnheader ON utr_returnheader USING btree (store_cd);",
			"CREATE INDEX ix3_utrreturnheader ON utr_returnheader USING btree (partner_cd);",
			"CREATE INDEX ix4_utrreturnheader ON utr_returnheader USING btree (returndate, userdenptype);",
			
			"\n"
		],
		"description": "Defined create table pattern"
	},

	"Defined create table log pattern": {
		"prefix": "createtablelog",
		"body": [
			"\n",
			"CREATE TABLE utr_returnheaderlog (",
			"    log_id\t\t\t\t\t\t\tcharacter varying(36) not null,",
			"    logdatetime\t\t\t\t\t\ttimestamp without time zone not null,",
			"    logoperator_cd\t\t\t\t\tcharacter varying(20) not null,",
			"    logtype\t\t\t\t\t\t\tcharacter varying(1) not null,",
			"    sysdenpno\t\t\t\t\t\tnumeric(14,0) NOT NULL,",
			"    denpno\t\t\t\t\t\t\tnumeric(9,0) NOT NULL,",
			"    denpkind\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenpkind\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    denptype\t\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    userdenptype\t\t\t\t\tcharacter varying(2) NOT NULL,",
			"    store_cd\t\t\t\t\t\tcharacter varying(10) NOT NULL,",
			"    floor_cd\t\t\t\t\t\tcharacter varying(5),",
			"    returndate\t\t\t\t\t\tdate NOT NULL,",
			"    deliverydate\t\t\t\t\tdate NOT NULL,",
			"    partner_cd\t\t\t\t\t\tcharacter varying(6) NOT NULL,",
			"    itemattributetype\t\t\t\tcharacter varying(3) NOT NULL,",
			"    classtype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    parentclass_cd\t\t\t\t\tcharacter varying(5) NOT NULL,",
			"    attributeclass_cd\t\t\t\tcharacter varying(5) NOT NULL,",
			"    taxtype\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    tax_cd\t\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscentertype\t\t\t\tcharacter varying(1) NOT NULL,",
			"    logisticscenter_cd\t\t\t\tcharacter varying(6),",
			"    partnerdistributionmaster_cd\tcharacter varying(6),",
			"    partnerlayouttype\t\t\t\tcharacter varying(2),",
			"    directtransfer\t\t\t\t\tcharacter varying(6),",
			"    temporarytransfer\t\t\t\tcharacter varying(6),",
			"    logisticsdistributionmaster_cd\tcharacter varying(6),",
			"    logisticslayouttype\t\t\t\tcharacter varying(2),",
			"    businessname\t\t\t\t\tcharacter varying(2),",
			"    eosmaketype\t\t\t\t\t\tcharacter varying(2),",
			"    instore_cd\t\t\t\t\t\tcharacter varying(10),",
			"    inclass_cd\t\t\t\t\t\tcharacter varying(5),",
			"    grosstype\t\t\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributionstatus\t\t\t\tcharacter varying(1) NOT NULL,",
			"    distributiondatetime\t\t\ttimestamp(6) without time zone,",
			"    deliveryplanflag\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    deliveryplandate\t\t\t\tdate,",
			"    deliverydecisionflag\t\t\tcharacter varying(1) DEFAULT '0'::character varying,",
			"    inspectdate\t\t\t\t\t\tdate,",
			"    printdatetime\t\t\t\t\ttimestamp(6) without time zone,",
			"    partneroperator\t\t\t\t\tcharacter varying(40),",
			"    partneradmitdate\t\t\t\tdate,",
			"    classoperator\t\t\t\t\tcharacter varying(40),",
			"    classadmitdate\t\t\t\t\tdate,",
			"    returndetailtype\t\t\t\tcharacter varying(5),",
			"    reason1\t\t\t\t\t\t\tcharacter varying(10),",
			"    reason2\t\t\t\t\t\t\tcharacter varying(10),",
			"    returndenpmaketype\t\t\t\tcharacter varying(1),",
			"    totaldeliveryqty\t\t\t\tnumeric(7,1) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnkkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalgnktaxkngk\t\t\t\t\tnumeric(11,2) DEFAULT '0'::numeric NOT NULL,",
			"    totalbikkngk\t\t\t\t\tnumeric(14,2) DEFAULT '0'::numeric NOT NULL,",
			"    notes\t\t\t\t\t\t\tcharacter varying(200),",
			"    returntype\t\t\t\t\t\tcharacter varying(2) DEFAULT '00'::character varying NOT NULL,",
			"    pendingtype\t\t\t\t\t\tcharacter varying(1) DEFAULT '0'::character varying NOT NULL,",
			"    rsvchar1\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar2\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar3\t\t\t\t\t\tcharacter varying(10),",
			"    rsvchar4\t\t\t\t\t\tcharacter varying(10),",
			"    rsvnum1\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum2\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum3\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvnum4\t\t\t\t\t\t\tnumeric(10,0),",
			"    rsvdate1\t\t\t\t\t\tdate,",
			"    rsvdatetime1\t\t\t\t\ttimestamp(6) without time zone,",
			"    addoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    adddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    addproc_cd\t\t\t\t\t\tcharacter varying(40),",
			"    updoperator_cd\t\t\t\t\tcharacter varying(20) DEFAULT 'SYSTEM'::character varying NOT NULL,",
			"    upddatetime\t\t\t\t\t\ttimestamp(6) without time zone NOT NULL,",
			"    updproc_cd\t\t\t\t\t\tcharacter varying(40)",
			");",
			"",
			"COMMENT ON TABLE utr_returnheaderlog IS '【返品】返品実績ヘッダログです。';",
			"",
			"COMMENT ON COLUMN utr_returnheaderlog.log_id IS 'ログＩＤです。TO_GUIDで生成された文字列（３６バイト）です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logdatetime IS '変更ログ日時です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logoperator_cd IS '変更ログ担当者コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logtype IS '標準変更ログ区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.sysdenpno IS 'システム伝票番号です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.denpno IS '返品伝票番号です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.denpkind IS 'システム伝票種類です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.userdenpkind IS 'ユーザ伝票種類です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.denptype IS 'システム伝票区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.userdenptype IS 'ユーザ伝票区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.store_cd IS '店舗コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.floor_cd IS 'フロアコードです。未指定時またはフロア管理していない場合は店舗コードと同じ値が入ります。';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndate IS '返品日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliverydate IS '納品日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.partner_cd IS '発注先コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.itemattributetype IS '商品属性区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.classtype IS '商品分類階層区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.parentclass_cd IS '代表分類コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.attributeclass_cd IS '属性分類コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.taxtype IS '税区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.tax_cd IS '税率コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticscentertype IS '物流センター区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticscenter_cd IS '物流センターコードです。店直の場合はNULLが登録されています。';",
			"COMMENT ON COLUMN utr_returnheaderlog.partnerdistributionmaster_cd IS '取引先向け配信マスタコードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.partnerlayouttype IS '取引先向け配信ファイルのレイアウト区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.directtransfer IS '直接送信先コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.temporarytransfer IS '一時配信先コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticsdistributionmaster_cd IS '物流向け配信マスタコードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.logisticslayouttype IS '物流向け配信ファイルのレイアウト区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.businessname IS '営業区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.eosmaketype IS '配信作成区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.instore_cd IS '入庫店舗コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.inclass_cd IS '入庫分類コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.grosstype IS '総量区分です。（0:店別 1:総量）';",
			"COMMENT ON COLUMN utr_returnheaderlog.distributionstatus IS '配信ステータスです。（0:未配信、1:配信済）';",
			"COMMENT ON COLUMN utr_returnheaderlog.distributiondatetime IS '配信時刻です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliveryplanflag IS '納品予定フラグです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliveryplandate IS '納品予定日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.deliverydecisionflag IS '納品確定日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.inspectdate IS '伝票計上日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.printdatetime IS '印刷日時です。未印刷データはNULLが設定されます。';",
			"COMMENT ON COLUMN utr_returnheaderlog.partneroperator IS '発注先担当者です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.partneradmitdate IS '発注先担当者の了承日です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.classoperator IS '部門担当者名です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.classadmitdate IS '部門担当者の了承日です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndetailtype IS '返品方式区分です。　1:直接返品　2:総量返品　3:通過返品　';",
			"COMMENT ON COLUMN utr_returnheaderlog.reason1 IS '返品理由１です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.reason2 IS '返品理由２です。返品伝票の印字項目です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.returndenpmaketype IS '返品実績作成区分です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.totaldeliveryqty IS '納品数合計です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalgnkkngk IS '返品金額合計です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalgnktaxkngk IS '原価消費税額合計です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.totalbikkngk IS '売価金額合計です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.notes IS 'ヘッダコメントです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.returntype IS '返品区分です。00:返品、03:廃棄';",
			"COMMENT ON COLUMN utr_returnheaderlog.pendingtype IS '保留区分です。一度、返品保留になったかどうかです。0:なし、1:保留';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar1 IS '文字列予備項目１です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar2 IS '文字列予備項目２です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar3 IS '文字列予備項目３です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvchar4 IS '文字列予備項目４です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum1 IS '数値予備項目１です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum2 IS '数値予備項目２です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum3 IS '数値予備項目３です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvnum4 IS '数値予備項目４です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvdate1 IS '基取引年月日です。発注先マスタの返品税変更経過月数より基取引年月日を算出します。';",
			"COMMENT ON COLUMN utr_returnheaderlog.rsvdatetime1 IS '日時予備１です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.addoperator_cd IS '新規作成者です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.adddatetime IS '新規作成日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.addproc_cd IS '新規作成処理コードです。';",
			"COMMENT ON COLUMN utr_returnheaderlog.updoperator_cd IS '最終更新者です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.upddatetime IS '最終更新日です。';",
			"COMMENT ON COLUMN utr_returnheaderlog.updproc_cd IS '最終更新処理コードです。';",
			"",
			"CREATE INDEX ix1_utrreturnheaderlog ON utr_returnheaderlog (log_id, logdatetime);",
			"CREATE INDEX ix2_utrreturnheaderlog ON utr_returnheaderlog (logdatetime, sysdenpno, logtype); -- 外部IFチーム要望",
			"\n"
		],
		"description": "Defined create table pattern"
	}
}