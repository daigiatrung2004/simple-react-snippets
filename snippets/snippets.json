{
	"Import React": {
		"prefix": "imr",
		"body": [
			"import React from 'react';\n"
		],
		"description": "Import React"
	},
	"Import React and Component": {
		"prefix": "imrc",
		"body": [
			"import React, { Component } from 'react';\n"
		],
		"description": "Import React, { Component }"
	},
	"Import ReactDOM": {
		"prefix": "imrd",
		"body": [
			"import ReactDOM from 'react-dom';"
		],
		"description": "Import ReactDOM"
	},
	"Import React, { useState }": {
		"prefix": "imrs",
		"body": [
			"import React, { useState } from 'react';\n"
		],
		"description": "Import React, { useState }"
	},
	"Import React, { useState, useEffect }": {
		"prefix": "imrse",
		"body": [
			"import React, { useState, useEffect } from 'react';\n"
		],
		"description": "Import React, { useState, useEffect }"
	},
	"Import PropTypes": {
		"prefix": "impt",
		"body": [
			"import PropTypes from 'prop-types';"
		],
		"description": "Import PropTypes"
	},
	"Import Pure Component": {
		"prefix": "impc",
		"body": [
			"import React, { PureComponent } from 'react';\n"
		],
		"description": "Import React, { PureComponent }"
	},
	"Class Component": {
		"prefix": "cc",
		"body": [
			"class $1 extends Component {",
			"\tstate = { $2 } ",
			"\trender() { ",
			"\t\treturn ($0);",
			"\t}",
			"}",
			" ",
			"export default $1;"
		],
		"description": "Class Component"
	},
	"Class Pure Component": {
		"prefix": "cpc",
		"body": [
			"class $1 extends PureComponent {",
			"\tstate = { $2 }",
			"\trender() { ",
			"\t\treturn ( $0 );",
			"\t}",
			"}",
			" ",
			"export default $1;"
		],
		"description": "Class Pure Component"
	},
	"Class Component With Constructor": {
		"prefix": "ccc",
		"body": [
			"class $1 extends Component {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t}",
			"\tstate = { $2 }",
			"\trender() { ",
			"\t\treturn ( $0 );",
			"\t}",
			"}",
			" ",
			"export default $1;"
		],
		"description": "Class Component With Constructor"
	},
	"Stateless Function Component": {
		"prefix": "sfc",
		"body": [
			"const $1 = ($2) => {",
			"\treturn ( $0 );",
			"}",
			" ",
			"export default $1;"
		],
		"description": "Stateless Function Component"
	},
	"Function Syntax Component": {
		"prefix": "ffc",
		"body": [
			"function $1($2) {",
			"\treturn ( $0 );",
			"}",
			"",
			"export default $1;"
		],
		"description": "Function Syntax Component"
	},
	"componentDidMount": {
		"prefix": "cdm",
		"body": [
			"componentDidMount() {",
			"\t$0",
			"}"
		],
		"description": "componentDidMount"
	},
	"useEffect": {
		"prefix": "uef",
		"body": [
			"useEffect(() => {",
			"\t$1",
			"}, []);"
		],
		"description": "useEffect Hook"
	},
	"componentWillMount": {
		"prefix": "cwm",
		"body": [
			"//WARNING! To be deprecated in React v17. Use componentDidMount instead.",
			"componentWillMount() {",
			"\t$0",
			"}"
		],
		"description": "componentWillMount"
	},
	"componentWillReceiveProps": {
		"prefix": "cwrp",
		"body": [
			"//WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.",
			"componentWillReceiveProps(nextProps) {",
			"\t$0",
			"}"
		],
		"description": "componentWillReceiveProps"
	},
	"getDerivedStateFromProps": {
		"prefix": "gds",
		"body": [
			"static getDerivedStateFromProps(nextProps, prevState) {",
			"\t$0",
			"}"
		],
		"description": "getDerivedStateFromProps"
	},
	"shouldComponentUpdate": {
		"prefix": "scu",
		"body": [
			"shouldComponentUpdate(nextProps, nextState) {",
			"\t$0",
			"}"
		],
		"description": "shouldComponentUpdate"
	},
	"componentWillUpdate": {
		"prefix": "cwu",
		"body": [
			"//WARNING! To be deprecated in React v17. Use componentDidUpdate instead.",
			"componentWillUpdate(nextProps, nextState) {",
			"\t$0",
			"}"
		],
		"description": "componentWillUpdate"
	},
	"componentDidUpdate": {
		"prefix": "cdu",
		"body": [
			"componentDidUpdate(prevProps, prevState) {",
			"\t$0",
			"}"
		],
		"description": "componentDidUpdate"
	},
	"componentWillUnmount": {
		"prefix": "cwun",
		"body": [
			"componentWillUnmount() {",
			"\t$0",
			"}"
		],
		"description": "componentWillUnmount"
	},
	"componentDidCatch": {
		"prefix": "cdc",
		"body": [
			"componentDidCatch(error, info) {",
			"\t$0",
			"}"
		],
		"description": "componentDidCatch"
	},
	"getSnapshotBeforeUpdate": {
		"prefix": "gsbu",
		"body": [
			"getSnapshotBeforeUpdate(prevProps, prevState) {",
			"\t$0",
			"}"
		],
		"description": "getSnapshotBeforeUpdate"
	},
	"setState": {
		"prefix": "ss",
		"body": [
			"this.setState({ $1: $2 });"
		],
		"description": "setState"
	},
	"Functional setState": {
		"prefix": "ssf",
		"body": [
			"this.setState(prevState => {",
			"\treturn { $1: prevState.$1 };",
			"});"
		],
		"description": "Functional setState"
	},
	"Declare a new state variable using State Hook": {
		"prefix": "usf",
		"body": [
			"const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);"
		],
		"description": "Declare a new state Variable using the State Hook. Hit Tab to apply CamelCase to function"
	},
	"render": {
		"prefix": "ren",
		"body": [
			"render() {",
			"\treturn (",
			"\t\t $0",
			"\t);",
			"}"
		],
		"description": "render"
	},
	"Render Prop": {
		"prefix": "rprop",
		"body": [
			"class $1 extends Component {",
			"\tstate = { $2: $3 }",
			"\trender() { ",
			"\t\treturn this.props.render({",
			"\t\t\t$2: this.state.$2",
			"\t\t});",
			"\t}",
			"}",
			" ",
			"export default $1;"
		],
		"description": "Render Prop"
	},
	"Higher Order Component": {
		"prefix": "hoc",
		"body": [
			"function $1($2) {",
			"\treturn class extends Component {",
			"\t\tconstructor(props) {",
			"\t\t\tsuper(props);",
			"\t\t}",
			" ",
			"\t\trender() {",
			"\t\t\treturn <$2 {...this.props} $0/>",
			"\t\t}",
			"\t}",
			"}"
		],
		"description": "Higher Order Component"
	},
	"Context Provider": {
		"prefix": "cp",
		"body": [
			"export const $1 = React.createContext();",
			"",
			"const $1Provider = (props) => {",
			"\t// Initial Provider State",
			"\tconst state = {};",
			"",
			"\t// Reducer Function",
			"\tconst $2 = (state, action) => {",
			"\t\t",
			"\t};",
			"",
			"\treturn (",
			"\t\t<$1.Provider value={{state: state, $2}}>",
			"\t\t\t{props.children}",
			"\t\t</$1.Provider>",
			"\t);",
			"}",
			"",
			"export default $1Provider;"
		],
		"description": "Context Provider"
	},
	"Variable user info": {
		"prefix": "userinfo_SYSTEM_INFO_DEFINITION",
		"body": [
			"SYSTEM_INFO_DEFINITION"
		],
		"description": "Variable user info"
	},
	"INFO DEFINED COLUMN": {
		"prefix": "userinfo_SYSTEM_INFO_DEFINITION",
		"body": [
			"SYSTEM_INFO_DEFINITION"
		],
		"description": "DB_ITEM_DEFINITION : info DEFINED COLUMN"
	},
	"Parameter condition search from screen parent": {
		"prefix": "userinfo_SYSTEM_INFO_DEFINITION",
		"body": [
			"//==============================================",
			"//IPAD判�?",
			"//==============================================",
			"function isDeviceTablet() {",
			"\tvar userAgent = window.navigator.userAgent.toLowerCase();",
			"\tif (userAgent.indexOf('ipad') != -1 || userAgent.indexOf('android') != -1) {",
			"\t\treturn true;",
			"\t} else {",
			"\t\treturn false;",
			"\t}",
			"}",
			"",
			"if (isDeviceTablet()) {",
			"\tscriptDeviceDir = 'tablet_script';",
			"\tcssDeviceDir = 'tablet_css';",
			"}"
		],
		"description": "SYSTEM_INFO_DEFINITION : infomation user login login_cd,operator_cd, operator_name, store_cd, store_name, system_mode, system_mode_name, ..."
	},
	"Detect devices": {
		"prefix": "check_browser_detect_devices",
		"body": [
			"parent_search_parameter"
		],
		"description": "Detect devices"
	},
	"Create Process Queue Pattern": {
		"prefix": "search_with_param",
		"body": [
			"\tvar queue = new ProcessQueue();",
			"",
			"\t// チェ�?クの付いて�?るｼ?��?�??��ﾓｰ?�??���??、�??類権限取�?",
			"\tqueue.push({",
			"\t\tfunc_cd\t\t:\t'AA07',",
			"\t\trevision_no\t:\t'1',",
			"\t\tproc_cd\t\t:\t'GetClassAuth',",
			"\t\tsqlParam\t:\t{",
			"\t\t\t OPERATOR_CD\t: $('#GROUP_3').find('#OPERATOR_CD').getValue(),",
			"\t\t\t SYSTEMMODE_CD\t:  $('#ASSIST_1').find('#SYSTEMMODE_CD').getValue()",
			"\t\t},",
			"\t\tsuccessFunc\t:\tfunction (jsonData) {",
			"\t\t\t\t\tclassAuthData = jsonData;",
			"\t\t\t\t\treturn true;",
			"\t\t}",
			"\t});",
			"\tqueue.push(function(){",
			"\t\t\tnew asyncExecuter([",
			"\t\t\t\t{",
			"\t\t\t\t\tLINE_NO\t\t\t:1,",
			"\t\t\t\t\tTYPE\t\t\t:'PROC',",
			"\t\t\t\t\tDETAIL_TYPE\t\t:'search',",
			"\t\t\t\t\tDATA\t\t\t: classAuthData,",
			"\t\t\t\t\tREQUEST_TARGET\t:'',",
			"\t\t\t\t\tRESULT_TARGET\t: 'GROUP_6'",
			"\t\t\t\t}",
			"\t\t\t],",
			"\t\t\t'',",
			"\t\t\tfalse",
			"\t\t\t).execute();",
			"\t});",
			"\tqueue.push(function(){ executer.gotoNextProcess() });",
			"\tqueue.execute();"
		],
		"description": "Create Process Queue Pattern"
	},
	"Get Value From Resource": {
		"prefix": "GET_DB_SCREEN_RESOURCE_DEFINITION_ResourceVal",
		"body": [
			"DB_SCREEN_RESOURCE_DEFINITION['HD05_001.LABELTEXT.CONFIRM.OK'].ResourceVal"
		],
		"description": "Get Value From Resource"
	},
	"Get Value From Error code": {
		"prefix": "GET_DB_ERROR_CODE_DEFINITION_ResourceVal",
		"body": [
			"DB_ERROR_CODE_DEFINITION['1000']['Normal']['MESSAGE']"
		],
		"description": "Get Value From Error code"
	},
	"Dialog ERROR": {
		"prefix": "DIALOG_ERROR",
		"body": [
			"\t\t\t\tvar settings = {",
			"\t\t\t\t\tmessage\t\t: '日�?(TO)は日�?(FROM)以降を�?定して下さ�?�?',",
			"\t\t\t\t\ttype\t\t: 'ok',",
			"\t\t\t\t\tfocus\t\t: 'ok',",
			"\t\t\t\t\tbuttonTitle\t: {",
			"\t\t\t\t\t\t\t\t\tok  : ''",
			"\t\t\t\t\t},",
			"\t\t\t\t\tcallback\t: {",
			"\t\t\t\t\t\t\t\t\tok  : function() {",
			"\t\t\t\t\t\t\t\t\t\t\toverlayController.hideAll();",
			"\t\t\t\t\t\t\t\t\t\t\texecuter.exit();",
			"\t\t\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t},",
			"\t\t\t\t\tbody_css\t: {",
			"\t\t\t\t\t\t\t\t\taddClass    : 'WAITING_ACTION'",
			"\t\t\t\t\t},",
			"\t\t\t\t\ttitle\t\t: 'Error'",
			"\t\t\t\t};",
			"",
			"\t\t\t\tsetTimeout(function() { dialog.error(settings); }, 10);"
		],
		"description": "Dialog ERROR"
	},
	"Dialog CONFIRM/INFO": {
		"prefix": "DIALOG_CONFIRM_INFO",
		"body": [
			"var settings = {",
			"\tmessage\t\t: msg,",
			"\ttype\t\t: 'ok_cancel',",
			"\tfocus\t\t: 'ok',",
			"\tbuttonTitle\t: {",
			"\t\t\t\t\tok\t\t: DB_SCREEN_RESOURCE_DEFINITION['HD05_001.LABELTEXT.CONFIRM.OK'].ResourceVal,",
			"\t\t\t\t\tcancel\t: DB_SCREEN_RESOURCE_DEFINITION['HD05_001.LABELTEXT.CONFIRM.CANCEL'].ResourceVal",
			"\t},",
			"\tcallback\t: {",
			"\t\t\t\t\tok\t\t: function() {",
			"\t\t\t\t\t\t\t\texecuter.gotoNextProcess();",
			"\t\t\t\t\t\t\t},",
			"\t\t\t\t\tcancel\t: function() {",
			"\t\t\t\t\t\t\t\texecuter.exit();",
			"\t\t\t\t\t\t\t\t$('#ASSIST').find('#LINENO').focus();",
			"\t\t\t\t\t\t\t}",
			"\t},",
			"\tbody_css\t: {",
			"\t\t\t\t\taddClass    : 'WAITING_ACTION'",
			"\t\t\t\t},",
			"\ttitle\t\t: DB_SCREEN_RESOURCE_DEFINITION['HD05_001.LABELTEXT.WAITTING.CONFIRM'].ResourceVal",
			"};",
			"",
			"setTimeout(function() { dialog.confirm(settings); }, 10);"
		],
		"description": "Dialog ERROR"
	},
	"Create Process Queue Pattern with wait action": {
		"prefix": "search_with_param_and_wait_action",
		"body": [
			"\t// 機�?�コード設定テーブルを検索",
			"\tvar queue = new ProcessQueue();",
			"\tqueue.push(function() {",
			"\t\tdialog.waitAction({",
			"\t\t\tmessage     : DB_SCREEN_RESOURCE_DEFINITION['CC01_001.LABELTEXT.WAITING_MESSAGE'].ResourceVal,",
			"\t\t\ttype        : 'ok',",
			"\t\t\tbuttonTitle : { ok : DB_SCREEN_RESOURCE_DEFINITION['CC01_001.LABELTEXT.WAITING_MESSAGE_CANCEL'].ResourceVal},",
			"\t\t\tcallback    : { ok : function() {}},",
			"\t\t\tbody_css    : { addClass : 'WAITING_ACTION'},",
			"\t\t\ttitle       : 'none'",
			"\t\t});",
			"\t});",
			"",
			"\tqueue.push({",
			"\t\tfunc_cd         : 'CC01',",
			"\t\tproc_cd         : 'GridSearchKind',",
			"\t\trevision_no     : '1',",
			"\t\tsqlParam        : {",
			"\t\t\t\t\t\t\tWFREGISTERKIND_CD   : $('#GROUP_1').find('#WFREGISTERKIND_CD').getValue(),",
			"\t\t\t\t\t\t\tREGNO               : $('#GROUP_1').find('#REGNO').getValue()",
			"\t\t\t\t\t\t},",
			"\t\tsuccessFunc     : function (jsonData) {",
			"\t\t\t\t\t\t\tif (jsonData == null || jsonData.length == 0) {",
			"\t\t\t\t\t\t\t\toverlayController.hideAll();",
			"\t\t\t\t\t\t\t\treturn;",
			"\t\t\t\t\t\t\t}",
			"",
			"\t\t\t\t\t\t\tvar topElement = [];",
			"",
			"\t\t\t\t\t\t\tfor(var i = 0; i < 10; i++) {",
			"\t\t\t\t\t\t\t\tvar rowData = jsonData[i];",
			"",
			"\t\t\t\t\t\t\t\tfor (var colName in rowData) {",
			"\t\t\t\t\t\t\t\t\tif (i == 0) {",
			"\t\t\t\t\t\t\t\t\t\ttopElement.push(colName);",
			"\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName] = jQuery.extend(true, {}, ITEM_DEFINITION['GROUP_2']['DYNAMIC_COLUMN']);",
			"\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].name = colName;",
			"\t\t\t\t\t\t\t\t\t\tvar colWidthByData = defaultColWidth * rowData[colName].length;",
			"\t\t\t\t\t\t\t\t\t\tvar colWidthByColName = defaultColWidth * colName.length;",
			"",
			"\t\t\t\t\t\t\t\t\t\tif (colWidthByColName >= colWidthByData) {",
			"\t\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].element_width = colWidthByColName;",
			"\t\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].titlelabel_width = colWidthByColName;",
			"",
			"\t\t\t\t\t\t\t\t\t\t} else {",
			"\t\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].element_width = colWidthByData;",
			"\t\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].titlelabel_width = colWidthByData;",
			"\t\t\t\t\t\t\t\t\t\t}",
			"",
			"\t\t\t\t\t\t\t\t\t\tcontinue;",
			"\t\t\t\t\t\t\t\t\t}",
			"",
			"\t\t\t\t\t\t\t\t\tvar colWidth = defaultColWidth * rowData[colName].length;",
			"",
			"\t\t\t\t\t\t\t\t\tif (ITEM_DEFINITION['GROUP_2'][colName].element_width < colWidth) {",
			"\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].element_width = colWidth;",
			"\t\t\t\t\t\t\t\t\t\tITEM_DEFINITION['GROUP_2'][colName].titlelabel_width = colWidth;",
			"\t\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t\t\t}",
			"\t\t\t\t\t\t\t}",
			"",
			"\t\t\t\t\t\t\tvar GridElement = [topElement];",
			"\t\t\t\t\t\t\tvar layout = {};",
			"\t\t\t\t\t\t\tlayout.pattern_1 = {};",
			"\t\t\t\t\t\t\tlayout.pattern_1.HEADER = GridElement;",
			"\t\t\t\t\t\t\tlayout.pattern_1.DETAIL = GridElement;",
			"",
			"\t\t\t\t\t\t\tGROUP_ELEMENT.GROUP_2.grid.object.resetGridLayout(layout);",
			"\t\t\t\t\t\t\tGROUP_ELEMENT.GROUP_2.grid.object.setResultSet(new ResultSet(jsonData));",
			"\t\t\t\t\t\t\tGROUP_ELEMENT.GROUP_2.grid.object.updateRow(-1, GROUP_ELEMENT.GROUP_2.grid.object.getResultSet().getAllData()[0]);",
			"\t\t\t\t\t\t\toverlayController.hideAll();",
			"\t\t\t\t\t\t},",
			"\t\tprocessEndFunc  : function () {",
			"\t\t\t\t\t\t\t$('#GROUP_1').find('#CONFIRMATION').disable();",
			"\t\t\t\t\t\t\t$('#GROUP_1').find('#SENDBACK').disable();",
			"\t\t\t\t\t\t\t$('#GROUP_1').find('#RECOGNITION').disable();",
			"\t\t\t\t\t\t\t$('#GROUP_1').find('#REJECTION').disable();",
			"\t\t\t\t\t\t\t$('#GROUP_1').find('#COMMENT').disable();",
			"\t\t\t\t\t\t\t$('#ESC_BUTTON').focus();",
			"\t\t\t\t\t\t}",
			"\t});",
			"\tqueue.execute();"
		],
		"description": "Create Process Queue Pattern with wait action"
	},
	"Create Async Executer Pattern": {
		"prefix": "asyncExecuter",
		"body": [
			"\tvar processList = [",
			"\t\t{",
			"\t\t\tLINE_NO\t\t\t: 1,",
			"\t\t\tTYPE\t\t\t: 'PROC',",
			"\t\t\tDETAIL_TYPE\t\t: 'Password_Setting',",
			"\t\t\tFUNC_CD\t\t\t: 'AA01',",
			"\t\t\tREVISION_NO\t\t: '1',",
			"\t\t\tPROC_CD\t\t\t: 'PasswordReset',",
			"\t\t\tREQUEST_TARGET\t: 'GROUP_1'",
			"\t\t}",
			"\t]",
			"",
			"\t// 処�?の実�?",
			"\tnew asyncExecuter(processList, function() { executer.gotoNextProcess(); }).execute();"
		],
		"description": "Create Async Executer Pattern"
	},
	"Get Queue Function Constructor": {
		"prefix": "queue.constructor(property)",
		"body": [
			"function ProcessQueue(){",
			"\t/** 個�?の処�?を�?�れるキュー */",
			"\tthis._queue\t\t\t\t\t= [];",
			"\t/** 現在実行して�?る�?��?の ID ?�?ProcessQueue の�?部で自動的に割り振られる�? */",
			"\tthis._executeId\t\t\t\t= 0;",
			"\t/** キャンセルされた�?��? ID のリス�? */",
			"\tthis._canceledExecuteIdList = [];",
			"\t/** コールバック */",
			"\tthis.callBackFunction\t\t= function(){};",
			"\t/** 再帰一括起動最大回数 */",
			"\tthis.maxReflexivePronoun\t= 1000;",
			"\t/** 再帰エラーフラグ */",
			"\tthis.errorFlag\t\t\t\t= false;",
			"}"
		],
		"description": "Get Queue Function Constructor"
	},
	"Get Queue Function Clear": {
		"prefix": "queue.clear_df",
		"body": [
			"//==========================================================================================",
			"// キューをクリアする",
			"//==========================================================================================",
			"ProcessQueue.prototype.clear = function() {",
			"\tthis._queue = [];",
			"}"
		],
		"description": "Get Queue Function Clear"
	},
	"Get Queue Function Push": {
		"prefix": "queue.push_df",
		"body": [
			"//==========================================================================================",
			"// キューに処�?を追�?する",
			"//==========================================================================================",
			"ProcessQueue.prototype.push = function(func) {",
			"\tthis._queue.push(func);",
			"}"
		],
		"description": "Get Queue Function push"
	},
	"Get Queue Function Push Pattern": {
		"prefix": "queue.push",
		"body": [
			"\tqueue.push(function(){",
			"\t\t// グリ�?ドオブジェクトを取�?",
			"\t\tvar assistObject = GROUP_ELEMENT['ASSIST_1'].gridAssist.object;",
			"\t\tassistObject.entry();",
			"\t\t$('#GROUP_6').find('#GRID_DETAIL tbody').each(function() {",
			"\t\t\tvar rowNo = $(this).attr('rownumber');",
			"\t\t\tif (GROUP_ELEMENT.GROUP_6.grid.object.getRowData(rowNo).rowState == 'DEL') {",
			"\t\t\t\t$(this).addClass('GRID_DETAIL_DISABLED_COLOR').disable();",
			"\t\t\t}",
			"\t\t});",
			"\t\tchangeClassType($('#ASSIST_1').find('#CODETYPE'));",
			"\t\t$('#ASSIST_1').find('#CODETYPE').focus();",
			"\t\texecuter.gotoNextProcess();",
			"\t});"
		],
		"description": "Get Queue Function Push Pattern"
	},
	"Go to Next Process": {
		"prefix": "executer_gotonextprocess",
		"body": [
			"executer.gotoNextProcess();"
		],
		"description": "Go to Next Process"
	},
	"Go to Process": {
		"prefix": "executer_gotoprocess",
		"body": [
			"executer.gotoProcess(7);"
		],
		"description": "Go to Process"
	},
	"exit": {
		"prefix": "executer_exit",
		"body": [
			"executer.exit();"
		],
		"description": "exit"
	},
	"Get Queue Function Cancel Pattern": {
		"prefix": "queue.cancel_df",
		"body": [
			"//==========================================================================================",
			"// �?定された executeId の処�?をキャンセルする。executeId は execute() の戻り値として取得できる�?",
			"//==========================================================================================",
			"ProcessQueue.prototype.cancel = function(executeId) {",
			"\tthis._canceledExecuteIdList[executeId] = true;",
			"}"
		],
		"description": "Get Queue Function Cancel Pattern"
	},
	"Get Queue Function Cancel All Pattern": {
		"prefix": "queue.cancelAll_df",
		"body": [
			"//==========================================================================================",
			"// キューで全てプロセスをキャンセルする",
			"//==========================================================================================",
			"ProcessQueue.prototype.cancelAll = function() {",
			"\tfor(var i = this._queue.length - 1; i >= 0; i--) {",
			"\t\tthis.cancel(i);",
			"\t}",
			"}"
		],
		"description": "Get Queue Function Cancel All Pattern"
	},
	"Get Queue Function Execute Pattern": {
		"prefix": "queue.execute_df",
		"body": [
			"//==========================================================================================",
			"// キューに入れた処�?を�??番に実行する�?",
			"// @returns こ�?� execute() に関連付けられ�? executeId を返す。executeId は cancel() する際に使われる�?",
			"//==========================================================================================",
			"ProcessQueue.prototype.execute = function(callback){",
			"",
			"\tif(this._queue.length !== 0){",
			"\t\tif($.isFunction(callback)){",
			"\t\t\tthis.callBackFunction = callback;",
			"\t\t}",
			"\t\tthis._executeId += 1;",
			"\t\tthis._executeRecursive(this._queue, 0, this._executeId);",
			"\t}else{",
			"\t\tif($.isFunction(callback)){",
			"\t\t\tcallback();",
			"\t\t}",
			"\t}",
			"",
			"\treturn this._executeId;",
			"}"
		],
		"description": "Get Queue Function Execute Pattern"
	},
	"Get Queue Function _isAjaxParameter Pattern": {
		"prefix": "queue._isAjaxParameter_df",
		"body": [
			"//==========================================================================================",
			"// push() されたパラメータ�? Ajax 通信のためのパラメータか、単なる関数か判断する�?",
			"// @returns Ajax 通信用のパラメータであれば true を返す�?",
			"//==========================================================================================",
			"ProcessQueue.prototype._isAjaxParameter = function (params) {",
			"\tif (!params || params === true) {",
			"\t\treturn false;",
			"\t}",
			"\treturn params.func_cd;",
			"}"
		],
		"description": "Get Queue Function _isAjaxParameter Pattern"
	},
	"Get Queue Function _executeRecursive Pattern": {
		"prefix": "queue._executeRecursive_df",
		"body": [
			"console.log(ProcessQueue.prototype._executeRecursive);"
		],
		"description": "Get Queue Function _executeRecursive Pattern"
	},
	"Queue.execute": {
		"prefix": "queue.execute",
		"body": [
			"queue.execute();"
		],
		"description": "Queue.execute"
	},
	"Class Property Function": {
		"prefix": "cpf",
		"body": [
			"$1 = (${2:e${TM_SELECTED_TEXT}}) => {",
			"\t $0",
			"};"
		],
		"description": "Class Property Function"
	},
	"Export default": {
		"prefix": "export_default",
		"body": [
			"export { default } from './$1';"
		],
		"description": "export default for component"
	},
	"IMPORT $": {
		"prefix": "import_$",
		"body": [
			"import * as $ from './Styles';"
		],
		"description": "import * from styled-component"
	},
	"Import mediaqueries for reponsive": {
		"prefix": "import_mediaqueries",
		"body": [
			"import { mediaQueries } from '~/utils/reponsive';"
		],
		"description": "Import mediaqueries for reponsive"
	},
	"Import mediaqueries mobile reponsive": {
		"prefix": "import_mediaqueries_mobile",
		"body": [
			"\t${mediaQueries(",
			"\t\t'mobile',",
			"\t\t`",
			"\t\t`",
			"\t)}"
		],
		"description": "Import mediaqueries mobile reponsive"
	},
	"Import mediaqueries desktop reponsive": {
		"prefix": "import_mediaqueries_desktop",
		"body": [
			"\t${mediaQueries(",
			"\t\t'desktop',",
			"\t\t`",
			"\t\t`",
			"\t)}"
		],
		"description": "Import mediaqueries desktop reponsive"
	},
	"Devices argument handle": {
		"prefix": "device_argument_handle",
		"body": [
			"\t${({ devicearguments }) => {",
			"\t\tif (devicearguments) {",
			"\t\t\tlet queries = Object.keys(devicearguments).map(key => {",
			"\t\t\t\treturn mediaQueries(key, devicearguments[key]['style']);",
			"\t\t\t});",
			"\t\t\treturn queries.join('');",
			"\t\t}",
			"\t}}"
		],
		"description": "Devices argument handle"
	},
	"Devices argument attribute component": {
		"prefix": "device_argument_attributte_component",
		"body": [
			"\t\t\t\t\t\t\t\tdevicearguments={{",
			"\t\t\t\t\t\t\t\t\tmobile: {",
			"\t\t\t\t\t\t\t\t\t\tstyle: 'width: 9.1rem',",
			"\t\t\t\t\t\t\t\t\t},",
			"\t\t\t\t\t\t\t\t}}"
		],
		"description": "Devices argument attribute component"
	},
	"Import mediaqueries tablet reponsive": {
		"prefix": "import_mediaqueries_tablet",
		"body": [
			"\t${mediaQueries(",
			"\t\t'tablet',",
			"\t\t`",
			"\t\t`",
			"\t)}"
		],
		"description": "Import mediaqueries tablet reponsive"
	},
	"Add comma string type numberic": {
		"prefix": "add_comma",
		"body": [
			"addComma('10000')"
		],
		"description": "Add comma string type numberic"
	},
	"Remove comma string type numberic": {
		"prefix": "remove_comma",
		"body": [
			"removeComma('10,000')"
		],
		"description": "Remove comma string type numberic"
	},
	"Get byte length": {
		"prefix": "get_Byte_Length",
		"body": [
			"getByteLength(val)"
		],
		"description": "Get byte length"
	},
	"expression check for element pattern": {
		"prefix": "expression_check_for_element_pattern",
		"body": [
			"{FUNCTION({expression_Check_DisplayOrder})?#50004:none}"
		],
		"description": "expression check for element pattern"
	},
	"Device arugments for react component": {
		"prefix": "device_arguments_for_react_component",
		"body": [
			"\t\t\t\t\t\tdevicearguments={{",
			"\t\t\t\t\t\t\tmobile: {",
			"\t\t\t\t\t\t\t\tstyle: '$1',",
			"\t\t\t\t\t\t\t},",
			"\t\t\t\t\t\t}}"
		],
		"description": "Device arugments for react component"
	},
	"Device arugments for styled component": {
		"prefix": "device_arguments_for_styled_component",
		"body": [
			"\t${({ devicearguments }) => {",
			"\t\tif (devicearguments) {",
			"\t\t\tlet queries = Object.keys(devicearguments).map(key => {",
			"\t\t\t\treturn mediaQueries(key, devicearguments[key]['style']);",
			"\t\t\t});",
			"\t\t\treturn queries.join('');",
			"\t\t}",
			"\t}}"
		],
		"description": "Device arugments for styled component"
	},
	"shortcut javascript for generateTool": {
		"prefix": "shortcut_javascript_for_generateTool",
		"body": [
			"Một số phím tắt trong Javascript editor trên Gentool",
			"\tCtrl + Q / Toggle line comment",
			"\tHold Alt /  Vertical selection",
			" Search: highlight on scrollbar",
			"\tCtrl-F / Start searching",
			"\tCtrl-G / Find next",
			"\tShift-Ctrl-G / Find previous",
			"\tShift-Ctrl-F / Replace",
			"\tShift-Ctrl-R / Replace all",
			"\tAlt-F / Persistent search (dialog doesn't autoclose, enter to find next, Shift-Enter to find previous)",
			"\tAlt-G / Jump to line"
		],
		"description": "shortcut javascript for generateTool"
	},
	"Error message append in validation": {
		"prefix": "error_message_append",
		"body": [
			"errorMessage.appendMessage(",
			"\tVALIDATION_ERROR_TYPE.ERROR,",
			"\telement.attr('groupid'),",
			"\telement.attr('itemid'),",
			"\telement.attr('groupid'),",
			"\telement.attr('itemid'),",
			"\t'',",
			"\tDB_ERROR_CODE_DEFINITION['00010']['Normal']['MESSAGE'],",
			"\t''",
			");"
		],
		"description": "Error message append in validation"
	}
}